From 3ed70a9541cbfe83cbfdbf6dd6a8aa93b48af4a5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:14:00 +0200
Subject: [PATCH 001/412] Step 0.1: Create project

---
 .gitignore                  |  1 +
 .meteor/.finished-upgraders | 15 ++++++++++
 .meteor/.gitignore          |  1 +
 .meteor/.id                 |  7 +++++
 .meteor/packages            | 22 ++++++++++++++
 .meteor/platforms           |  2 ++
 .meteor/release             |  1 +
 .meteor/versions            | 72 +++++++++++++++++++++++++++++++++++++++++++++
 client/main.css             |  1 +
 client/main.html            | 25 ++++++++++++++++
 client/main.js              | 22 ++++++++++++++
 package.json                | 10 +++++++
 server/main.js              |  5 ++++
 13 files changed, 184 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 .meteor/.finished-upgraders
 create mode 100644 .meteor/.gitignore
 create mode 100644 .meteor/.id
 create mode 100644 .meteor/packages
 create mode 100644 .meteor/platforms
 create mode 100644 .meteor/release
 create mode 100644 .meteor/versions
 create mode 100644 client/main.css
 create mode 100644 client/main.html
 create mode 100644 client/main.js
 create mode 100644 package.json
 create mode 100644 server/main.js

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..40b878d
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+node_modules/
\ No newline at end of file
diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
new file mode 100644
index 0000000..aa60704
--- /dev/null
+++ b/.meteor/.finished-upgraders
@@ -0,0 +1,15 @@
+# This file contains information which helps Meteor properly upgrade your
+# app when you run 'meteor update'. You should check it into version control
+# with your project.
+
+notices-for-0.9.0
+notices-for-0.9.1
+0.9.4-platform-file
+notices-for-facebook-graph-api-2
+1.2.0-standard-minifiers-package
+1.2.0-meteor-platform-split
+1.2.0-cordova-changes
+1.2.0-breaking-changes
+1.3.0-split-minifiers-package
+1.4.0-remove-old-dev-bundle-link
+1.4.1-add-shell-server-package
diff --git a/.meteor/.gitignore b/.meteor/.gitignore
new file mode 100644
index 0000000..4083037
--- /dev/null
+++ b/.meteor/.gitignore
@@ -0,0 +1 @@
+local
diff --git a/.meteor/.id b/.meteor/.id
new file mode 100644
index 0000000..9576694
--- /dev/null
+++ b/.meteor/.id
@@ -0,0 +1,7 @@
+# This file contains a token that is unique to your project.
+# Check it into your repository along with the rest of this directory.
+# It can be used for purposes such as:
+#   - ensuring you don't accidentally deploy one app on top of another
+#   - providing package authors with aggregated statistics
+
+izkzocvxiv481sbjyh1
diff --git a/.meteor/packages b/.meteor/packages
new file mode 100644
index 0000000..801f3fc
--- /dev/null
+++ b/.meteor/packages
@@ -0,0 +1,22 @@
+# Meteor packages used by this project, one per line.
+# Check this file (and the other files in this directory) into your repository.
+#
+# 'meteor add' and 'meteor remove' will edit this file for you,
+# but you can also edit it by hand.
+
+meteor-base@1.0.4             # Packages every Meteor app needs to have
+mobile-experience@1.0.4       # Packages for a great mobile UX
+mongo@1.1.12_1                   # The database Meteor supports right now
+blaze-html-templates@1.0.4    # Compile .html files into Meteor Blaze views
+reactive-var@1.0.10            # Reactive variable for tracker
+jquery@1.11.9                  # Helpful client-side library
+tracker@1.1.0                 # Meteor's client-side reactive programming library
+
+standard-minifier-css@1.2.0_1   # CSS minifier run for production mode
+standard-minifier-js@1.2.0_1    # JS minifier run for production mode
+es5-shim@4.6.14_1                # ECMAScript 5 compatibility for older browsers.
+ecmascript@0.5.8_1              # Enable ECMAScript2015+ syntax in app code
+
+autopublish@1.0.7             # Publish all data to the clients (for prototyping)
+insecure@1.0.7                # Allow all DB writes from clients (for prototyping)
+shell-server
diff --git a/.meteor/platforms b/.meteor/platforms
new file mode 100644
index 0000000..efeba1b
--- /dev/null
+++ b/.meteor/platforms
@@ -0,0 +1,2 @@
+server
+browser
diff --git a/.meteor/release b/.meteor/release
new file mode 100644
index 0000000..2631a23
--- /dev/null
+++ b/.meteor/release
@@ -0,0 +1 @@
+METEOR@1.4.1.2
diff --git a/.meteor/versions b/.meteor/versions
new file mode 100644
index 0000000..8cc40eb
--- /dev/null
+++ b/.meteor/versions
@@ -0,0 +1,72 @@
+allow-deny@1.0.5
+autopublish@1.0.7
+autoupdate@1.2.11
+babel-compiler@6.9.1_1
+babel-runtime@0.1.11_1
+base64@1.0.9
+binary-heap@1.0.9
+blaze@2.1.9
+blaze-html-templates@1.0.5
+blaze-tools@1.0.10
+boilerplate-generator@1.0.10
+caching-compiler@1.1.7_1
+caching-html-compiler@1.0.7
+callback-hook@1.0.9
+check@1.2.3
+ddp@1.2.5
+ddp-client@1.2.9
+ddp-common@1.2.6
+ddp-server@1.2.10
+deps@1.0.12
+diff-sequence@1.0.6
+ecmascript@0.5.8_1
+ecmascript-runtime@0.3.14_1
+ejson@1.0.12
+es5-shim@4.6.14_1
+fastclick@1.0.12
+geojson-utils@1.0.9
+hot-code-push@1.0.4
+html-tools@1.0.11
+htmljs@1.0.11
+http@1.1.8
+id-map@1.0.8
+insecure@1.0.7
+jquery@1.11.9
+launch-screen@1.0.12
+livedata@1.0.18
+logging@1.1.15_1
+meteor@1.2.17_1
+meteor-base@1.0.4
+minifier-css@1.2.14_1
+minifier-js@1.2.14_1
+minimongo@1.0.17
+mobile-experience@1.0.4
+mobile-status-bar@1.0.12
+modules@0.7.6_1
+modules-runtime@0.7.6_1
+mongo@1.1.12_5
+mongo-id@1.0.5
+npm-mongo@2.2.10_1
+observe-sequence@1.0.13
+ordered-dict@1.0.8
+promise@0.8.7
+random@1.0.10
+reactive-var@1.0.10
+reload@1.1.10
+retry@1.0.8
+routepolicy@1.0.11
+shell-server@0.2.1
+spacebars@1.0.13
+spacebars-compiler@1.0.13
+standard-minifier-css@1.2.1
+standard-minifier-js@1.2.0_1
+templating@1.2.15
+templating-compiler@1.2.15
+templating-runtime@1.2.15
+templating-tools@1.0.5
+tracker@1.1.0
+ui@1.0.12
+underscore@1.0.9
+url@1.0.10
+webapp@1.3.11_1
+webapp-hashing@1.0.9
diff --git a/client/main.css b/client/main.css
new file mode 100644
index 0000000..b6b4052
--- /dev/null
+++ b/client/main.css
@@ -0,0 +1 @@
+/* CSS declarations go here */
diff --git a/client/main.html b/client/main.html
new file mode 100644
index 0000000..203539b
--- /dev/null
+++ b/client/main.html
@@ -0,0 +1,25 @@
+<head>
+  <title>simple</title>
+</head>
+
+<body>
+  <h1>Welcome to Meteor!</h1>
+
+  {{> hello}}
+  {{> info}}
+</body>
+
+<template name="hello">
+  <button>Click Me</button>
+  <p>You've pressed the button {{counter}} times.</p>
+</template>
+
+<template name="info">
+  <h2>Learn Meteor!</h2>
+  <ul>
+    <li><a href="https://www.meteor.com/try">Do the Tutorial</a></li>
+    <li><a href="http://guide.meteor.com">Follow the Guide</a></li>
+    <li><a href="https://docs.meteor.com">Read the Docs</a></li>
+    <li><a href="https://forums.meteor.com">Discussions</a></li>
+  </ul>
+</template>
\ No newline at end of file
diff --git a/client/main.js b/client/main.js
new file mode 100644
index 0000000..ecb3282
--- /dev/null
+++ b/client/main.js
@@ -0,0 +1,22 @@
+import { Template } from 'meteor/templating';
+import { ReactiveVar } from 'meteor/reactive-var';
+
+import './main.html';
+
+Template.hello.onCreated(function helloOnCreated() {
+  // counter starts at 0
+  this.counter = new ReactiveVar(0);
+});
+
+Template.hello.helpers({
+  counter() {
+    return Template.instance().counter.get();
+  },
+});
+
+Template.hello.events({
+  'click button'(event, instance) {
+    // increment the counter when button is clicked
+    instance.counter.set(instance.counter.get() + 1);
+  },
+});
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..196e6e1
--- /dev/null
+++ b/package.json
@@ -0,0 +1,10 @@
+{
+  "name": "socially",
+  "private": true,
+  "scripts": {
+    "start": "meteor run"
+  },
+  "dependencies": {
+    "meteor-node-stubs": "~0.2.0"
+  }
+}
diff --git a/server/main.js b/server/main.js
new file mode 100644
index 0000000..31a9e0e
--- /dev/null
+++ b/server/main.js
@@ -0,0 +1,5 @@
+import { Meteor } from 'meteor/meteor';
+
+Meteor.startup(() => {
+  // code to run on server at startup
+});
-- 
2.7.4


From 04c6f86f078098ce124f1dec399b88fddcdafeeb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:15:57 +0200
Subject: [PATCH 002/412] Step 0.2: Remove project files

---
 client/main.css  |  1 -
 client/main.html | 25 -------------------------
 client/main.js   | 22 ----------------------
 server/main.js   |  5 -----
 4 files changed, 53 deletions(-)
 delete mode 100644 client/main.css
 delete mode 100644 client/main.html
 delete mode 100644 client/main.js
 delete mode 100644 server/main.js

diff --git a/client/main.css b/client/main.css
deleted file mode 100644
index b6b4052..0000000
--- a/client/main.css
+++ /dev/null
@@ -1 +0,0 @@
-/* CSS declarations go here */
diff --git a/client/main.html b/client/main.html
deleted file mode 100644
index 203539b..0000000
--- a/client/main.html
+++ /dev/null
@@ -1,25 +0,0 @@
-<head>
-  <title>simple</title>
-</head>
-
-<body>
-  <h1>Welcome to Meteor!</h1>
-
-  {{> hello}}
-  {{> info}}
-</body>
-
-<template name="hello">
-  <button>Click Me</button>
-  <p>You've pressed the button {{counter}} times.</p>
-</template>
-
-<template name="info">
-  <h2>Learn Meteor!</h2>
-  <ul>
-    <li><a href="https://www.meteor.com/try">Do the Tutorial</a></li>
-    <li><a href="http://guide.meteor.com">Follow the Guide</a></li>
-    <li><a href="https://docs.meteor.com">Read the Docs</a></li>
-    <li><a href="https://forums.meteor.com">Discussions</a></li>
-  </ul>
-</template>
\ No newline at end of file
diff --git a/client/main.js b/client/main.js
deleted file mode 100644
index ecb3282..0000000
--- a/client/main.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import { Template } from 'meteor/templating';
-import { ReactiveVar } from 'meteor/reactive-var';
-
-import './main.html';
-
-Template.hello.onCreated(function helloOnCreated() {
-  // counter starts at 0
-  this.counter = new ReactiveVar(0);
-});
-
-Template.hello.helpers({
-  counter() {
-    return Template.instance().counter.get();
-  },
-});
-
-Template.hello.events({
-  'click button'(event, instance) {
-    // increment the counter when button is clicked
-    instance.counter.set(instance.counter.get() + 1);
-  },
-});
diff --git a/server/main.js b/server/main.js
deleted file mode 100644
index 31a9e0e..0000000
--- a/server/main.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-
-Meteor.startup(() => {
-  // code to run on server at startup
-});
-- 
2.7.4


From e2b83efe946e03e96ed9f5404dca47f7da85bcc4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:29:56 +0200
Subject: [PATCH 003/412] Step 0.3: Create an empty html file

---
 client/index.html | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 client/index.html

diff --git a/client/index.html b/client/index.html
new file mode 100644
index 0000000..ef412ef
--- /dev/null
+++ b/client/index.html
@@ -0,0 +1,3 @@
+<body>
+  <p>Nothing here</p>
+</body>
-- 
2.7.4


From 72b9d025897fa04ff6f8f44fa728dd312c22de69 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:33:17 +0200
Subject: [PATCH 004/412] Step 0.4: Remove `blaze-html-templates` and
 `ecmascript`

---
 .meteor/packages | 20 +++++++++-----------
 .meteor/versions |  7 -------
 2 files changed, 9 insertions(+), 18 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 801f3fc..365a3d5 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -4,18 +4,16 @@
 # 'meteor add' and 'meteor remove' will edit this file for you,
 # but you can also edit it by hand.
 
-meteor-base@1.0.4             # Packages every Meteor app needs to have
-mobile-experience@1.0.4       # Packages for a great mobile UX
-mongo@1.1.12_1                   # The database Meteor supports right now
-blaze-html-templates@1.0.4    # Compile .html files into Meteor Blaze views
-reactive-var@1.0.10            # Reactive variable for tracker
-jquery@1.11.9                  # Helpful client-side library
-tracker@1.1.0                 # Meteor's client-side reactive programming library
+meteor-base             # Packages every Meteor app needs to have
+mobile-experience       # Packages for a great mobile UX
+mongo                   # The database Meteor supports right now
+reactive-var            # Reactive variable for tracker
+jquery                  # Helpful client-side library
+tracker                 # Meteor's client-side reactive programming library
 
-standard-minifier-css@1.2.0_1   # CSS minifier run for production mode
-standard-minifier-js@1.2.0_1    # JS minifier run for production mode
-es5-shim@4.6.14_1                # ECMAScript 5 compatibility for older browsers.
-ecmascript@0.5.8_1              # Enable ECMAScript2015+ syntax in app code
+standard-minifier-css   # CSS minifier run for production mode
+standard-minifier-js    # JS minifier run for production mode
+es5-shim                # ECMAScript 5 compatibility for older browsers.
 
 autopublish@1.0.7             # Publish all data to the clients (for prototyping)
 insecure@1.0.7                # Allow all DB writes from clients (for prototyping)
diff --git a/.meteor/versions b/.meteor/versions
index 8cc40eb..9fcabc4 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -6,11 +6,8 @@ babel-runtime@0.1.11_1
 base64@1.0.9
 binary-heap@1.0.9
 blaze@2.1.9
-blaze-html-templates@1.0.5
 blaze-tools@1.0.10
 boilerplate-generator@1.0.10
-caching-compiler@1.1.7_1
-caching-html-compiler@1.0.7
 callback-hook@1.0.9
 check@1.2.3
 ddp@1.2.5
@@ -60,10 +57,6 @@ spacebars@1.0.13
 spacebars-compiler@1.0.13
 standard-minifier-css@1.2.1
 standard-minifier-js@1.2.0_1
-templating@1.2.15
-templating-compiler@1.2.15
-templating-runtime@1.2.15
-templating-tools@1.0.5
 tracker@1.1.0
 ui@1.0.12
 underscore@1.0.9
-- 
2.7.4


From 055084db2ea3b902cd009e8705421c71032e881c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:35:22 +0200
Subject: [PATCH 005/412] Step 0.5: Add `angular-templates` and
 `pbastowski:angular-babel`

---
 .meteor/packages | 7 ++++---
 .meteor/versions | 5 ++++-
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 365a3d5..d74ee49 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -15,6 +15,7 @@ standard-minifier-css   # CSS minifier run for production mode
 standard-minifier-js    # JS minifier run for production mode
 es5-shim                # ECMAScript 5 compatibility for older browsers.
 
-autopublish@1.0.7             # Publish all data to the clients (for prototyping)
-insecure@1.0.7                # Allow all DB writes from clients (for prototyping)
-shell-server
+autopublish             # Publish all data to the clients (for prototyping)
+insecure                # Allow all DB writes from clients (for prototyping)
+pbastowski:angular-babel
+angular-templates
diff --git a/.meteor/versions b/.meteor/versions
index 9fcabc4..5358258 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,4 +1,5 @@
 allow-deny@1.0.5
+angular-templates@1.0.9
 autopublish@1.0.7
 autoupdate@1.2.11
 babel-compiler@6.9.1_1
@@ -8,6 +9,7 @@ binary-heap@1.0.9
 blaze@2.1.9
 blaze-tools@1.0.10
 boilerplate-generator@1.0.10
+caching-compiler@1.0.6
 callback-hook@1.0.9
 check@1.2.3
 ddp@1.2.5
@@ -46,13 +48,13 @@ mongo-id@1.0.5
 npm-mongo@2.2.10_1
 observe-sequence@1.0.13
 ordered-dict@1.0.8
+pbastowski:angular-babel@1.3.6
 promise@0.8.7
 random@1.0.10
 reactive-var@1.0.10
 reload@1.1.10
 retry@1.0.8
 routepolicy@1.0.11
-shell-server@0.2.1
 spacebars@1.0.13
 spacebars-compiler@1.0.13
 standard-minifier-css@1.2.1
@@ -60,6 +62,7 @@ standard-minifier-js@1.2.0_1
 tracker@1.1.0
 ui@1.0.12
 underscore@1.0.9
+urigo:static-html-compiler@0.1.8
 url@1.0.10
 webapp@1.3.11_1
 webapp-hashing@1.0.9
-- 
2.7.4


From 55365cc83bf1f45f3a811b96d4174e43ec6e3d65 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:36:09 +0200
Subject: [PATCH 006/412] Step 0.6: Add `angular` and `angular-meteor`

---
 package.json | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/package.json b/package.json
index 196e6e1..1fdb919 100644
--- a/package.json
+++ b/package.json
@@ -5,6 +5,8 @@
     "start": "meteor run"
   },
   "dependencies": {
+    "angular": "^1.5.3",
+    "angular-meteor": "^1.3.9",
     "meteor-node-stubs": "~0.2.0"
   }
 }
-- 
2.7.4


From 7399a7dc27516dda7a9cd8f19c1f5b152f922859 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:38:27 +0200
Subject: [PATCH 007/412] Step 0.7: Move the main content to a new file

---
 client/main.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 client/main.html

diff --git a/client/main.html b/client/main.html
new file mode 100644
index 0000000..79ed426
--- /dev/null
+++ b/client/main.html
@@ -0,0 +1 @@
+<p>Nothing here</p>
-- 
2.7.4


From 3cea70773ddf894b7c543ffc1cc8aa2936438d87 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:39:02 +0200
Subject: [PATCH 008/412] Step 0.8: Add `ng-include` that loads the main.html
 file

---
 client/index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/index.html b/client/index.html
index ef412ef..6378317 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,3 +1,3 @@
 <body>
-  <p>Nothing here</p>
+  <div ng-include src="'client/main.html'"></div>
 </body>
-- 
2.7.4


From f32b5f249da93d0694e91a029c68b4e1cb01d06e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:41:54 +0200
Subject: [PATCH 009/412] Step 0.9: Add main.js with angular module

---
 client/main.js | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 client/main.js

diff --git a/client/main.js b/client/main.js
new file mode 100644
index 0000000..558ad57
--- /dev/null
+++ b/client/main.js
@@ -0,0 +1,6 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+angular.module('socially', [
+  angularMeteor
+]);
-- 
2.7.4


From 9a3c46dc36f90b40720df2ef234c4b18352a29cd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:42:29 +0200
Subject: [PATCH 010/412] Step 0.10: Add usage of `ng-app` in our app

---
 client/index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/index.html b/client/index.html
index 6378317..f6b9ac4 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,3 +1,3 @@
-<body>
+<body ng-app="socially">
   <div ng-include src="'client/main.html'"></div>
 </body>
-- 
2.7.4


From 62e38b66be49779206a63733abfea5521ccfe23e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:47:16 +0200
Subject: [PATCH 011/412] Step 0.11: Add some AngularJS code !

---
 client/main.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/main.html b/client/main.html
index 79ed426..a9c8ddc 100644
--- a/client/main.html
+++ b/client/main.html
@@ -1 +1 @@
-<p>Nothing here</p>
+<p>Nothing here {{ 'yet' + '!' }}</p>
-- 
2.7.4


From eded909a9ce9667c2bdaa7298c27c54ffdf89a4b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:48:04 +0200
Subject: [PATCH 012/412] Step 1.1: Add some static HTML the to main page

---
 client/main.html | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/client/main.html b/client/main.html
index a9c8ddc..dd1ef68 100644
--- a/client/main.html
+++ b/client/main.html
@@ -1 +1,14 @@
-<p>Nothing here {{ 'yet' + '!' }}</p>
+<ul>
+  <li>
+    <span>Dubstep-Free Zone</span>
+    <p>
+      Can we please just for an evening not listen to dubstep.
+    </p>
+  </li>
+  <li>
+    <span>All dubstep all the time</span>
+    <p>
+      Get it on!
+    </p>
+  </li>
+</ul>
-- 
2.7.4


From 0d8995c1265393cf2efdaef03689f85c7126d388 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:49:31 +0200
Subject: [PATCH 013/412] Step 2.1: Use dynamic template instead of static

---
 client/main.html | 22 ++++++++--------------
 1 file changed, 8 insertions(+), 14 deletions(-)

diff --git a/client/main.html b/client/main.html
index dd1ef68..7f8c6d9 100644
--- a/client/main.html
+++ b/client/main.html
@@ -1,14 +1,8 @@
-<ul>
-  <li>
-    <span>Dubstep-Free Zone</span>
-    <p>
-      Can we please just for an evening not listen to dubstep.
-    </p>
-  </li>
-  <li>
-    <span>All dubstep all the time</span>
-    <p>
-      Get it on!
-    </p>
-  </li>
-</ul>
+<div ng-controller="PartiesListCtrl">
+  <ul>
+    <li ng-repeat="party in parties">
+      {{party.name}}
+      <p>{{party.description}}</p>
+    </li>
+  </ul>
+</div>
-- 
2.7.4


From ad2ce953ce81eded8f3e62ddb9c3df4627d3edf0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:50:30 +0200
Subject: [PATCH 014/412] Step 2.2: Add the parties controller

---
 client/main.js | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/client/main.js b/client/main.js
index 558ad57..abc441c 100644
--- a/client/main.js
+++ b/client/main.js
@@ -2,5 +2,17 @@ import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
 angular.module('socially', [
-  angularMeteor
-]);
+    angularMeteor
+  ])
+  .controller('PartiesListCtrl', ['$scope', function($scope) {
+    $scope.parties = [{
+      'name': 'Dubstep-Free Zone',
+      'description': 'Can we please just for an evening not listen to dubstep.'
+    }, {
+      'name': 'All dubstep all the time',
+      'description': 'Get it on!'
+    }, {
+      'name': 'Savage lounging',
+      'description': 'Leisure suit required. And only fiercest manners.'
+    }];
+  }]);
-- 
2.7.4


From 40ee7395a2bb3c70d2e77f9d87b6a75b8168e770 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:51:13 +0200
Subject: [PATCH 015/412] Step 2.3: Remove the DI manual decleration

---
 client/main.js | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/client/main.js b/client/main.js
index abc441c..feb14f8 100644
--- a/client/main.js
+++ b/client/main.js
@@ -4,7 +4,9 @@ import angularMeteor from 'angular-meteor';
 angular.module('socially', [
     angularMeteor
   ])
-  .controller('PartiesListCtrl', ['$scope', function($scope) {
+  .controller('PartiesListCtrl', function($scope) {
+    'ngInject';
+    
     $scope.parties = [{
       'name': 'Dubstep-Free Zone',
       'description': 'Can we please just for an evening not listen to dubstep.'
@@ -15,4 +17,4 @@ angular.module('socially', [
       'name': 'Savage lounging',
       'description': 'Leisure suit required. And only fiercest manners.'
     }];
-  }]);
+  });
-- 
2.7.4


From 0c08274ce8ab934d35dbf184558b346c48afd4bd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:51:56 +0200
Subject: [PATCH 016/412] Step 2.4: Add ng-strict-di directive to the app

---
 client/index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/index.html b/client/index.html
index f6b9ac4..48c2d09 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,3 +1,3 @@
-<body ng-app="socially">
+<body ng-app="socially" ng-strict-di="">
   <div ng-include src="'client/main.html'"></div>
 </body>
-- 
2.7.4


From e828d0869e9cce24eb8358ba0512e797b169d159 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:56:08 +0200
Subject: [PATCH 017/412] Step 3.1: Add the parties collection

---
 collections/parties.js | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 collections/parties.js

diff --git a/collections/parties.js b/collections/parties.js
new file mode 100644
index 0000000..f78fa2c
--- /dev/null
+++ b/collections/parties.js
@@ -0,0 +1 @@
+Parties = new Mongo.Collection('parties');
-- 
2.7.4


From 2dcd7414b0493e96f7e23b47e7ce66d0d40f4566 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 09:56:46 +0200
Subject: [PATCH 018/412] Step 3.2: Add the parties collection helper

---
 client/main.js | 17 ++++++-----------
 1 file changed, 6 insertions(+), 11 deletions(-)

diff --git a/client/main.js b/client/main.js
index feb14f8..1b17ade 100644
--- a/client/main.js
+++ b/client/main.js
@@ -6,15 +6,10 @@ angular.module('socially', [
   ])
   .controller('PartiesListCtrl', function($scope) {
     'ngInject';
-    
-    $scope.parties = [{
-      'name': 'Dubstep-Free Zone',
-      'description': 'Can we please just for an evening not listen to dubstep.'
-    }, {
-      'name': 'All dubstep all the time',
-      'description': 'Get it on!'
-    }, {
-      'name': 'Savage lounging',
-      'description': 'Leisure suit required. And only fiercest manners.'
-    }];
+
+    $scope.helpers({
+      parties() {
+        return Parties.find({});
+      }
+    });
   });
-- 
2.7.4


From 1aa58ef97758b86a1c065b29c10a54c2f6d4b1ae Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:00:24 +0200
Subject: [PATCH 019/412] Step 3.3: Add some data to the parties collection

---
 server/startup.js | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)
 create mode 100644 server/startup.js

diff --git a/server/startup.js b/server/startup.js
new file mode 100644
index 0000000..ad3fd85
--- /dev/null
+++ b/server/startup.js
@@ -0,0 +1,18 @@
+Meteor.startup(() => {
+  if (Parties.find().count() === 0) {
+    const parties = [{
+      'name': 'Dubstep-Free Zone',
+      'description': 'Fast just got faster with Nexus S.'
+    }, {
+      'name': 'All dubstep all the time',
+      'description': 'Get it on!'
+    }, {
+      'name': 'Savage lounging',
+      'description': 'Leisure suit required. And only fiercest manners.'
+    }];
+
+    parties.forEach((party) => {
+      Parties.insert(party)
+    });
+  }
+});
-- 
2.7.4


From 04b86b4d7cc2637fbdec678570c2e1791ded1ca7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:00:58 +0200
Subject: [PATCH 020/412] Step 3.4: Change to use controllerAs syntax

---
 client/main.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/main.html b/client/main.html
index 7f8c6d9..62eca58 100644
--- a/client/main.html
+++ b/client/main.html
@@ -1,6 +1,6 @@
-<div ng-controller="PartiesListCtrl">
+<div ng-controller="PartiesListCtrl as vm">
   <ul>
-    <li ng-repeat="party in parties">
+    <li ng-repeat="party in vm.parties">
       {{party.name}}
       <p>{{party.description}}</p>
     </li>
-- 
2.7.4


From ee969910a00c42a65726aa16191a255741b00053 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:07:22 +0200
Subject: [PATCH 021/412] Step 3.5: Change the parties controller to use
 $reactive and `this` instead of `$scope`

---
 client/main.js | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/client/main.js b/client/main.js
index 1b17ade..58efe3e 100644
--- a/client/main.js
+++ b/client/main.js
@@ -4,10 +4,12 @@ import angularMeteor from 'angular-meteor';
 angular.module('socially', [
     angularMeteor
   ])
-  .controller('PartiesListCtrl', function($scope) {
+  .controller('PartiesListCtrl', function($scope, $reactive) {
     'ngInject';
 
-    $scope.helpers({
+    $reactive(this).attach($scope);
+
+    this.helpers({
       parties() {
         return Parties.find({});
       }
-- 
2.7.4


From c043d0507f314ea31cf5c3831464085b09ab8bcc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:12:43 +0200
Subject: [PATCH 022/412] Step 3.6: Refactor PartiesListCtrl to be a component

---
 client/main.js | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

diff --git a/client/main.js b/client/main.js
index 58efe3e..a898321 100644
--- a/client/main.js
+++ b/client/main.js
@@ -4,14 +4,18 @@ import angularMeteor from 'angular-meteor';
 angular.module('socially', [
     angularMeteor
   ])
-  .controller('PartiesListCtrl', function($scope, $reactive) {
-    'ngInject';
+  .component('partiesList', {
+    templateUrl: 'client/partiesList.html',
+    controllerAs: 'partiesList',
+    controller($scope, $reactive) {
+      'ngInject';
 
-    $reactive(this).attach($scope);
+      $reactive(this).attach($scope);
 
-    this.helpers({
-      parties() {
-        return Parties.find({});
-      }
-    });
+      this.helpers({
+        parties() {
+          return Parties.find({});
+        }
+      });
+    }
   });
-- 
2.7.4


From a05c139d5f3685e0819ae4ca4c3d7a0f5acc8b77 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:13:37 +0200
Subject: [PATCH 023/412] Step 3.7: Change usage from controllerAs to
 components code-style - view

---
 client/index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/index.html b/client/index.html
index 48c2d09..84f0ef3 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,3 +1,3 @@
 <body ng-app="socially" ng-strict-di="">
-  <div ng-include src="'client/main.html'"></div>
+  <parties-list></parties-list>
 </body>
-- 
2.7.4


From 7cf5e12d5eda91ab96930f5555724a77a1fade4e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:14:22 +0200
Subject: [PATCH 024/412] Step 3.8: Move the parties list to a different HTML
 file

---
 client/partiesList.html | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 client/partiesList.html

diff --git a/client/partiesList.html b/client/partiesList.html
new file mode 100644
index 0000000..64ac441
--- /dev/null
+++ b/client/partiesList.html
@@ -0,0 +1,6 @@
+<ul>
+  <li ng-repeat="party in partiesList.parties">
+    {{party.name}}
+    <p>{{party.description}}</p>
+  </li>
+</ul>
-- 
2.7.4


From b16ac0f3bb257fcaa389f2dd08b1261da07bc83f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:25:52 +0200
Subject: [PATCH 025/412] Step 3.9: Move PartiesList to imports

---
 imports/ui/components/partiesList/partiesList.js | 27 ++++++++++++++++++++++++
 1 file changed, 27 insertions(+)
 create mode 100644 imports/ui/components/partiesList/partiesList.js

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
new file mode 100644
index 0000000..a5a8a27
--- /dev/null
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -0,0 +1,27 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+class PartiesList {
+  constructor($scope, $reactive) {
+    'ngInject';
+
+    $reactive(this).attach($scope);
+
+    this.helpers({
+      parties() {
+        return Parties.find({});
+      }
+    });
+  }
+}
+
+const name = 'partiesList';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  templateUrl: `imports/ui/components/${name}/${name}.html`,
+  controllerAs: name,
+  controller: PartiesList
+});
-- 
2.7.4


From db13c67f9dfe113ae837058bfc8affad6dcdce77 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:26:25 +0200
Subject: [PATCH 026/412] Step 3.10: Move PartiesList view to imports

---
 imports/ui/components/partiesList/partiesList.html | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 imports/ui/components/partiesList/partiesList.html

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
new file mode 100644
index 0000000..64ac441
--- /dev/null
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -0,0 +1,6 @@
+<ul>
+  <li ng-repeat="party in partiesList.parties">
+    {{party.name}}
+    <p>{{party.description}}</p>
+  </li>
+</ul>
-- 
2.7.4


From 4d13a74491ed2643770f29875021873095c37036 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:27:59 +0200
Subject: [PATCH 027/412] Step 3.11: Use PartiesList from imports

---
 client/main.js | 22 +++++-----------------
 1 file changed, 5 insertions(+), 17 deletions(-)

diff --git a/client/main.js b/client/main.js
index a898321..d643c33 100644
--- a/client/main.js
+++ b/client/main.js
@@ -1,21 +1,9 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
-angular.module('socially', [
-    angularMeteor
-  ])
-  .component('partiesList', {
-    templateUrl: 'client/partiesList.html',
-    controllerAs: 'partiesList',
-    controller($scope, $reactive) {
-      'ngInject';
-
-      $reactive(this).attach($scope);
+import { name as PartiesList } from '../imports/ui/components/partiesList/partiesList';
 
-      this.helpers({
-        parties() {
-          return Parties.find({});
-        }
-      });
-    }
-  });
+angular.module('socially', [
+    angularMeteor,
+    PartiesList
+  ]);
-- 
2.7.4


From e9b4abd19f2926cc0d5a50652fb104c08f6f1aeb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:28:46 +0200
Subject: [PATCH 028/412] Step 3.12: Remove old partiesList.html

---
 client/partiesList.html | 6 ------
 1 file changed, 6 deletions(-)
 delete mode 100644 client/partiesList.html

diff --git a/client/partiesList.html b/client/partiesList.html
deleted file mode 100644
index 64ac441..0000000
--- a/client/partiesList.html
+++ /dev/null
@@ -1,6 +0,0 @@
-<ul>
-  <li ng-repeat="party in partiesList.parties">
-    {{party.name}}
-    <p>{{party.description}}</p>
-  </li>
-</ul>
-- 
2.7.4


From 30f38bfef4ed274c5287501aca179b4abdbcc2e4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:29:23 +0200
Subject: [PATCH 029/412] Step 3.13: Remove unused main.html

---
 client/main.html | 8 --------
 1 file changed, 8 deletions(-)
 delete mode 100644 client/main.html

diff --git a/client/main.html b/client/main.html
deleted file mode 100644
index 62eca58..0000000
--- a/client/main.html
+++ /dev/null
@@ -1,8 +0,0 @@
-<div ng-controller="PartiesListCtrl as vm">
-  <ul>
-    <li ng-repeat="party in vm.parties">
-      {{party.name}}
-      <p>{{party.description}}</p>
-    </li>
-  </ul>
-</div>
-- 
2.7.4


From e8029ef74b03657b2a89768b59a2f15bee8987f9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:29:59 +0200
Subject: [PATCH 030/412] Step 3.14: Import template

---
 imports/ui/components/partiesList/partiesList.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index a5a8a27..ba6973f 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -1,6 +1,8 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
+import templateUrl from './partiesList.html';
+
 class PartiesList {
   constructor($scope, $reactive) {
     'ngInject';
@@ -21,7 +23,7 @@ const name = 'partiesList';
 export default angular.module(name, [
   angularMeteor
 ]).component(name, {
-  templateUrl: `imports/ui/components/${name}/${name}.html`,
+  templateUrl,
   controllerAs: name,
   controller: PartiesList
 });
-- 
2.7.4


From 8a227ea25382ba2d0f15089d069efd5bb1dddd05 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 12 May 2016 10:18:38 +0200
Subject: [PATCH 031/412] Step 3.15: Add static-templates

---
 .meteor/packages | 2 +-
 .meteor/versions | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index d74ee49..7474951 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -18,4 +18,4 @@ es5-shim                # ECMAScript 5 compatibility for older browsers.
 autopublish             # Publish all data to the clients (for prototyping)
 insecure                # Allow all DB writes from clients (for prototyping)
 pbastowski:angular-babel
-angular-templates
+urigo:static-templates
diff --git a/.meteor/versions b/.meteor/versions
index 5358258..cf253c0 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,5 +1,4 @@
 allow-deny@1.0.5
-angular-templates@1.0.9
 autopublish@1.0.7
 autoupdate@1.2.11
 babel-compiler@6.9.1_1
@@ -63,6 +62,7 @@ tracker@1.1.0
 ui@1.0.12
 underscore@1.0.9
 urigo:static-html-compiler@0.1.8
+urigo:static-templates@0.1.3
 url@1.0.10
 webapp@1.3.11_1
 webapp-hashing@1.0.9
-- 
2.7.4


From 58587acca7e14b6e5632c2a7a6a832416bf0e154 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 12 May 2016 10:19:21 +0200
Subject: [PATCH 032/412] Step 3.16: Switch from templateUrl to template

---
 imports/ui/components/partiesList/partiesList.js | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index ba6973f..fc2bdd6 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -1,7 +1,7 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
-import templateUrl from './partiesList.html';
+import template from './partiesList.html';
 
 class PartiesList {
   constructor($scope, $reactive) {
@@ -23,7 +23,7 @@ const name = 'partiesList';
 export default angular.module(name, [
   angularMeteor
 ]).component(name, {
-  templateUrl,
+  template,
   controllerAs: name,
   controller: PartiesList
 });
-- 
2.7.4


From e8e06bd7f7c9bb70a6e5fb0af54caca0fe85f7f3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:31:27 +0200
Subject: [PATCH 033/412] Step 3.17: Create view for Socially component

---
 imports/ui/components/socially/socially.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 imports/ui/components/socially/socially.html

diff --git a/imports/ui/components/socially/socially.html b/imports/ui/components/socially/socially.html
new file mode 100644
index 0000000..5e9673b
--- /dev/null
+++ b/imports/ui/components/socially/socially.html
@@ -0,0 +1 @@
+<parties-list></parties-list>
-- 
2.7.4


From 4aa804d6d14025accbeef932cc47262a25629795 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:32:56 +0200
Subject: [PATCH 034/412] Step 3.18: Create Socially component

---
 imports/ui/components/socially/socially.js | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)
 create mode 100644 imports/ui/components/socially/socially.js

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
new file mode 100644
index 0000000..2a99481
--- /dev/null
+++ b/imports/ui/components/socially/socially.js
@@ -0,0 +1,19 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import template from './socially.html';
+import { name as PartiesList } from '../partiesList/partiesList';
+
+class Socially {}
+
+const name = 'socially';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  PartiesList
+]).component(name, {
+  template,
+  controllerAs: name,
+  controller: Socially
+});
-- 
2.7.4


From 85aefe9bd9dd566c6192f3c801f3d0a5895a5b57 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:33:26 +0200
Subject: [PATCH 035/412] Step 3.19: Replace parties-list with socially

---
 client/index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/index.html b/client/index.html
index 84f0ef3..e6d21ea 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,3 +1,3 @@
 <body ng-app="socially" ng-strict-di="">
-  <parties-list></parties-list>
+  <socially></socially>
 </body>
-- 
2.7.4


From 615fee114654862f342c2f37a20342426f607d07 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:34:53 +0200
Subject: [PATCH 036/412] Step 3.20: Import Socially in main.js

---
 client/main.js | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/client/main.js b/client/main.js
index d643c33..212f992 100644
--- a/client/main.js
+++ b/client/main.js
@@ -1,9 +1,4 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
-import { name as PartiesList } from '../imports/ui/components/partiesList/partiesList';
-
-angular.module('socially', [
-    angularMeteor,
-    PartiesList
-  ]);
+import { name as Socially } from '../imports/ui/components/socially/socially';
-- 
2.7.4


From 340a1be0bc12c86a751ed283e0811d836074a27f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:35:46 +0200
Subject: [PATCH 037/412] Step 4.1: Create template for PartyAdd component

---
 imports/ui/components/partyAdd/partyAdd.html | 11 +++++++++++
 1 file changed, 11 insertions(+)
 create mode 100644 imports/ui/components/partyAdd/partyAdd.html

diff --git a/imports/ui/components/partyAdd/partyAdd.html b/imports/ui/components/partyAdd/partyAdd.html
new file mode 100644
index 0000000..a61cf04
--- /dev/null
+++ b/imports/ui/components/partyAdd/partyAdd.html
@@ -0,0 +1,11 @@
+<form>
+  <label>
+    Party Name:
+  </label>
+  <input type="text"/>
+  <label>
+    Description:
+  </label>
+  <input type="text"/>
+  <button>Add Party!</button>
+</form>
-- 
2.7.4


From ddfc630471d03ed838e8a0dda96bcfc39f53fe7e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:36:39 +0200
Subject: [PATCH 038/412] Step 4.2: Create PartyAdd component

---
 imports/ui/components/partyAdd/partyAdd.js | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)
 create mode 100644 imports/ui/components/partyAdd/partyAdd.js

diff --git a/imports/ui/components/partyAdd/partyAdd.js b/imports/ui/components/partyAdd/partyAdd.js
new file mode 100644
index 0000000..bec462e
--- /dev/null
+++ b/imports/ui/components/partyAdd/partyAdd.js
@@ -0,0 +1,17 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import template from './partyAdd.html';
+
+class PartyAdd {}
+
+const name = 'partyAdd';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name,
+  controller: PartyAdd
+});
-- 
2.7.4


From 10746738d40313d346c15c559fb7df2305e3b10f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:37:19 +0200
Subject: [PATCH 039/412] Step 4.3: Implement PartyAdd to the view

---
 imports/ui/components/partiesList/partiesList.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 64ac441..229908b 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -1,3 +1,5 @@
+<party-add></party-add>
+
 <ul>
   <li ng-repeat="party in partiesList.parties">
     {{party.name}}
-- 
2.7.4


From d3c1049b9b0eddd6e11056b55f47a497ff768bb4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:42:22 +0200
Subject: [PATCH 040/412] Step 4.4: Add PartyAdd to PartiesList

---
 imports/ui/components/partiesList/partiesList.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index fc2bdd6..9acb917 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -2,6 +2,7 @@ import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
 import template from './partiesList.html';
+import { name as PartyAdd } from '../partyAdd/partyAdd';
 
 class PartiesList {
   constructor($scope, $reactive) {
@@ -21,7 +22,8 @@ const name = 'partiesList';
 
 // create a module
 export default angular.module(name, [
-  angularMeteor
+  angularMeteor,
+  PartyAdd
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From b6875a9b4da6728e722cca6cb4a2cd701df96145 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:43:11 +0200
Subject: [PATCH 041/412] Step 4.5: Add ng-model to the form inputs

---
 imports/ui/components/partyAdd/partyAdd.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/partyAdd/partyAdd.html b/imports/ui/components/partyAdd/partyAdd.html
index a61cf04..f035ecd 100644
--- a/imports/ui/components/partyAdd/partyAdd.html
+++ b/imports/ui/components/partyAdd/partyAdd.html
@@ -2,10 +2,10 @@
   <label>
     Party Name:
   </label>
-  <input type="text"/>
+  <input type="text" ng-model="partyAdd.party.name" />
   <label>
     Description:
   </label>
-  <input type="text"/>
+  <input type="text" ng-model="partyAdd.party.description" />
   <button>Add Party!</button>
 </form>
-- 
2.7.4


From e94979085c8313965c3b0cdfa9fd1386e6f97c7d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:46:01 +0200
Subject: [PATCH 042/412] Step 4.6: Add submit method to the button

---
 imports/ui/components/partyAdd/partyAdd.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyAdd/partyAdd.html b/imports/ui/components/partyAdd/partyAdd.html
index f035ecd..3508bef 100644
--- a/imports/ui/components/partyAdd/partyAdd.html
+++ b/imports/ui/components/partyAdd/partyAdd.html
@@ -7,5 +7,5 @@
     Description:
   </label>
   <input type="text" ng-model="partyAdd.party.description" />
-  <button>Add Party!</button>
+  <button ng-click="partyAdd.submit()">Add Party!</button>
 </form>
-- 
2.7.4


From f6af315e636d0294a6f93be104d564c3a8f73243 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:47:30 +0200
Subject: [PATCH 043/412] Step 4.7: Add submit method

---
 imports/ui/components/partyAdd/partyAdd.js | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyAdd/partyAdd.js b/imports/ui/components/partyAdd/partyAdd.js
index bec462e..d864dbb 100644
--- a/imports/ui/components/partyAdd/partyAdd.js
+++ b/imports/ui/components/partyAdd/partyAdd.js
@@ -3,7 +3,15 @@ import angularMeteor from 'angular-meteor';
 
 import template from './partyAdd.html';
 
-class PartyAdd {}
+class PartyAdd {
+  constructor() {
+    this.party = {};
+  }
+
+  submit() {
+    console.log('submit:', this.party);
+  }
+}
 
 const name = 'partyAdd';
 
-- 
2.7.4


From 0418f4ad0f97254806b92dac0c759a5701d6b658 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:52:00 +0200
Subject: [PATCH 044/412] Step 4.8: Move Parties to imports

---
 imports/api/parties.js | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/api/parties.js

diff --git a/imports/api/parties.js b/imports/api/parties.js
new file mode 100644
index 0000000..e308632
--- /dev/null
+++ b/imports/api/parties.js
@@ -0,0 +1,3 @@
+import { Mongo } from 'meteor/mongo';
+
+export const Parties = new Mongo.Collection('parties');
-- 
2.7.4


From db3cce9005c8c241bb9fbf5723fae816a247f7b7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:52:33 +0200
Subject: [PATCH 045/412] Step 4.9: Remove old collection

---
 collections/parties.js | 1 -
 1 file changed, 1 deletion(-)
 delete mode 100644 collections/parties.js

diff --git a/collections/parties.js b/collections/parties.js
deleted file mode 100644
index f78fa2c..0000000
--- a/collections/parties.js
+++ /dev/null
@@ -1 +0,0 @@
-Parties = new Mongo.Collection('parties');
-- 
2.7.4


From f3eba5cdcb10664bd7eb8bf9232d6fbed9405061 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:56:28 +0200
Subject: [PATCH 046/412] Step 4.10: Import new module with Parties collection

---
 server/startup.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/server/startup.js b/server/startup.js
index ad3fd85..6ce39cd 100644
--- a/server/startup.js
+++ b/server/startup.js
@@ -1,3 +1,6 @@
+import { Meteor } from 'meteor/meteor';
+import { Parties } from '../imports/api/parties';
+
 Meteor.startup(() => {
   if (Parties.find().count() === 0) {
     const parties = [{
-- 
2.7.4


From 7713c15fc242be6a7e7aae8c0b84d3082839b361 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 10:57:41 +0200
Subject: [PATCH 047/412] Step 4.11: Import new module with Parties to
 PartiesList

---
 imports/ui/components/partiesList/partiesList.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 9acb917..b9ef5c8 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -2,6 +2,7 @@ import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
 import template from './partiesList.html';
+import { Parties } from '../../../api/parties';
 import { name as PartyAdd } from '../partyAdd/partyAdd';
 
 class PartiesList {
-- 
2.7.4


From 7a2fce409c87b635c2aebc2ab4e61c3d64053ab7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:00:20 +0200
Subject: [PATCH 048/412] Step 4.12: Insert new party

---
 imports/ui/components/partyAdd/partyAdd.js | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyAdd/partyAdd.js b/imports/ui/components/partyAdd/partyAdd.js
index d864dbb..aa9b76f 100644
--- a/imports/ui/components/partyAdd/partyAdd.js
+++ b/imports/ui/components/partyAdd/partyAdd.js
@@ -2,6 +2,7 @@ import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
 import template from './partyAdd.html';
+import { Parties } from '../../../api/parties';
 
 class PartyAdd {
   constructor() {
@@ -9,7 +10,12 @@ class PartyAdd {
   }
 
   submit() {
-    console.log('submit:', this.party);
+    Parties.insert(this.party);
+    this.reset();
+  }
+
+  reset() {
+    this.party = {};
   }
 }
 
-- 
2.7.4


From a462f3bb836707fff6e225eb8581bf50f321c0bc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:01:18 +0200
Subject: [PATCH 049/412] Step 4.13: Create view for PartyRemove component

---
 imports/ui/components/partyRemove/partyRemove.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 imports/ui/components/partyRemove/partyRemove.html

diff --git a/imports/ui/components/partyRemove/partyRemove.html b/imports/ui/components/partyRemove/partyRemove.html
new file mode 100644
index 0000000..1295105
--- /dev/null
+++ b/imports/ui/components/partyRemove/partyRemove.html
@@ -0,0 +1 @@
+<button ng-click="partyRemove.remove()">X</button>
-- 
2.7.4


From 7a8d665a98cf1187526f7b61e1d0b2a362b74225 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:04:08 +0200
Subject: [PATCH 050/412] Step 4.14: Create PartyRemove component

---
 imports/ui/components/partyRemove/partyRemove.js | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)
 create mode 100644 imports/ui/components/partyRemove/partyRemove.js

diff --git a/imports/ui/components/partyRemove/partyRemove.js b/imports/ui/components/partyRemove/partyRemove.js
new file mode 100644
index 0000000..646d78d
--- /dev/null
+++ b/imports/ui/components/partyRemove/partyRemove.js
@@ -0,0 +1,21 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import template from './partyRemove.html';
+
+class PartyRemove {
+  remove() {
+    console.log('remove party');
+  }
+}
+
+const name = 'partyRemove';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name,
+  controller: PartyRemove
+});
-- 
2.7.4


From 0b876ed96f8fae9842d2df9a7696031203b21d6f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:05:10 +0200
Subject: [PATCH 051/412] Step 4.15: Add party binding

---
 imports/ui/components/partyRemove/partyRemove.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/partyRemove/partyRemove.js b/imports/ui/components/partyRemove/partyRemove.js
index 646d78d..fb007aa 100644
--- a/imports/ui/components/partyRemove/partyRemove.js
+++ b/imports/ui/components/partyRemove/partyRemove.js
@@ -16,6 +16,9 @@ export default angular.module(name, [
   angularMeteor
 ]).component(name, {
   template,
+  bindings: {
+    party: '<'
+  },
   controllerAs: name,
   controller: PartyRemove
 });
-- 
2.7.4


From 86ec7ad99b2603f00f83471bc03a0476fea44540 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:06:30 +0200
Subject: [PATCH 052/412] Step 4.16: Remove party from collection

---
 imports/ui/components/partyRemove/partyRemove.js | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyRemove/partyRemove.js b/imports/ui/components/partyRemove/partyRemove.js
index fb007aa..ab73562 100644
--- a/imports/ui/components/partyRemove/partyRemove.js
+++ b/imports/ui/components/partyRemove/partyRemove.js
@@ -2,10 +2,13 @@ import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
 import template from './partyRemove.html';
+import { Parties } from '../../../api/parties';
 
 class PartyRemove {
   remove() {
-    console.log('remove party');
+    if (this.party) {
+      Parties.remove(this.party._id);
+    }
   }
 }
 
-- 
2.7.4


From e3679745ebe06351e7459d5b70a9a63a00611474 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:07:06 +0200
Subject: [PATCH 053/412] Step 4.17: Add PartyRemove

---
 imports/ui/components/partiesList/partiesList.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index b9ef5c8..d5d132a 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -4,6 +4,7 @@ import angularMeteor from 'angular-meteor';
 import template from './partiesList.html';
 import { Parties } from '../../../api/parties';
 import { name as PartyAdd } from '../partyAdd/partyAdd';
+import { name as PartyRemove } from '../partyRemove/partyRemove';
 
 class PartiesList {
   constructor($scope, $reactive) {
@@ -24,7 +25,8 @@ const name = 'partiesList';
 // create a module
 export default angular.module(name, [
   angularMeteor,
-  PartyAdd
+  PartyAdd,
+  PartyRemove
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From b8e7aa6966591245b0e6febde08635e5e42af67d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:08:02 +0200
Subject: [PATCH 054/412] Step 4.18: Implement component

---
 imports/ui/components/partiesList/partiesList.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 229908b..24dedb1 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -4,5 +4,6 @@
   <li ng-repeat="party in partiesList.parties">
     {{party.name}}
     <p>{{party.description}}</p>
+    <party-remove party="party"></party-remove>
   </li>
 </ul>
-- 
2.7.4


From 0ecf424992c42ff7c42ee1ebfc367da2c19ba859 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 14:21:49 +0200
Subject: [PATCH 055/412] Step 4.19: Add `sanjo:jasmine` and reporters

---
 .meteor/packages |  3 +++
 .meteor/versions | 11 +++++++++++
 2 files changed, 14 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 7474951..026de87 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -19,3 +19,6 @@ autopublish             # Publish all data to the clients (for prototyping)
 insecure                # Allow all DB writes from clients (for prototyping)
 pbastowski:angular-babel
 urigo:static-templates
+sanjo:jasmine
+velocity:html-reporter
+velocity:console-reporter
diff --git a/.meteor/versions b/.meteor/versions
index cf253c0..af73cb2 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,4 +1,5 @@
 allow-deny@1.0.5
+amplify@1.0.0
 autopublish@1.0.7
 autoupdate@1.2.11
 babel-compiler@6.9.1_1
@@ -9,6 +10,7 @@ blaze@2.1.9
 blaze-tools@1.0.10
 boilerplate-generator@1.0.10
 caching-compiler@1.0.6
+caching-html-compiler@1.0.6
 callback-hook@1.0.9
 check@1.2.3
 ddp@1.2.5
@@ -31,6 +33,7 @@ id-map@1.0.8
 insecure@1.0.7
 jquery@1.11.9
 launch-screen@1.0.12
+less@2.5.7
 livedata@1.0.18
 logging@1.1.15_1
 meteor@1.2.17_1
@@ -50,19 +53,27 @@ ordered-dict@1.0.8
 pbastowski:angular-babel@1.3.6
 promise@0.8.7
 random@1.0.10
+reactive-dict@1.1.8
 reactive-var@1.0.10
 reload@1.1.10
 retry@1.0.8
 routepolicy@1.0.11
+sanjo:jasmine@1.0.1
+session@1.1.6
 spacebars@1.0.13
 spacebars-compiler@1.0.13
 standard-minifier-css@1.2.1
 standard-minifier-js@1.2.0_1
+templating@1.1.14
+templating-tools@1.0.5
 tracker@1.1.0
 ui@1.0.12
 underscore@1.0.9
 urigo:static-html-compiler@0.1.8
 urigo:static-templates@0.1.3
 url@1.0.10
+velocity:console-reporter@0.2.1
+velocity:html-reporter@0.10.1
+velocity:reports@1.0.0
 webapp@1.3.11_1
 webapp-hashing@1.0.9
-- 
2.7.4


From 9688a663982efa889347c2b471d520248887c795 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 14:23:16 +0200
Subject: [PATCH 056/412] Step 4.20: Add `test:watch` npm script

---
 package.json | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/package.json b/package.json
index 1fdb919..af9f43d 100644
--- a/package.json
+++ b/package.json
@@ -2,7 +2,8 @@
   "name": "socially",
   "private": true,
   "scripts": {
-    "start": "meteor run"
+    "start": "meteor run",
+    "test:watch": "meteor test --driver-package sanjo:jasmine"
   },
   "dependencies": {
     "angular": "^1.5.3",
-- 
2.7.4


From f92de2be28647364575239f2140b334d94ebb612 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 14:24:39 +0200
Subject: [PATCH 057/412] Step 4.21: Install `angular-mocks`

---
 package.json | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/package.json b/package.json
index af9f43d..1555b86 100644
--- a/package.json
+++ b/package.json
@@ -9,5 +9,8 @@
     "angular": "^1.5.3",
     "angular-meteor": "^1.3.9",
     "meteor-node-stubs": "~0.2.0"
+  },
+  "devDependencies": {
+    "angular-mocks": "^1.5.3"
   }
 }
-- 
2.7.4


From bea74129e91215981e72782703d2e39762c48039 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 14:45:42 +0200
Subject: [PATCH 058/412] Step 4.22: Tests of PartyAdd

---
 .../components/partyAdd/client/partyAdd.tests.js   | 53 ++++++++++++++++++++++
 1 file changed, 53 insertions(+)
 create mode 100644 imports/ui/components/partyAdd/client/partyAdd.tests.js

diff --git a/imports/ui/components/partyAdd/client/partyAdd.tests.js b/imports/ui/components/partyAdd/client/partyAdd.tests.js
new file mode 100644
index 0000000..cc1d35e
--- /dev/null
+++ b/imports/ui/components/partyAdd/client/partyAdd.tests.js
@@ -0,0 +1,53 @@
+import { name as PartyAdd } from '../partyAdd';
+import { Parties } from '../../../../api/parties';
+import 'angular-mocks';
+
+describe('PartyAdd', () => {
+  beforeEach(() => {
+    window.module(PartyAdd);
+  });
+
+  describe('controller', () => {
+    let controller;
+    const party = {
+      name: 'Foo',
+      description: 'Birthday of Foo'
+    };
+
+    beforeEach(() => {
+      inject(($rootScope, $componentController) => {
+        controller = $componentController(PartyAdd, {
+          $scope: $rootScope.$new(true)
+        });
+      });
+    });
+
+    describe('reset()', () => {
+      it('should clean up party object', () => {
+        controller.party = party;
+        controller.reset();
+
+        expect(controller.party).toEqual({});
+      });
+    });
+
+    describe('submit()', () => {
+      beforeEach(() => {
+        spyOn(Parties, 'insert');
+        spyOn(controller, 'reset').and.callThrough();
+
+        controller.party = party;
+
+        controller.submit();
+      });
+
+      it('should insert a new party', () => {
+        expect(Parties.insert).toHaveBeenCalledWith(party);
+      });
+
+      it('should call reset()', () => {
+        expect(controller.reset).toHaveBeenCalled();
+      });
+    });
+  });
+});
-- 
2.7.4


From 97674052e75dec4f624ce1d4ba5c227e6e88998c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 14:50:11 +0200
Subject: [PATCH 059/412] Step 4.23: Tests of PartyRemove

---
 .../partyRemove/client/partyRemove.tests.js        | 37 ++++++++++++++++++++++
 1 file changed, 37 insertions(+)
 create mode 100644 imports/ui/components/partyRemove/client/partyRemove.tests.js

diff --git a/imports/ui/components/partyRemove/client/partyRemove.tests.js b/imports/ui/components/partyRemove/client/partyRemove.tests.js
new file mode 100644
index 0000000..e8b6e97
--- /dev/null
+++ b/imports/ui/components/partyRemove/client/partyRemove.tests.js
@@ -0,0 +1,37 @@
+import { name as PartyRemove } from '../partyRemove';
+import { Parties } from '../../../../api/parties';
+import 'angular-mocks';
+
+describe('PartyRemove', () => {
+  beforeEach(() => {
+    window.module(PartyRemove);
+  });
+
+  describe('controller', () => {
+    let controller;
+    const party = {
+      _id: 'partyId'
+    };
+
+    beforeEach(() => {
+      inject(($rootScope, $componentController) => {
+        controller = $componentController(PartyRemove, {
+          $scope: $rootScope.$new(true)
+        }, {
+          party
+        });
+      });
+    });
+
+    describe('remove()', () => {
+      beforeEach(() => {
+        spyOn(Parties, 'remove');
+        controller.remove();
+      });
+
+      it('should remove a party', () => {
+        expect(Parties.remove).toHaveBeenCalledWith(party._id);
+      });
+    });
+  });
+});
-- 
2.7.4


From ae7e87a1834c9950cc32f6837a987028975a5cff Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:09:16 +0200
Subject: [PATCH 060/412] Step 5.1: Add ui-router

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 1555b86..b8cdb95 100644
--- a/package.json
+++ b/package.json
@@ -8,6 +8,7 @@
   "dependencies": {
     "angular": "^1.5.3",
     "angular-meteor": "^1.3.9",
+    "angular-ui-router": "^0.2.18",
     "meteor-node-stubs": "~0.2.0"
   },
   "devDependencies": {
-- 
2.7.4


From f79054bfab612744cb806ad51b83ed430faaa123 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:10:34 +0200
Subject: [PATCH 061/412] Step 5.2: Add uiRouter to Socially

---
 imports/ui/components/socially/socially.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index 2a99481..7cd7e96 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -1,5 +1,6 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
+import uiRouter from 'angular-ui-router';
 
 import template from './socially.html';
 import { name as PartiesList } from '../partiesList/partiesList';
@@ -11,6 +12,7 @@ const name = 'socially';
 // create a module
 export default angular.module(name, [
   angularMeteor,
+  uiRouter,
   PartiesList
 ]).component(name, {
   template,
-- 
2.7.4


From b14a6aa2d28f071943e259102968cf1d97d73726 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:11:08 +0200
Subject: [PATCH 062/412] Step 5.3: Add base tag to main template

---
 client/index.html | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/client/index.html b/client/index.html
index e6d21ea..806f6ab 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,3 +1,6 @@
+<head>
+  <base href="/">
+</head>
 <body ng-app="socially" ng-strict-di="">
   <socially></socially>
 </body>
-- 
2.7.4


From a435217635c7f43bf0bf6bfad20fb670d37c050d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:11:52 +0200
Subject: [PATCH 063/412] Step 5.4: Add uiView to Socially view

---
 imports/ui/components/socially/socially.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/socially/socially.html b/imports/ui/components/socially/socially.html
index 5e9673b..19b303a 100644
--- a/imports/ui/components/socially/socially.html
+++ b/imports/ui/components/socially/socially.html
@@ -1 +1 @@
-<parties-list></parties-list>
+<div ui-view=""></div>
-- 
2.7.4


From 13673b8624a5885807d993473bea06c860b1d4d2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:13:54 +0200
Subject: [PATCH 064/412] Step 5.5: Define `parties` route

---
 imports/ui/components/partiesList/partiesList.js | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index d5d132a..54e8ad3 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -1,5 +1,6 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
+import uiRouter from 'angular-ui-router';
 
 import template from './partiesList.html';
 import { Parties } from '../../../api/parties';
@@ -25,10 +26,21 @@ const name = 'partiesList';
 // create a module
 export default angular.module(name, [
   angularMeteor,
+  uiRouter,
   PartyAdd,
   PartyRemove
 ]).component(name, {
   template,
   controllerAs: name,
   controller: PartiesList
-});
+})
+  .config(config);
+
+function config($stateProvider) {
+  'ngInject';
+  $stateProvider
+    .state('parties', {
+      url: '/parties',
+      template: '<parties-list></parties-list>'
+    });
+}
-- 
2.7.4


From a4e5402debfa6b365ee0819e1096c3f341d93cc1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:15:19 +0200
Subject: [PATCH 065/412] Step 5.6: Set html5Mode and `parties` as default
 route

---
 imports/ui/components/socially/socially.js | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index 7cd7e96..b064f0d 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -18,4 +18,13 @@ export default angular.module(name, [
   template,
   controllerAs: name,
   controller: Socially
-});
+})
+  .config(config);
+
+function config($locationProvider, $urlRouterProvider) {
+  'ngInject';
+
+  $locationProvider.html5Mode(true);
+
+  $urlRouterProvider.otherwise('/parties');
+}
-- 
2.7.4


From c4239dcd9e9b8feffcdd68192f0f27f75714d3f6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:16:09 +0200
Subject: [PATCH 066/412] Step 5.7: Create view for Navigation component

---
 imports/ui/components/navigation/navigation.html | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/ui/components/navigation/navigation.html

diff --git a/imports/ui/components/navigation/navigation.html b/imports/ui/components/navigation/navigation.html
new file mode 100644
index 0000000..def2640
--- /dev/null
+++ b/imports/ui/components/navigation/navigation.html
@@ -0,0 +1,3 @@
+<h1>
+  <a href="/parties">Home</a>
+</h1>
-- 
2.7.4


From 89c124a0d3f4bd02f2177614b76c0d893b4dea14 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:17:01 +0200
Subject: [PATCH 067/412] Step 5.8: Create Navigation component

---
 imports/ui/components/navigation/navigation.js | 14 ++++++++++++++
 1 file changed, 14 insertions(+)
 create mode 100644 imports/ui/components/navigation/navigation.js

diff --git a/imports/ui/components/navigation/navigation.js b/imports/ui/components/navigation/navigation.js
new file mode 100644
index 0000000..5e33f59
--- /dev/null
+++ b/imports/ui/components/navigation/navigation.js
@@ -0,0 +1,14 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import template from './navigation.html';
+
+const name = 'navigation';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name
+});
-- 
2.7.4


From b0f44450baec12bab5fa0485ba4572ddf65a5291 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:17:37 +0200
Subject: [PATCH 068/412] Step 5.9: Implement Navigation in the view

---
 imports/ui/components/socially/socially.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/socially/socially.html b/imports/ui/components/socially/socially.html
index 19b303a..7fdb2de 100644
--- a/imports/ui/components/socially/socially.html
+++ b/imports/ui/components/socially/socially.html
@@ -1 +1,3 @@
+<navigation></navigation>
+
 <div ui-view=""></div>
-- 
2.7.4


From 93c1ee9da09406e37507a5d6c5b27ef0abb5c7e0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:18:12 +0200
Subject: [PATCH 069/412] Step 5.10: Add Navigation to Socially

---
 imports/ui/components/socially/socially.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index b064f0d..c035c49 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -4,6 +4,7 @@ import uiRouter from 'angular-ui-router';
 
 import template from './socially.html';
 import { name as PartiesList } from '../partiesList/partiesList';
+import { name as Navigation } from '../navigation/navigation';
 
 class Socially {}
 
@@ -13,7 +14,8 @@ const name = 'socially';
 export default angular.module(name, [
   angularMeteor,
   uiRouter,
-  PartiesList
+  PartiesList,
+  Navigation
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From ada5da84d63b6e7ffb14f7c624c4e5107869f135 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:19:42 +0200
Subject: [PATCH 070/412] Step 5.11: Create view for the PartyDetails

---
 imports/ui/components/partyDetails/partyDetails.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 imports/ui/components/partyDetails/partyDetails.html

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
new file mode 100644
index 0000000..3ea8425
--- /dev/null
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -0,0 +1 @@
+The party your selected is: {{ partyDetails.partyId }}
-- 
2.7.4


From 12c74fec9d8cd6795cf147ad23149c7122b821bc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:21:42 +0200
Subject: [PATCH 071/412] Step 5.12: Create PartyDetails

---
 imports/ui/components/partyDetails/partyDetails.js | 24 ++++++++++++++++++++++
 1 file changed, 24 insertions(+)
 create mode 100644 imports/ui/components/partyDetails/partyDetails.js

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
new file mode 100644
index 0000000..de7b7bb
--- /dev/null
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -0,0 +1,24 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+import uiRouter from 'angular-ui-router';
+
+import template from './partyDetails.html';
+
+class PartyDetails {
+  constructor($stateParams) {
+    'ngInject';
+
+    this.partyId = $stateParams.partyId;
+  }
+}
+
+const name = 'partyDetails';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name,
+  controller: PartyDetails
+});
-- 
2.7.4


From 1b4ae9db804e01bed14ddb9cacf7d3fdeb81ea68 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:22:56 +0200
Subject: [PATCH 072/412] Step 5.13: Set partyDetails state

---
 imports/ui/components/partyDetails/partyDetails.js | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index de7b7bb..89b01b2 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -16,9 +16,20 @@ const name = 'partyDetails';
 
 // create a module
 export default angular.module(name, [
-  angularMeteor
+  angularMeteor,
+  uiRouter
 ]).component(name, {
   template,
   controllerAs: name,
   controller: PartyDetails
-});
+})
+  .config(config);
+
+function config($stateProvider) {
+  'ngInject';
+
+  $stateProvider.state('partyDetails', {
+    url: '/parties/:partyId',
+    template: '<party-details></party-details>'
+  });
+}
-- 
2.7.4


From eb1da760309cf7997a75a7d29041eec1f2f369ae Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:23:41 +0200
Subject: [PATCH 073/412] Step 5.14: Add PartyDetails to Socially

---
 imports/ui/components/socially/socially.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index c035c49..db55196 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -4,6 +4,7 @@ import uiRouter from 'angular-ui-router';
 
 import template from './socially.html';
 import { name as PartiesList } from '../partiesList/partiesList';
+import { name as PartyDetails } from '../partyDetails/partyDetails';
 import { name as Navigation } from '../navigation/navigation';
 
 class Socially {}
@@ -15,6 +16,7 @@ export default angular.module(name, [
   angularMeteor,
   uiRouter,
   PartiesList,
+  PartyDetails,
   Navigation
 ]).component(name, {
   template,
-- 
2.7.4


From 6ad670675a2536886a16e3a698e344bf94f7b666 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:25:15 +0200
Subject: [PATCH 074/412] Step 5.15: Add link

---
 imports/ui/components/partiesList/partiesList.html | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 24dedb1..c1b07e2 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -2,7 +2,9 @@
 
 <ul>
   <li ng-repeat="party in partiesList.parties">
-    {{party.name}}
+    <a ui-sref="partyDetails({ partyId: party._id })">
+      {{party.name}}
+    </a>
     <p>{{party.description}}</p>
     <party-remove party="party"></party-remove>
   </li>
-- 
2.7.4


From 7320ae6d3538428e0c6976b75b458c0c7d9f20a8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:30:15 +0200
Subject: [PATCH 075/412] Step 6.1: Add party helper

---
 imports/ui/components/partyDetails/partyDetails.js | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index 89b01b2..8027663 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -3,12 +3,23 @@ import angularMeteor from 'angular-meteor';
 import uiRouter from 'angular-ui-router';
 
 import template from './partyDetails.html';
+import { Parties } from '../../../api/parties';
 
 class PartyDetails {
-  constructor($stateParams) {
+  constructor($stateParams, $scope, $reactive) {
     'ngInject';
 
+    $reactive(this).attach($scope);
+
     this.partyId = $stateParams.partyId;
+
+    this.helpers({
+      party() {
+        return Parties.findOne({
+          _id: $stateParams.partyId
+        });
+      }
+    });
   }
 }
 
-- 
2.7.4


From e472718e3e1f39d70fe136a5576f4aaf749ebcfa Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:33:34 +0200
Subject: [PATCH 076/412] Step 6.2: Add form with the party details to the
 party details page

---
 imports/ui/components/partyDetails/partyDetails.html | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index 3ea8425..8c1201f 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -1 +1,5 @@
-The party your selected is: {{ partyDetails.partyId }}
+The party your selected is:
+<form>
+  Party name: <input type="text" ng-model="partyDetails.party.name" />
+  Description: <input type="text" ng-model="partyDetails.party.description" />
+</form>
-- 
2.7.4


From 8b0734f3ef3d5ce38af08c37c6f3d46359be5968 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:34:10 +0200
Subject: [PATCH 077/412] Step 6.3: Add save and back buttons to the view

---
 imports/ui/components/partyDetails/partyDetails.html | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index 8c1201f..b5c939b 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -2,4 +2,7 @@ The party your selected is:
 <form>
   Party name: <input type="text" ng-model="partyDetails.party.name" />
   Description: <input type="text" ng-model="partyDetails.party.description" />
+  <button ng-click="partyDetails.save()">Save</button>
 </form>
+
+<button ui-sref="parties">Back</button>
-- 
2.7.4


From aead855e6d2570d0cc9d382188695f13cd6fc02f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:35:38 +0200
Subject: [PATCH 078/412] Step 6.4: Implement save button on the component
 logic

---
 imports/ui/components/partyDetails/partyDetails.js | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index 8027663..af77e46 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -21,6 +21,17 @@ class PartyDetails {
       }
     });
   }
+
+  save() {
+    Parties.update({
+      _id: this.party._id
+    }, {
+      $set: {
+        name: this.party.name,
+        description: this.party.description
+      }
+    });
+  }
 }
 
 const name = 'partyDetails';
-- 
2.7.4


From e458df46b4fda8a27b4238e89aaab2ca57fb393f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:36:24 +0200
Subject: [PATCH 079/412] Step 6.5: Handle success and fail for data actions

---
 imports/ui/components/partyDetails/partyDetails.js | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index af77e46..e63b6ef 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -30,6 +30,12 @@ class PartyDetails {
         name: this.party.name,
         description: this.party.description
       }
+    }, (error) => {
+      if (error) {
+        console.log('Oops, unable to update the party...');
+      } else {
+        console.log('Done!');
+      }
     });
   }
 }
-- 
2.7.4


From 695ee04429c77dbf642b341d7e6b347b3e5166b5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 15:11:57 +0200
Subject: [PATCH 080/412] Step 6.6: Tests of PartyDetails

---
 .../partyDetails/client/partyDetails.tests.js      | 49 ++++++++++++++++++++++
 1 file changed, 49 insertions(+)
 create mode 100644 imports/ui/components/partyDetails/client/partyDetails.tests.js

diff --git a/imports/ui/components/partyDetails/client/partyDetails.tests.js b/imports/ui/components/partyDetails/client/partyDetails.tests.js
new file mode 100644
index 0000000..997304e
--- /dev/null
+++ b/imports/ui/components/partyDetails/client/partyDetails.tests.js
@@ -0,0 +1,49 @@
+import { name as PartyDetails } from '../partyDetails';
+import { Parties } from '../../../../api/parties';
+import 'angular-mocks';
+
+describe('PartyDetails', () => {
+  beforeEach(() => {
+    window.module(PartyDetails);
+  });
+
+  describe('controller', () => {
+    let controller;
+    const party = {
+      _id: 'partyId',
+      name: 'Foo',
+      description: 'Birthday of Foo'
+    };
+
+    beforeEach(() => {
+      inject(($rootScope, $componentController) => {
+        controller = $componentController(PartyDetails, {
+          $scope: $rootScope.$new(true)
+        });
+      });
+    });
+
+    describe('save()', () => {
+      beforeEach(() => {
+        spyOn(Parties, 'update');
+        controller.party = party;
+        controller.save();
+      });
+
+      it('should update a proper party', () => {
+        expect(Parties.update.calls.mostRecent().args[0]).toEqual({
+          _id: party._id
+        });
+      });
+
+      it('should update with proper modifier', () => {
+        expect(Parties.update.calls.mostRecent().args[1]).toEqual({
+          $set: {
+            name: party.name,
+            description: party.description
+          }
+        });
+      });
+    });
+  });
+});
-- 
2.7.4


From 5dd3ff84074d7f4a4d43791fe70039c36704a99a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:38:12 +0200
Subject: [PATCH 081/412] Step 7.1: Move startup to imports

---
 imports/startup/fixtures.js | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)
 create mode 100644 imports/startup/fixtures.js

diff --git a/imports/startup/fixtures.js b/imports/startup/fixtures.js
new file mode 100644
index 0000000..d92fb48
--- /dev/null
+++ b/imports/startup/fixtures.js
@@ -0,0 +1,21 @@
+import { Meteor } from 'meteor/meteor';
+import { Parties } from '../api/parties';
+
+Meteor.startup(() => {
+  if (Parties.find().count() === 0) {
+    const parties = [{
+      'name': 'Dubstep-Free Zone',
+      'description': 'Fast just got faster with Nexus S.'
+    }, {
+      'name': 'All dubstep all the time',
+      'description': 'Get it on!'
+    }, {
+      'name': 'Savage lounging',
+      'description': 'Leisure suit required. And only fiercest manners.'
+    }];
+
+    parties.forEach((party) => {
+      Parties.insert(party)
+    });
+  }
+});
-- 
2.7.4


From 6bf5096e9284cf57d7e38808d8feeae067d9d659 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:39:27 +0200
Subject: [PATCH 082/412] Step 7.2: Create main entry point on server-side

---
 server/main.js | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 server/main.js

diff --git a/server/main.js b/server/main.js
new file mode 100644
index 0000000..40efcd1
--- /dev/null
+++ b/server/main.js
@@ -0,0 +1 @@
+import '../imports/startup/fixtures';
-- 
2.7.4


From e736749e92a26e625a964fb3bff62208f3a5dc32 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:40:16 +0200
Subject: [PATCH 083/412] Step 7.3: Import Parties on server-side to be
 synchronized

---
 server/main.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/server/main.js b/server/main.js
index 40efcd1..d4c97f0 100644
--- a/server/main.js
+++ b/server/main.js
@@ -1 +1,2 @@
 import '../imports/startup/fixtures';
+import '../imports/api/parties';
-- 
2.7.4


From 403e9166cec6c2da4d1cdb378df025d5d95bc8eb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:40:34 +0200
Subject: [PATCH 084/412] Step 7.4: Remove old startup.js

---
 server/startup.js | 21 ---------------------
 1 file changed, 21 deletions(-)
 delete mode 100644 server/startup.js

diff --git a/server/startup.js b/server/startup.js
deleted file mode 100644
index 6ce39cd..0000000
--- a/server/startup.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-import { Parties } from '../imports/api/parties';
-
-Meteor.startup(() => {
-  if (Parties.find().count() === 0) {
-    const parties = [{
-      'name': 'Dubstep-Free Zone',
-      'description': 'Fast just got faster with Nexus S.'
-    }, {
-      'name': 'All dubstep all the time',
-      'description': 'Get it on!'
-    }, {
-      'name': 'Savage lounging',
-      'description': 'Leisure suit required. And only fiercest manners.'
-    }];
-
-    parties.forEach((party) => {
-      Parties.insert(party)
-    });
-  }
-});
-- 
2.7.4


From 2441a16e208e6c5279fe546fb47bbf9529bb4b3c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:41:57 +0200
Subject: [PATCH 085/412] Step 8.1: Remove `insecure` package

---
 .meteor/packages | 1 -
 .meteor/versions | 1 -
 2 files changed, 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 026de87..1b00904 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -16,7 +16,6 @@ standard-minifier-js    # JS minifier run for production mode
 es5-shim                # ECMAScript 5 compatibility for older browsers.
 
 autopublish             # Publish all data to the clients (for prototyping)
-insecure                # Allow all DB writes from clients (for prototyping)
 pbastowski:angular-babel
 urigo:static-templates
 sanjo:jasmine
diff --git a/.meteor/versions b/.meteor/versions
index af73cb2..b20c468 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -30,7 +30,6 @@ html-tools@1.0.11
 htmljs@1.0.11
 http@1.1.8
 id-map@1.0.8
-insecure@1.0.7
 jquery@1.11.9
 launch-screen@1.0.12
 less@2.5.7
-- 
2.7.4


From 5136daf550f7934125ade1c879766f996ea54dce Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:42:53 +0200
Subject: [PATCH 086/412] Step 8.2: Add `accounts-password`

---
 .meteor/packages |  1 +
 .meteor/versions | 10 ++++++++++
 2 files changed, 11 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 1b00904..8bac382 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -21,3 +21,4 @@ urigo:static-templates
 sanjo:jasmine
 velocity:html-reporter
 velocity:console-reporter
+accounts-password
diff --git a/.meteor/versions b/.meteor/versions
index b20c468..9f2aa1c 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,3 +1,5 @@
+accounts-base@1.2.12_1
+accounts-password@1.3.0
 allow-deny@1.0.5
 amplify@1.0.0
 autopublish@1.0.7
@@ -16,12 +18,14 @@ check@1.2.3
 ddp@1.2.5
 ddp-client@1.2.9
 ddp-common@1.2.6
+ddp-rate-limiter@1.0.5
 ddp-server@1.2.10
 deps@1.0.12
 diff-sequence@1.0.6
 ecmascript@0.5.8_1
 ecmascript-runtime@0.3.14_1
 ejson@1.0.12
+email@1.1.17_1
 es5-shim@4.6.14_1
 fastclick@1.0.12
 geojson-utils@1.0.9
@@ -34,6 +38,7 @@ jquery@1.11.9
 launch-screen@1.0.12
 less@2.5.7
 livedata@1.0.18
+localstorage@1.0.11
 logging@1.1.15_1
 meteor@1.2.17_1
 meteor-base@1.0.4
@@ -46,21 +51,26 @@ modules@0.7.6_1
 modules-runtime@0.7.6_1
 mongo@1.1.12_5
 mongo-id@1.0.5
+npm-bcrypt@0.9.1_1
 npm-mongo@2.2.10_1
 observe-sequence@1.0.13
 ordered-dict@1.0.8
 pbastowski:angular-babel@1.3.6
 promise@0.8.7
 random@1.0.10
+rate-limit@1.0.5
 reactive-dict@1.1.8
 reactive-var@1.0.10
 reload@1.1.10
 retry@1.0.8
 routepolicy@1.0.11
 sanjo:jasmine@1.0.1
+service-configuration@1.0.10
 session@1.1.6
+sha@1.0.8
 spacebars@1.0.13
 spacebars-compiler@1.0.13
+srp@1.0.9
 standard-minifier-css@1.2.1
 standard-minifier-js@1.2.0_1
 templating@1.1.14
-- 
2.7.4


From 2217ed2a32a069d1f9f8869769ad1396d956972c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:44:10 +0200
Subject: [PATCH 087/412] Step 8.3: Add `dotansimha:accounts-ui-angular`

---
 .meteor/packages | 1 +
 .meteor/versions | 5 +++++
 2 files changed, 6 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 8bac382..6069c29 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -22,3 +22,4 @@ sanjo:jasmine
 velocity:html-reporter
 velocity:console-reporter
 accounts-password
+dotansimha:accounts-ui-angular
diff --git a/.meteor/versions b/.meteor/versions
index 9f2aa1c..b8b2453 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,5 +1,7 @@
 accounts-base@1.2.12_1
 accounts-password@1.3.0
+accounts-ui@1.1.8
+accounts-ui-unstyled@1.1.11
 allow-deny@1.0.5
 amplify@1.0.0
 autopublish@1.0.7
@@ -9,6 +11,7 @@ babel-runtime@0.1.11_1
 base64@1.0.9
 binary-heap@1.0.9
 blaze@2.1.9
+blaze-html-templates@1.0.4
 blaze-tools@1.0.10
 boilerplate-generator@1.0.10
 caching-compiler@1.0.6
@@ -22,6 +25,7 @@ ddp-rate-limiter@1.0.5
 ddp-server@1.2.10
 deps@1.0.12
 diff-sequence@1.0.6
+dotansimha:accounts-ui-angular@0.0.4
 ecmascript@0.5.8_1
 ecmascript-runtime@0.3.14_1
 ejson@1.0.12
@@ -75,6 +79,7 @@ standard-minifier-css@1.2.1
 standard-minifier-js@1.2.0_1
 templating@1.1.14
 templating-tools@1.0.5
+tmeasday:check-npm-versions@0.1.1
 tracker@1.1.0
 ui@1.0.12
 underscore@1.0.9
-- 
2.7.4


From 8e3c87519bcd1eb706216601e173faae0331add4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:44:45 +0200
Subject: [PATCH 088/412] Step 8.4: Add a dependecy for accounts-ui package

---
 imports/ui/components/socially/socially.js | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index db55196..e539bf1 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -17,7 +17,8 @@ export default angular.module(name, [
   uiRouter,
   PartiesList,
   PartyDetails,
-  Navigation
+  Navigation,
+  'accounts.ui'
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From cc957b88f32a33ceebfe6b350aafd67bbcbdf8a6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 11:45:52 +0200
Subject: [PATCH 089/412] Step 8.5: Add usage for login-buttons directive

---
 imports/ui/components/socially/socially.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/socially/socially.html b/imports/ui/components/socially/socially.html
index 7fdb2de..83c40e7 100644
--- a/imports/ui/components/socially/socially.html
+++ b/imports/ui/components/socially/socially.html
@@ -1,3 +1,5 @@
+<login-buttons></login-buttons>
+
 <navigation></navigation>
 
 <div ui-view=""></div>
-- 
2.7.4


From c3bf4747db97d19fbbd0670f014a19e1a2c9423f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:01:43 +0200
Subject: [PATCH 090/412] Step 8.6: Add allow logic to the model

---
 imports/api/parties.js | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/imports/api/parties.js b/imports/api/parties.js
index e308632..3e283c1 100644
--- a/imports/api/parties.js
+++ b/imports/api/parties.js
@@ -1,3 +1,15 @@
 import { Mongo } from 'meteor/mongo';
 
 export const Parties = new Mongo.Collection('parties');
+
+Parties.allow({
+  insert(userId, party) {
+    return userId && party.owner === userId;
+  },
+  update(userId, party, fields, modifier) {
+    return userId && party.owner === userId;
+  },
+  remove(userId, party) {
+    return userId && party.owner === userId;
+  }
+});
-- 
2.7.4


From 71205d41c4a096ae781782934a1cf56df1088854 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:02:37 +0200
Subject: [PATCH 091/412] Step 8.7: Add current user to the new party

---
 imports/ui/components/partyAdd/partyAdd.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/partyAdd/partyAdd.js b/imports/ui/components/partyAdd/partyAdd.js
index aa9b76f..4c9052a 100644
--- a/imports/ui/components/partyAdd/partyAdd.js
+++ b/imports/ui/components/partyAdd/partyAdd.js
@@ -1,6 +1,8 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
+import { Meteor } from 'meteor/meteor';
+
 import template from './partyAdd.html';
 import { Parties } from '../../../api/parties';
 
@@ -10,6 +12,7 @@ class PartyAdd {
   }
 
   submit() {
+    this.party.owner = Meteor.user()._id;
     Parties.insert(this.party);
     this.reset();
   }
-- 
2.7.4


From 9001ddc9358d0d5dab05a1f4067b00ef4379599a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:03:33 +0200
Subject: [PATCH 092/412] Step 8.8: Add facebook and twitter

---
 .meteor/packages |  2 ++
 .meteor/versions | 12 ++++++++++--
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 6069c29..8ae4a69 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -23,3 +23,5 @@ velocity:html-reporter
 velocity:console-reporter
 accounts-password
 dotansimha:accounts-ui-angular
+accounts-facebook
+accounts-twitter
diff --git a/.meteor/versions b/.meteor/versions
index b8b2453..04f7979 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,5 +1,8 @@
 accounts-base@1.2.12_1
+accounts-facebook@1.0.10
+accounts-oauth@1.1.13
 accounts-password@1.3.0
+accounts-twitter@1.1.11
 accounts-ui@1.1.8
 accounts-ui-unstyled@1.1.11
 allow-deny@1.0.5
@@ -31,12 +34,13 @@ ecmascript-runtime@0.3.14_1
 ejson@1.0.12
 email@1.1.17_1
 es5-shim@4.6.14_1
+facebook@1.2.9
 fastclick@1.0.12
 geojson-utils@1.0.9
 hot-code-push@1.0.4
 html-tools@1.0.11
 htmljs@1.0.11
-http@1.1.8
+http@1.2.9_1
 id-map@1.0.8
 jquery@1.11.9
 launch-screen@1.0.12
@@ -57,6 +61,9 @@ mongo@1.1.12_5
 mongo-id@1.0.5
 npm-bcrypt@0.9.1_1
 npm-mongo@2.2.10_1
+oauth@1.1.11
+oauth1@1.1.10
+oauth2@1.1.10
 observe-sequence@1.0.13
 ordered-dict@1.0.8
 pbastowski:angular-babel@1.3.6
@@ -77,10 +84,11 @@ spacebars-compiler@1.0.13
 srp@1.0.9
 standard-minifier-css@1.2.1
 standard-minifier-js@1.2.0_1
-templating@1.1.14
+templating@1.2.14_1
 templating-tools@1.0.5
 tmeasday:check-npm-versions@0.1.1
 tracker@1.1.0
+twitter@1.1.12
 ui@1.0.12
 underscore@1.0.9
 urigo:static-html-compiler@0.1.8
-- 
2.7.4


From 9f687dd3d827a1c7c714095f3ce6be16137801b9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:05:29 +0200
Subject: [PATCH 093/412] Step 8.9: Add permissions limit to the party details
 page

---
 imports/ui/components/partyDetails/partyDetails.js | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index e63b6ef..565aa4b 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -2,6 +2,8 @@ import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 import uiRouter from 'angular-ui-router';
 
+import { Meteor } from 'meteor/meteor';
+
 import template from './partyDetails.html';
 import { Parties } from '../../../api/parties';
 
@@ -58,6 +60,15 @@ function config($stateProvider) {
 
   $stateProvider.state('partyDetails', {
     url: '/parties/:partyId',
-    template: '<party-details></party-details>'
+    template: '<party-details></party-details>',
+    resolve: {
+      currentUser($q) {
+        if (Meteor.userId() === null) {
+          return $q.reject();
+        } else {
+          return $q.resolve();
+        }
+      }
+    }
   });
 }
-- 
2.7.4


From 7ecaa06d555cf7747fdb867d391918f3a2492d7f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Apr 2016 13:20:33 +0200
Subject: [PATCH 094/412] Step 8.10: Add the reason of rejection

---
 imports/ui/components/partyDetails/partyDetails.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index 565aa4b..1767720 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -64,7 +64,7 @@ function config($stateProvider) {
     resolve: {
       currentUser($q) {
         if (Meteor.userId() === null) {
-          return $q.reject();
+          return $q.reject('AUTH_REQUIRED');
         } else {
           return $q.resolve();
         }
-- 
2.7.4


From b641547d7d375b401ba98b85dd545038b152db60 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Tue, 26 Apr 2016 13:22:23 +0200
Subject: [PATCH 095/412] Step 8.11: Handle `AUTH_REQUIRED`

---
 imports/ui/components/socially/socially.js | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index e539bf1..dec6060 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -24,7 +24,8 @@ export default angular.module(name, [
   controllerAs: name,
   controller: Socially
 })
-  .config(config);
+  .config(config)
+  .run(run);
 
 function config($locationProvider, $urlRouterProvider) {
   'ngInject';
@@ -33,3 +34,15 @@ function config($locationProvider, $urlRouterProvider) {
 
   $urlRouterProvider.otherwise('/parties');
 }
+
+function run($rootScope, $state) {
+  'ngInject';
+
+  $rootScope.$on('$stateChangeError',
+    (event, toState, toParams, fromState, fromParams, error) => {
+      if (error === 'AUTH_REQUIRED') {
+        $state.go('parties');
+      }
+    }
+  );
+}
-- 
2.7.4


From 7a5ecb7caf31c1826933f9589abb53ef6f9a63ed Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:08:59 +0200
Subject: [PATCH 096/412] Step 9.1: Remove `autopublish`

---
 .meteor/packages | 1 -
 .meteor/versions | 1 -
 2 files changed, 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 8ae4a69..9e4bf08 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -15,7 +15,6 @@ standard-minifier-css   # CSS minifier run for production mode
 standard-minifier-js    # JS minifier run for production mode
 es5-shim                # ECMAScript 5 compatibility for older browsers.
 
-autopublish             # Publish all data to the clients (for prototyping)
 pbastowski:angular-babel
 urigo:static-templates
 sanjo:jasmine
diff --git a/.meteor/versions b/.meteor/versions
index 04f7979..cc0865f 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -7,7 +7,6 @@ accounts-ui@1.1.8
 accounts-ui-unstyled@1.1.11
 allow-deny@1.0.5
 amplify@1.0.0
-autopublish@1.0.7
 autoupdate@1.2.11
 babel-compiler@6.9.1_1
 babel-runtime@0.1.11_1
-- 
2.7.4


From ce67c6513d0725749b2f6ed2c09102f5c53a45bc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:14:30 +0200
Subject: [PATCH 097/412] Step 9.2: Add the `parties` publication to the server

---
 imports/api/parties/publish.js | 31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)
 create mode 100644 imports/api/parties/publish.js

diff --git a/imports/api/parties/publish.js b/imports/api/parties/publish.js
new file mode 100644
index 0000000..590f23b
--- /dev/null
+++ b/imports/api/parties/publish.js
@@ -0,0 +1,31 @@
+import { Meteor } from 'meteor/meteor';
+
+import { Parties } from './collection';
+
+if (Meteor.isServer) {
+  Meteor.publish('parties', function() {
+    const selector = {
+      $or: [{
+        // the public parties
+        $and: [{
+          public: true
+        }, {
+          public: {
+            $exists: true
+          }
+        }]
+      }, {
+        // when logged in user is the owner
+        $and: [{
+          owner: this.userId
+        }, {
+          owner: {
+            $exists: true
+          }
+        }]
+      }]
+    };
+
+    return Parties.find(selector);
+  });
+}
-- 
2.7.4


From 2d58dfb2119ff0661b9d90aef165db7e5fb2f34c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:15:16 +0200
Subject: [PATCH 098/412] Step 9.3: Move Parties to collection.js

---
 imports/api/parties/collection.js | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 imports/api/parties/collection.js

diff --git a/imports/api/parties/collection.js b/imports/api/parties/collection.js
new file mode 100644
index 0000000..3e283c1
--- /dev/null
+++ b/imports/api/parties/collection.js
@@ -0,0 +1,15 @@
+import { Mongo } from 'meteor/mongo';
+
+export const Parties = new Mongo.Collection('parties');
+
+Parties.allow({
+  insert(userId, party) {
+    return userId && party.owner === userId;
+  },
+  update(userId, party, fields, modifier) {
+    return userId && party.owner === userId;
+  },
+  remove(userId, party) {
+    return userId && party.owner === userId;
+  }
+});
-- 
2.7.4


From b421896a7e8b35a3fde44050294c128df6eb28dd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:15:55 +0200
Subject: [PATCH 099/412] Step 9.4: Create entry point for Parties

---
 imports/api/parties/index.js | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/api/parties/index.js

diff --git a/imports/api/parties/index.js b/imports/api/parties/index.js
new file mode 100644
index 0000000..5f7ae00
--- /dev/null
+++ b/imports/api/parties/index.js
@@ -0,0 +1,3 @@
+import './publish';
+
+export * from './collection';
-- 
2.7.4


From aa66b079c64979094c721c532f539b2e275d2edd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:16:11 +0200
Subject: [PATCH 100/412] Step 9.5: Remove old parties.js

---
 imports/api/parties.js | 15 ---------------
 1 file changed, 15 deletions(-)
 delete mode 100644 imports/api/parties.js

diff --git a/imports/api/parties.js b/imports/api/parties.js
deleted file mode 100644
index 3e283c1..0000000
--- a/imports/api/parties.js
+++ /dev/null
@@ -1,15 +0,0 @@
-import { Mongo } from 'meteor/mongo';
-
-export const Parties = new Mongo.Collection('parties');
-
-Parties.allow({
-  insert(userId, party) {
-    return userId && party.owner === userId;
-  },
-  update(userId, party, fields, modifier) {
-    return userId && party.owner === userId;
-  },
-  remove(userId, party) {
-    return userId && party.owner === userId;
-  }
-});
-- 
2.7.4


From c51ed1f62371a38d93c956c53b3bbbdce0fbba07 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:18:56 +0200
Subject: [PATCH 101/412] Step 9.6: Add the `parties` subscription

---
 imports/ui/components/partiesList/partiesList.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 54e8ad3..7aced57 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -13,6 +13,8 @@ class PartiesList {
 
     $reactive(this).attach($scope);
 
+    this.subscribe('parties');
+
     this.helpers({
       parties() {
         return Parties.find({});
-- 
2.7.4


From dbfedcf4d60f61b81aab11c0fc3dc3cda2255274 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:20:20 +0200
Subject: [PATCH 102/412] Step 9.7: Add public party checkbox to the add new
 party form

---
 imports/ui/components/partyAdd/partyAdd.html | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/imports/ui/components/partyAdd/partyAdd.html b/imports/ui/components/partyAdd/partyAdd.html
index 3508bef..4db1888 100644
--- a/imports/ui/components/partyAdd/partyAdd.html
+++ b/imports/ui/components/partyAdd/partyAdd.html
@@ -7,5 +7,9 @@
     Description:
   </label>
   <input type="text" ng-model="partyAdd.party.description" />
+  <label>
+    Public Party?
+  </label>
+  <input type="checkbox" ng-model="partyAdd.party.public">
   <button ng-click="partyAdd.submit()">Add Party!</button>
 </form>
-- 
2.7.4


From 5cef270210b5ee78d8da009534753787580d614f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:20:49 +0200
Subject: [PATCH 103/412] Step 9.8: Add is public checkbox to the party details
 view

---
 imports/ui/components/partyDetails/partyDetails.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index b5c939b..4e0cc68 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -2,6 +2,7 @@ The party your selected is:
 <form>
   Party name: <input type="text" ng-model="partyDetails.party.name" />
   Description: <input type="text" ng-model="partyDetails.party.description" />
+  Public Party? <input type="checkbox" ng-model="partyDetails.party.public">
   <button ng-click="partyDetails.save()">Save</button>
 </form>
 
-- 
2.7.4


From 8af932527ae58ce474422a710a671984a593413a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:21:31 +0200
Subject: [PATCH 104/412] Step 9.9: Add is public checkbox to the party details
 component

---
 imports/ui/components/partyDetails/partyDetails.js | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index 1767720..903ec9d 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -30,7 +30,8 @@ class PartyDetails {
     }, {
       $set: {
         name: this.party.name,
-        description: this.party.description
+        description: this.party.description,
+        public: this.party.public
       }
     }, (error) => {
       if (error) {
-- 
2.7.4


From 4c99c5ea3011b60d40792e7b566412a7eac0ff58 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:22:34 +0200
Subject: [PATCH 105/412] Step 9.10: Add `parties` subscription to the
 PartyDetails

---
 imports/ui/components/partyDetails/partyDetails.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index 903ec9d..9c6a6f7 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -15,6 +15,8 @@ class PartyDetails {
 
     this.partyId = $stateParams.partyId;
 
+    this.subscribe('parties');
+
     this.helpers({
       party() {
         return Parties.findOne({
-- 
2.7.4


From 731f072ce53847bc1762369941e291bdb9645023 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:24:09 +0200
Subject: [PATCH 106/412] Step 9.11: Create the users publication

---
 imports/api/users.js | 12 ++++++++++++
 1 file changed, 12 insertions(+)
 create mode 100644 imports/api/users.js

diff --git a/imports/api/users.js b/imports/api/users.js
new file mode 100644
index 0000000..4c9fee9
--- /dev/null
+++ b/imports/api/users.js
@@ -0,0 +1,12 @@
+import { Meteor } from 'meteor/meteor';
+
+if (Meteor.isServer) {
+  Meteor.publish('users', function() {
+    return Meteor.users.find({}, {
+      fields: {
+        emails: 1,
+        profile: 1
+      }
+    });
+  });
+}
-- 
2.7.4


From cdc4e2e2d6a7318e4ab3cc314369b7780b25ebbf Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:24:32 +0200
Subject: [PATCH 107/412] Step 9.12: Add `users` publication to the server-side

---
 server/main.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/server/main.js b/server/main.js
index d4c97f0..1acdc6c 100644
--- a/server/main.js
+++ b/server/main.js
@@ -1,2 +1,3 @@
 import '../imports/startup/fixtures';
 import '../imports/api/parties';
+import '../imports/api/users';
-- 
2.7.4


From 07f8301409331dbabd7b696814eda433f243f8a9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:26:29 +0200
Subject: [PATCH 108/412] Step 9.13: Add `users` subscription and helper

---
 imports/ui/components/partyDetails/partyDetails.js | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index 9c6a6f7..a526c43 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -16,12 +16,16 @@ class PartyDetails {
     this.partyId = $stateParams.partyId;
 
     this.subscribe('parties');
+    this.subscribe('users');
 
     this.helpers({
       party() {
         return Parties.findOne({
           _id: $stateParams.partyId
         });
+      },
+      users() {
+        return Meteor.users.find({});
       }
     });
   }
-- 
2.7.4


From 094e26706c587d456153766835e99ff8f55bd75e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:27:20 +0200
Subject: [PATCH 109/412] Step 9.14: Add the users list to the party details
 view

---
 imports/ui/components/partyDetails/partyDetails.html | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index 4e0cc68..99de077 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -7,3 +7,10 @@ The party your selected is:
 </form>
 
 <button ui-sref="parties">Back</button>
+
+<ul>
+  Users:
+  <li ng-repeat="user in partyDetails.users">
+    <div>{{ user.emails[0].address }}</div>
+  </li>
+</ul>
-- 
2.7.4


From 319b335275c2f57c8546190e6f1d44c2156ebbcf Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 15:44:26 +0200
Subject: [PATCH 110/412] Step 9.15: Update tests of PartyAdd

---
 imports/ui/components/partyAdd/client/partyAdd.tests.js | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/partyAdd/client/partyAdd.tests.js b/imports/ui/components/partyAdd/client/partyAdd.tests.js
index cc1d35e..3d27875 100644
--- a/imports/ui/components/partyAdd/client/partyAdd.tests.js
+++ b/imports/ui/components/partyAdd/client/partyAdd.tests.js
@@ -1,3 +1,4 @@
+import { Meteor } from 'meteor/meteor';
 import { name as PartyAdd } from '../partyAdd';
 import { Parties } from '../../../../api/parties';
 import 'angular-mocks';
@@ -11,7 +12,11 @@ describe('PartyAdd', () => {
     let controller;
     const party = {
       name: 'Foo',
-      description: 'Birthday of Foo'
+      description: 'Birthday of Foo',
+      public: true
+    };
+    const user = {
+      _id: 'userId'
     };
 
     beforeEach(() => {
@@ -20,6 +25,8 @@ describe('PartyAdd', () => {
           $scope: $rootScope.$new(true)
         });
       });
+
+      spyOn(Meteor, 'user').and.returnValue(user);
     });
 
     describe('reset()', () => {
@@ -42,7 +49,12 @@ describe('PartyAdd', () => {
       });
 
       it('should insert a new party', () => {
-        expect(Parties.insert).toHaveBeenCalledWith(party);
+        expect(Parties.insert).toHaveBeenCalledWith({
+          name: party.name,
+          description: party.description,
+          public: party.public,
+          owner: user._id
+        });
       });
 
       it('should call reset()', () => {
-- 
2.7.4


From 0356c642ff063600d38030712d7eae171b4afbbd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 15:45:37 +0200
Subject: [PATCH 111/412] Step 9.16: Update tests of PartyDetails

---
 imports/ui/components/partyDetails/client/partyDetails.tests.js | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/partyDetails/client/partyDetails.tests.js b/imports/ui/components/partyDetails/client/partyDetails.tests.js
index 997304e..0f3aa3b 100644
--- a/imports/ui/components/partyDetails/client/partyDetails.tests.js
+++ b/imports/ui/components/partyDetails/client/partyDetails.tests.js
@@ -12,7 +12,8 @@ describe('PartyDetails', () => {
     const party = {
       _id: 'partyId',
       name: 'Foo',
-      description: 'Birthday of Foo'
+      description: 'Birthday of Foo',
+      public: true
     };
 
     beforeEach(() => {
@@ -40,7 +41,8 @@ describe('PartyDetails', () => {
         expect(Parties.update.calls.mostRecent().args[1]).toEqual({
           $set: {
             name: party.name,
-            description: party.description
+            description: party.description,
+            public: party.public
           }
         });
       });
-- 
2.7.4


From 4c0c2e06e17ed328ecf9064039b7cfb0dc53459d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:29:01 +0200
Subject: [PATCH 112/412] Step 11.1: Update the module initialization

---
 client/main.js | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/client/main.js b/client/main.js
index 212f992..06731e1 100644
--- a/client/main.js
+++ b/client/main.js
@@ -1,4 +1,19 @@
 import angular from 'angular';
-import angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
 
 import { name as Socially } from '../imports/ui/components/socially/socially';
+
+function onReady() {
+  angular.bootstrap(document, [
+    Socially
+  ], {
+    strictDi: true
+  });
+}
+
+if (Meteor.isCordova) {
+  angular.element(document).on('deviceready', onReady);
+} else {
+  angular.element(document).ready(onReady);
+}
-- 
2.7.4


From a6abf2211751f0cbf32f65d55fb1ccfa433f448c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:29:45 +0200
Subject: [PATCH 113/412] Step 11.2: Remove the ngApp and ngStrictDi

---
 client/index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/index.html b/client/index.html
index 806f6ab..0a26426 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,6 +1,6 @@
 <head>
   <base href="/">
 </head>
-<body ng-app="socially" ng-strict-di="">
+<body>
   <socially></socially>
 </body>
-- 
2.7.4


From 42108df8f5e2f3052e0f618aa2de705434636d4b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:32:51 +0200
Subject: [PATCH 114/412] Step 12.1: Add options to the parties publish

---
 imports/api/parties/publish.js | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/imports/api/parties/publish.js b/imports/api/parties/publish.js
index 590f23b..65b8f38 100644
--- a/imports/api/parties/publish.js
+++ b/imports/api/parties/publish.js
@@ -3,7 +3,7 @@ import { Meteor } from 'meteor/meteor';
 import { Parties } from './collection';
 
 if (Meteor.isServer) {
-  Meteor.publish('parties', function() {
+  Meteor.publish('parties', function(options) {
     const selector = {
       $or: [{
         // the public parties
@@ -26,6 +26,6 @@ if (Meteor.isServer) {
       }]
     };
 
-    return Parties.find(selector);
+    return Parties.find(selector, options);
   });
 }
-- 
2.7.4


From b2088326e9801856f5be3f01dfbd3198baf0ae79 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:33:40 +0200
Subject: [PATCH 115/412] Step 12.2: Add the pagination default params

---
 imports/ui/components/partiesList/partiesList.js | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 7aced57..a68c32d 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -13,6 +13,12 @@ class PartiesList {
 
     $reactive(this).attach($scope);
 
+    this.perPage = 3;
+    this.page = 1;
+    this.sort = {
+      name: 1
+    };
+
     this.subscribe('parties');
 
     this.helpers({
-- 
2.7.4


From 2cd216800b304d8044ab4b316b66c6c041a1328a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:35:13 +0200
Subject: [PATCH 116/412] Step 12.3: Add the params to the subscription

---
 imports/ui/components/partiesList/partiesList.js | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index a68c32d..8c04090 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -19,7 +19,11 @@ class PartiesList {
       name: 1
     };
 
-    this.subscribe('parties');
+    this.subscribe('parties', () => [{
+      limit: parseInt(this.perPage),
+      skip: parseInt((this.getReactively('page') - 1) * this.perPage),
+      sort: this.getReactively('sort')}
+    ]);
 
     this.helpers({
       parties() {
-- 
2.7.4


From b49de92afd0bdac69564804fcbaf07e58d3ce496 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:36:07 +0200
Subject: [PATCH 117/412] Step 12.4: Add the sort parameter to the collection
 helper

---
 imports/ui/components/partiesList/partiesList.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 8c04090..9d3493a 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -27,7 +27,9 @@ class PartiesList {
 
     this.helpers({
       parties() {
-        return Parties.find({});
+        return Parties.find({}, {
+          sort : this.getReactively('sort')
+        });
       }
     });
   }
-- 
2.7.4


From 297c7e7a2a2489d4dd53c99f14667726438cae07 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:37:39 +0200
Subject: [PATCH 118/412] Step 12.5: Install `angular-utils-pagination`

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index b8cdb95..3df8d27 100644
--- a/package.json
+++ b/package.json
@@ -9,6 +9,7 @@
     "angular": "^1.5.3",
     "angular-meteor": "^1.3.9",
     "angular-ui-router": "^0.2.18",
+    "angular-utils-pagination": "^0.11.1",
     "meteor-node-stubs": "~0.2.0"
   },
   "devDependencies": {
-- 
2.7.4


From 9cb4ce7774fb859d27952240114c75bf772818de Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:38:35 +0200
Subject: [PATCH 119/412] Step 12.6: Add new dependency

---
 imports/ui/components/partiesList/partiesList.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 9d3493a..cae9853 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -1,6 +1,7 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 import uiRouter from 'angular-ui-router';
+import utilsPagination from 'angular-utils-pagination';
 
 import template from './partiesList.html';
 import { Parties } from '../../../api/parties';
@@ -41,6 +42,7 @@ const name = 'partiesList';
 export default angular.module(name, [
   angularMeteor,
   uiRouter,
+  utilsPagination,
   PartyAdd,
   PartyRemove
 ]).component(name, {
-- 
2.7.4


From 5f440c8d3312882723dd35dc954d3e28e62084cf Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:39:32 +0200
Subject: [PATCH 120/412] Step 12.7: Add usage to the dir-pagination directive

---
 imports/ui/components/partiesList/partiesList.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index c1b07e2..71b36ae 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -1,7 +1,7 @@
 <party-add></party-add>
 
 <ul>
-  <li ng-repeat="party in partiesList.parties">
+  <li dir-paginate="party in partiesList.parties | itemsPerPage: partiesList.perPage" total-items="partiesList.partiesCount">
     <a ui-sref="partyDetails({ partyId: party._id })">
       {{party.name}}
     </a>
-- 
2.7.4


From fcf934d0873ee84028f72679f9dbbc7a0d20e426 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:39:54 +0200
Subject: [PATCH 121/412] Step 12.8: Add the pagination controls to the view

---
 imports/ui/components/partiesList/partiesList.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 71b36ae..d4206d6 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -9,3 +9,5 @@
     <party-remove party="party"></party-remove>
   </li>
 </ul>
+
+<dir-pagination-controls on-page-change="partiesList.pageChanged(newPageNumber)"></dir-pagination-controls>
-- 
2.7.4


From d60b018bd1fb217d2111c4823ae9f6c4bfc0c75c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:40:29 +0200
Subject: [PATCH 122/412] Step 12.9: Add the pageChanged method to the
 component

---
 imports/ui/components/partiesList/partiesList.js | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index cae9853..1d73e64 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -34,6 +34,10 @@ class PartiesList {
       }
     });
   }
+
+  pageChanged(newPage) {
+    this.page = newPage;
+  }
 }
 
 const name = 'partiesList';
-- 
2.7.4


From 79f24ea6f12fa726594d94a2a11905c3abf1d42c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:41:20 +0200
Subject: [PATCH 123/412] Step 12.10: Add `tmeasday:publish-counts`

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 9e4bf08..f33cc77 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -24,3 +24,4 @@ accounts-password
 dotansimha:accounts-ui-angular
 accounts-facebook
 accounts-twitter
+tmeasday:publish-counts
diff --git a/.meteor/versions b/.meteor/versions
index cc0865f..d6f5bc3 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -86,6 +86,7 @@ standard-minifier-js@1.2.0_1
 templating@1.2.14_1
 templating-tools@1.0.5
 tmeasday:check-npm-versions@0.1.1
+tmeasday:publish-counts@0.8.0
 tracker@1.1.0
 twitter@1.1.12
 ui@1.0.12
-- 
2.7.4


From 75c9fe36e393659635403addabfa7e7d3f3f1bf4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:42:27 +0200
Subject: [PATCH 124/412] Step 12.11: Add usage of Counts

---
 imports/api/parties/publish.js | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/imports/api/parties/publish.js b/imports/api/parties/publish.js
index 65b8f38..4932df2 100644
--- a/imports/api/parties/publish.js
+++ b/imports/api/parties/publish.js
@@ -1,4 +1,5 @@
 import { Meteor } from 'meteor/meteor';
+import { Counts } from 'meteor/tmeasday:publish-counts';
 
 import { Parties } from './collection';
 
@@ -26,6 +27,10 @@ if (Meteor.isServer) {
       }]
     };
 
+    Counts.publish(this, 'numberOfParties', Parties.find(selector), {
+      noReady: true
+    });
+
     return Parties.find(selector, options);
   });
 }
-- 
2.7.4


From 13d90df7fb2a9a2e2f596911df7fa80056303109 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:44:44 +0200
Subject: [PATCH 125/412] Step 12.12: Add the Count usage in the component

---
 imports/ui/components/partiesList/partiesList.js | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 1d73e64..6282160 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -3,6 +3,8 @@ import angularMeteor from 'angular-meteor';
 import uiRouter from 'angular-ui-router';
 import utilsPagination from 'angular-utils-pagination';
 
+import { Counts } from 'meteor/tmeasday:publish-counts';
+
 import template from './partiesList.html';
 import { Parties } from '../../../api/parties';
 import { name as PartyAdd } from '../partyAdd/partyAdd';
@@ -31,6 +33,9 @@ class PartiesList {
         return Parties.find({}, {
           sort : this.getReactively('sort')
         });
+      },
+      partiesCount() {
+        return Counts.get('numberOfParties');
       }
     });
   }
-- 
2.7.4


From 1c41161754a2efac19da63722498215bd6543595 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:47:04 +0200
Subject: [PATCH 126/412] Step 12.13: Create view for PartiesSort component

---
 imports/ui/components/partiesSort/partiesSort.html | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 imports/ui/components/partiesSort/partiesSort.html

diff --git a/imports/ui/components/partiesSort/partiesSort.html b/imports/ui/components/partiesSort/partiesSort.html
new file mode 100644
index 0000000..cf2102b
--- /dev/null
+++ b/imports/ui/components/partiesSort/partiesSort.html
@@ -0,0 +1,6 @@
+<div>
+  <select ng-model="partiesSort.order" ng-change="partiesSort.changed()">
+    <option value="1">Ascending</option>
+    <option value="-1">Descending</option>
+  </select>
+</div>
-- 
2.7.4


From fcfb5e4d679a4efa3bb0e4c1dd8101392c6d1eb7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:48:25 +0200
Subject: [PATCH 127/412] Step 12.14: Create PartiesSort component

---
 imports/ui/components/partiesSort/partiesSort.js | 34 ++++++++++++++++++++++++
 1 file changed, 34 insertions(+)
 create mode 100644 imports/ui/components/partiesSort/partiesSort.js

diff --git a/imports/ui/components/partiesSort/partiesSort.js b/imports/ui/components/partiesSort/partiesSort.js
new file mode 100644
index 0000000..d5ff3fb
--- /dev/null
+++ b/imports/ui/components/partiesSort/partiesSort.js
@@ -0,0 +1,34 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import template from './partiesSort.html';
+
+class PartiesSort {
+  constructor() {
+    this.changed();
+  }
+
+  changed() {
+    this.onChange({
+      sort: {
+        [this.property]: parseInt(this.order)
+      }
+    });
+  }
+}
+
+const name = 'partiesSort';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  bindings: {
+    onChange: '&',
+    property: '@',
+    order: '@'
+  },
+  controllerAs: name,
+  controller: PartiesSort
+});
-- 
2.7.4


From 300574dd3ec6923b5e35456a9566cc2de6f81d80 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:49:26 +0200
Subject: [PATCH 128/412] Step 12.15: Add as a dependency

---
 imports/ui/components/partiesList/partiesList.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 6282160..3fa1641 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -7,6 +7,7 @@ import { Counts } from 'meteor/tmeasday:publish-counts';
 
 import template from './partiesList.html';
 import { Parties } from '../../../api/parties';
+import { name as PartiesSort } from '../partiesSort/partiesSort';
 import { name as PartyAdd } from '../partyAdd/partyAdd';
 import { name as PartyRemove } from '../partyRemove/partyRemove';
 
@@ -52,6 +53,7 @@ export default angular.module(name, [
   angularMeteor,
   uiRouter,
   utilsPagination,
+  PartiesSort,
   PartyAdd,
   PartyRemove
 ]).component(name, {
-- 
2.7.4


From a874343753af6ec67d8766d475bf544ad0ee81c7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:50:20 +0200
Subject: [PATCH 129/412] Step 12.16: Implement component

---
 imports/ui/components/partiesList/partiesList.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index d4206d6..0fe847e 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -1,5 +1,7 @@
 <party-add></party-add>
 
+<parties-sort on-change="partiesList.sortChanged(sort)" property="name" order="1"></parties-sort>
+
 <ul>
   <li dir-paginate="party in partiesList.parties | itemsPerPage: partiesList.perPage" total-items="partiesList.partiesCount">
     <a ui-sref="partyDetails({ partyId: party._id })">
-- 
2.7.4


From 1b2be971265817bd5cf61ff37c0af5a6ed424fd0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 12:51:09 +0200
Subject: [PATCH 130/412] Step 12.17: Handle sort changes

---
 imports/ui/components/partiesList/partiesList.js | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 3fa1641..199a0b8 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -44,6 +44,10 @@ class PartiesList {
   pageChanged(newPage) {
     this.page = newPage;
   }
+
+  sortChanged(sort) {
+    this.sort = sort;
+  }
 }
 
 const name = 'partiesList';
-- 
2.7.4


From 9e1bf724dcce7d62be37b1b6ae0614ba85c49b11 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:12:35 +0200
Subject: [PATCH 131/412] Step 12.18: Add searchString to `parties` publication

---
 imports/api/parties/publish.js | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/imports/api/parties/publish.js b/imports/api/parties/publish.js
index 4932df2..67c9bdb 100644
--- a/imports/api/parties/publish.js
+++ b/imports/api/parties/publish.js
@@ -4,7 +4,7 @@ import { Counts } from 'meteor/tmeasday:publish-counts';
 import { Parties } from './collection';
 
 if (Meteor.isServer) {
-  Meteor.publish('parties', function(options) {
+  Meteor.publish('parties', function(options, searchString) {
     const selector = {
       $or: [{
         // the public parties
@@ -27,6 +27,13 @@ if (Meteor.isServer) {
       }]
     };
 
+    if (typeof searchString === 'string' && searchString.length) {
+      selector.name = {
+        $regex: `.*${searchString}.*`,
+        $options : 'i'
+      };
+    }
+
     Counts.publish(this, 'numberOfParties', Parties.find(selector), {
       noReady: true
     });
-- 
2.7.4


From 3074e4fffd947c58d1a079dd526b0847b803a4e1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:15:46 +0200
Subject: [PATCH 132/412] Step 12.19: Add searchText to subscription

---
 imports/ui/components/partiesList/partiesList.js | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 199a0b8..c7221df 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -22,11 +22,13 @@ class PartiesList {
     this.sort = {
       name: 1
     };
+    this.searchText = '';
 
     this.subscribe('parties', () => [{
-      limit: parseInt(this.perPage),
-      skip: parseInt((this.getReactively('page') - 1) * this.perPage),
-      sort: this.getReactively('sort')}
+        limit: parseInt(this.perPage),
+        skip: parseInt((this.getReactively('page') - 1) * this.perPage),
+        sort: this.getReactively('sort')
+      }, this.getReactively('searchText')
     ]);
 
     this.helpers({
-- 
2.7.4


From 0b87ff662a8cd844516b8ac9355f7fcae448df8c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:16:30 +0200
Subject: [PATCH 133/412] Step 12.20: Add input with searchText as ngModel

---
 imports/ui/components/partiesList/partiesList.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 0fe847e..3c411fe 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -1,5 +1,7 @@
 <party-add></party-add>
 
+<input type="search" ng-model="partiesList.searchText" placeholder="Search" />
+
 <parties-sort on-change="partiesList.sortChanged(sort)" property="name" order="1"></parties-sort>
 
 <ul>
-- 
2.7.4


From cda011b51c6d3a663692180af4c4d7cbaf800ea5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 15:59:07 +0200
Subject: [PATCH 134/412] Step 12.21: Tests of PartiesSort

---
 .../partiesSort/client/partiesSort.tests.js        | 54 ++++++++++++++++++++++
 1 file changed, 54 insertions(+)
 create mode 100644 imports/ui/components/partiesSort/client/partiesSort.tests.js

diff --git a/imports/ui/components/partiesSort/client/partiesSort.tests.js b/imports/ui/components/partiesSort/client/partiesSort.tests.js
new file mode 100644
index 0000000..09d81b4
--- /dev/null
+++ b/imports/ui/components/partiesSort/client/partiesSort.tests.js
@@ -0,0 +1,54 @@
+import { name as PartiesSort } from '../partiesSort';
+import 'angular-mocks';
+
+describe('PartiesSort', () => {
+  beforeEach(() => {
+    window.module(PartiesSort);
+  });
+
+  describe('controller', () => {
+    let controller;
+    const onChange = function() {};
+    const property = 'name';
+    const order = -1;
+
+
+    beforeEach(() => {
+      inject(($rootScope, $componentController) => {
+        controller = $componentController(PartiesSort, {
+          $scope: $rootScope.$new(true)
+        }, {
+          onChange,
+          property,
+          order
+        });
+      });
+    });
+
+    it('should set property', () => {
+      expect(controller.property).toEqual(property);
+    });
+
+    it('should set order', () => {
+      expect(controller.order).toEqual(order);
+    });
+
+    it('should set onChange', () => {
+      expect(controller.onChange).toBe(onChange);
+    });
+
+    describe('changed()', () => {
+      it('should call onChange expression', () => {
+        spyOn(controller, 'onChange');
+
+        controller.changed();
+
+        expect(controller.onChange).toHaveBeenCalledWith({
+          sort: {
+            [property]: order
+          }
+        });
+      });
+    });
+  });
+});
-- 
2.7.4


From 1213f94b70d87d31834e4a5e00388e701ff5279e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:07:14 +0200
Subject: [PATCH 135/412] Step 12.22: Tests of PartiesList

---
 .../partiesList/client/partiesList.tests.js        | 50 ++++++++++++++++++++++
 1 file changed, 50 insertions(+)
 create mode 100644 imports/ui/components/partiesList/client/partiesList.tests.js

diff --git a/imports/ui/components/partiesList/client/partiesList.tests.js b/imports/ui/components/partiesList/client/partiesList.tests.js
new file mode 100644
index 0000000..176da85
--- /dev/null
+++ b/imports/ui/components/partiesList/client/partiesList.tests.js
@@ -0,0 +1,50 @@
+import { name as PartiesList } from '../partiesList';
+import 'angular-mocks';
+
+describe('PartiesList', () => {
+  beforeEach(() => {
+    window.module(PartiesList);
+  });
+
+  describe('controller', () => {
+    let controller;
+
+    beforeEach(() => {
+      inject(($rootScope, $componentController) => {
+        controller = $componentController(PartiesList, {
+          $scope: $rootScope.$new(true)
+        });
+      });
+    });
+
+    it('should have perPage that equals 3 by default', () => {
+      expect(controller.perPage).toEqual(3);
+    });
+
+    it('should have page that equals 1 by default', () => {
+      expect(controller.page).toEqual(1);
+    });
+
+    it('should sort by name - ASC', () => {
+      expect(controller.sort).toEqual({
+        name: 1
+      });
+    });
+
+    it('should be able to change sorting', () => {
+      controller.sortChanged({
+        name: -1
+      });
+
+      expect(controller.sort).toEqual({
+        name: -1
+      });
+    });
+
+    it('should be able to change page', () => {
+      controller.pageChanged(2);
+
+      expect(controller.page).toEqual(2);
+    });
+  });
+});
-- 
2.7.4


From 37485ccb6ac15f728999366befdd5094c55a0ea3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:23:07 +0200
Subject: [PATCH 136/412] Step 13.1: Create UninvitedFilter

---
 imports/ui/filters/uninvitedFilter.js | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)
 create mode 100644 imports/ui/filters/uninvitedFilter.js

diff --git a/imports/ui/filters/uninvitedFilter.js b/imports/ui/filters/uninvitedFilter.js
new file mode 100644
index 0000000..77528fc
--- /dev/null
+++ b/imports/ui/filters/uninvitedFilter.js
@@ -0,0 +1,20 @@
+import angular from 'angular';
+
+const name = 'uninvitedFilter';
+
+function UninvitedFilter(users, party) {
+  if (!party) {
+    return false;
+  }
+
+  return users.filter((user) => {
+    // if not the owner and not invited
+    return user._id !== party.owner && (party.invited || []).indexOf(user._id) === -1;
+  });
+}
+
+// create a module
+export default angular.module(name, [])
+  .filter(name, () => {
+    return UninvitedFilter;
+  });
-- 
2.7.4


From 1686a296ae3854bf6ed5524e2e7e54a28f221d46 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:24:04 +0200
Subject: [PATCH 137/412] Step 13.2: Install `underscore`

---
 package.json | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/package.json b/package.json
index 3df8d27..9e6806d 100644
--- a/package.json
+++ b/package.json
@@ -10,7 +10,8 @@
     "angular-meteor": "^1.3.9",
     "angular-ui-router": "^0.2.18",
     "angular-utils-pagination": "^0.11.1",
-    "meteor-node-stubs": "~0.2.0"
+    "meteor-node-stubs": "~0.2.0",
+    "underscore": "^1.8.3"
   },
   "devDependencies": {
     "angular-mocks": "^1.5.3"
-- 
2.7.4


From f58def4131ffe531cef6183eb7cb719a475bcc9a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:24:21 +0200
Subject: [PATCH 138/412] Step 13.3: Use underscore

---
 imports/ui/filters/uninvitedFilter.js | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/imports/ui/filters/uninvitedFilter.js b/imports/ui/filters/uninvitedFilter.js
index 77528fc..cfe8d2d 100644
--- a/imports/ui/filters/uninvitedFilter.js
+++ b/imports/ui/filters/uninvitedFilter.js
@@ -1,4 +1,5 @@
 import angular from 'angular';
+import _ from 'underscore';
 
 const name = 'uninvitedFilter';
 
@@ -9,7 +10,7 @@ function UninvitedFilter(users, party) {
 
   return users.filter((user) => {
     // if not the owner and not invited
-    return user._id !== party.owner && (party.invited || []).indexOf(user._id) === -1;
+    return user._id !== party.owner && !_.contains(party.invited, user._id);
   });
 }
 
-- 
2.7.4


From 5681077119a0daba8d6ee8a2f80c2c1315b91db6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:26:20 +0200
Subject: [PATCH 139/412] Step 13.4: Move list of users to separate component

---
 imports/ui/components/partyUninvited/partyUninvited.html | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 imports/ui/components/partyUninvited/partyUninvited.html

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
new file mode 100644
index 0000000..ac0bbc7
--- /dev/null
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -0,0 +1,6 @@
+<ul>
+  Users:
+  <li ng-repeat="user in partyUninvited.users">
+    <div>{{ user.emails[0].address }}</div>
+  </li>
+</ul>
-- 
2.7.4


From 1c69cf79d3b4d79f2262e31466eb47c2df0cf476 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:30:02 +0200
Subject: [PATCH 140/412] Step 13.5: Create PartyUninvited component

---
 .../ui/components/partyUninvited/partyUninvited.js | 34 ++++++++++++++++++++++
 1 file changed, 34 insertions(+)
 create mode 100644 imports/ui/components/partyUninvited/partyUninvited.js

diff --git a/imports/ui/components/partyUninvited/partyUninvited.js b/imports/ui/components/partyUninvited/partyUninvited.js
new file mode 100644
index 0000000..8ae1e9b
--- /dev/null
+++ b/imports/ui/components/partyUninvited/partyUninvited.js
@@ -0,0 +1,34 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyUninvited.html';
+
+class PartyUninvited {
+  constructor($scope) {
+    'ngInject';
+
+    $scope.viewModel(this);
+
+    this.helpers({
+      users() {
+        return Meteor.users.find({});
+      }
+    });
+  }
+}
+
+const name = 'partyUninvited';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    party: '<'
+  },
+  controller: PartyUninvited
+});
-- 
2.7.4


From ba2566d85ba809a6db42bce7e9d636aad85ea5a9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:30:46 +0200
Subject: [PATCH 141/412] Step 13.6: Add UninvitedFilter

---
 imports/ui/components/partyUninvited/partyUninvited.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.js b/imports/ui/components/partyUninvited/partyUninvited.js
index 8ae1e9b..2489fc2 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.js
+++ b/imports/ui/components/partyUninvited/partyUninvited.js
@@ -4,6 +4,7 @@ import angularMeteor from 'angular-meteor';
 import { Meteor } from 'meteor/meteor';
 
 import template from './partyUninvited.html';
+import { name as UninvitedFilter } from '../../filters/uninvitedFilter';
 
 class PartyUninvited {
   constructor($scope) {
@@ -23,7 +24,8 @@ const name = 'partyUninvited';
 
 // create a module
 export default angular.module(name, [
-  angularMeteor
+  angularMeteor,
+  UninvitedFilter
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 049d828ea7b5d635859592db708601d7ee250056 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:31:26 +0200
Subject: [PATCH 142/412] Step 13.7: Implement filter

---
 imports/ui/components/partyUninvited/partyUninvited.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index ac0bbc7..c1ccda5 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -1,6 +1,6 @@
 <ul>
-  Users:
-  <li ng-repeat="user in partyUninvited.users">
+  Users to invite:
+  <li ng-repeat="user in partyUninvited.users | uninvitedFilter:partyUninvited.party">
     <div>{{ user.emails[0].address }}</div>
   </li>
 </ul>
-- 
2.7.4


From ba95ca8cc72358ad5b8fba0cce81560b140e61b9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:32:22 +0200
Subject: [PATCH 143/412] Step 13.8: Implement component in PartyDetails view

---
 imports/ui/components/partyDetails/partyDetails.html | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index 99de077..916f23e 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -8,9 +8,4 @@ The party your selected is:
 
 <button ui-sref="parties">Back</button>
 
-<ul>
-  Users:
-  <li ng-repeat="user in partyDetails.users">
-    <div>{{ user.emails[0].address }}</div>
-  </li>
-</ul>
+<party-uninvited party="partyDetails.party"></party-uninvited>
-- 
2.7.4


From c2fcc4ad5cce44b0ce2919195b8233d9cb6a5425 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:33:20 +0200
Subject: [PATCH 144/412] Step 13.9: Add to dependencies

---
 imports/ui/components/partyDetails/partyDetails.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index a526c43..5443915 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -6,6 +6,7 @@ import { Meteor } from 'meteor/meteor';
 
 import template from './partyDetails.html';
 import { Parties } from '../../../api/parties';
+import { name as PartyUninvited } from '../partyUninvited/partyUninvited';
 
 class PartyDetails {
   constructor($stateParams, $scope, $reactive) {
@@ -54,7 +55,8 @@ const name = 'partyDetails';
 // create a module
 export default angular.module(name, [
   angularMeteor,
-  uiRouter
+  uiRouter,
+  PartyUninvited
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 788ddb03284bd86d9cc7128bb392a360d6e38d0f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:40:30 +0200
Subject: [PATCH 145/412] Step 13.10: Create DisplayNameFilter

---
 imports/ui/filters/displayNameFilter.js | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)
 create mode 100644 imports/ui/filters/displayNameFilter.js

diff --git a/imports/ui/filters/displayNameFilter.js b/imports/ui/filters/displayNameFilter.js
new file mode 100644
index 0000000..57d9250
--- /dev/null
+++ b/imports/ui/filters/displayNameFilter.js
@@ -0,0 +1,25 @@
+import angular from 'angular';
+
+const name = 'displayNameFilter';
+
+function DisplayNameFilter(user) {
+  if (!user) {
+    return '';
+  }
+
+  if (user.profile && user.profile.name) {
+    return user.profile.name;
+  }
+
+  if (user.emails) {
+    return user.emails[0].address;
+  }
+
+  return user;
+}
+
+// create a module
+export default angular.module(name, [])
+  .filter(name, () => {
+    return DisplayNameFilter;
+  });
-- 
2.7.4


From 425eec5918985e2f37a3e3a2b38c7738a615e084 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:41:15 +0200
Subject: [PATCH 146/412] Step 13.11: Add as a dependency

---
 imports/ui/components/partyUninvited/partyUninvited.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.js b/imports/ui/components/partyUninvited/partyUninvited.js
index 2489fc2..ca195d5 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.js
+++ b/imports/ui/components/partyUninvited/partyUninvited.js
@@ -5,6 +5,7 @@ import { Meteor } from 'meteor/meteor';
 
 import template from './partyUninvited.html';
 import { name as UninvitedFilter } from '../../filters/uninvitedFilter';
+import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
 
 class PartyUninvited {
   constructor($scope) {
@@ -25,7 +26,8 @@ const name = 'partyUninvited';
 // create a module
 export default angular.module(name, [
   angularMeteor,
-  UninvitedFilter
+  UninvitedFilter,
+  DisplayNameFilter
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From e5aee5cf9afdbf23aca847c73223803df4f56f5d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:41:54 +0200
Subject: [PATCH 147/412] Step 13.12: Use filter

---
 imports/ui/components/partyUninvited/partyUninvited.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index c1ccda5..9603f3a 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -1,6 +1,6 @@
 <ul>
   Users to invite:
   <li ng-repeat="user in partyUninvited.users | uninvitedFilter:partyUninvited.party">
-    <div>{{ user.emails[0].address }}</div>
+    <div>{{ user | displayNameFilter }}</div>
   </li>
 </ul>
-- 
2.7.4


From 4582ca578e97957c6ad3db18867e8729f7294ada Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:45:34 +0200
Subject: [PATCH 148/412] Step 13.13: Create template for PartyCreator
 component

---
 imports/ui/components/partyCreator/partyCreator.html | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 imports/ui/components/partyCreator/partyCreator.html

diff --git a/imports/ui/components/partyCreator/partyCreator.html b/imports/ui/components/partyCreator/partyCreator.html
new file mode 100644
index 0000000..de986fb
--- /dev/null
+++ b/imports/ui/components/partyCreator/partyCreator.html
@@ -0,0 +1,5 @@
+<p>
+  <small>
+    Posted by {{ partyCreator.creator | displayNameFilter }}
+  </small>
+</p>
-- 
2.7.4


From 28eaeb3d5e0b7cda9cac74bae1cd5186bcf5a005 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:45:54 +0200
Subject: [PATCH 149/412] Step 13.14: Create PartyCreator component

---
 imports/ui/components/partyCreator/partyCreator.js | 49 ++++++++++++++++++++++
 1 file changed, 49 insertions(+)
 create mode 100644 imports/ui/components/partyCreator/partyCreator.js

diff --git a/imports/ui/components/partyCreator/partyCreator.js b/imports/ui/components/partyCreator/partyCreator.js
new file mode 100644
index 0000000..416d637
--- /dev/null
+++ b/imports/ui/components/partyCreator/partyCreator.js
@@ -0,0 +1,49 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyCreator.html';
+import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
+
+/**
+ * PartyCreator component
+ */
+class PartyCreator {
+  constructor($scope) {
+    'ngInject';
+
+    $scope.viewModel(this);
+
+    this.helpers({
+      creator() {
+        if (!this.party) {
+          return '';
+        }
+
+        const owner = this.party.owner;
+
+        if (Meteor.userId() !== null && owner === Meteor.userId()) {
+          return 'me';
+        }
+
+        return Meteor.users.findOne(owner) || 'nobody';
+      }
+    });
+  }
+}
+
+const name = 'partyCreator';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  DisplayNameFilter
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    party: '<'
+  },
+  controller: PartyCreator
+});
-- 
2.7.4


From c3ff6649ca5928710823b1d4c464d4c0eed720e0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:46:14 +0200
Subject: [PATCH 150/412] Step 13.15: Implement component

---
 imports/ui/components/partiesList/partiesList.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 3c411fe..2b18723 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -11,6 +11,7 @@
     </a>
     <p>{{party.description}}</p>
     <party-remove party="party"></party-remove>
+    <party-creator party="party"></party-creator>
   </li>
 </ul>
 
-- 
2.7.4


From eb8d90215a639e06810e520bb1fe465d05a81f65 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 16:46:39 +0200
Subject: [PATCH 151/412] Step 13.16: Add as a dependency

---
 imports/ui/components/partiesList/partiesList.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index c7221df..919bf88 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -10,6 +10,7 @@ import { Parties } from '../../../api/parties';
 import { name as PartiesSort } from '../partiesSort/partiesSort';
 import { name as PartyAdd } from '../partyAdd/partyAdd';
 import { name as PartyRemove } from '../partyRemove/partyRemove';
+import { name as PartyCreator } from '../partyCreator/partyCreator';
 
 class PartiesList {
   constructor($scope, $reactive) {
@@ -61,7 +62,8 @@ export default angular.module(name, [
   utilsPagination,
   PartiesSort,
   PartyAdd,
-  PartyRemove
+  PartyRemove,
+  PartyCreator
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From da2dae94cfdf68103ce31eef1a1270aa74b08ac3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:06:21 +0200
Subject: [PATCH 152/412] Step 13.17: Tests of PartyCreator

---
 .../partyCreator/client/partyCreator.tests.js      | 81 ++++++++++++++++++++++
 1 file changed, 81 insertions(+)
 create mode 100644 imports/ui/components/partyCreator/client/partyCreator.tests.js

diff --git a/imports/ui/components/partyCreator/client/partyCreator.tests.js b/imports/ui/components/partyCreator/client/partyCreator.tests.js
new file mode 100644
index 0000000..dabb0b5
--- /dev/null
+++ b/imports/ui/components/partyCreator/client/partyCreator.tests.js
@@ -0,0 +1,81 @@
+import { name as PartyCreator } from '../partyCreator';
+import { Meteor } from 'meteor/meteor';
+import 'angular-mocks';
+
+describe('PartyCreator', () => {
+  beforeEach(() => {
+    window.module(PartyCreator);
+  });
+
+  describe('controller', () => {
+    let $rootScope;
+    let $componentController;
+    const party = {
+      _id: 'partyId'
+    };
+
+    beforeEach(() => {
+      inject((_$rootScope_, _$componentController_) => {
+        $rootScope = _$rootScope_;
+        $componentController = _$componentController_;
+      });
+    });
+
+    function component(bindings) {
+      return $componentController(PartyCreator, {
+        $scope: $rootScope.$new(true)
+      }, bindings);
+    }
+
+    it('should return an empty string if there is no party', () => {
+      const controller = component({
+        party: undefined
+      });
+
+      expect(controller.creator).toEqual('');
+    });
+
+    it('should say `me` if logged in is the owner', () => {
+      const owner = 'userId';
+      // logged in
+      spyOn(Meteor, 'userId').and.returnValue(owner);
+      const controller = component({
+        party: {
+          owner
+        }
+      });
+
+      expect(controller.creator).toEqual('me');
+    });
+
+    it('should say `nobody` if user does not exist', () => {
+      const owner = 'userId';
+      // not logged in
+      spyOn(Meteor, 'userId').and.returnValue(null);
+      // no user found
+      spyOn(Meteor.users, 'findOne').and.returnValue(undefined);
+      const controller = component({
+        party: {
+          owner
+        }
+      });
+
+      expect(controller.creator).toEqual('nobody');
+    });
+
+    it('should return user data if user exists and it is not logged one', () => {
+      const owner = 'userId';
+      // not logged in
+      spyOn(Meteor, 'userId').and.returnValue(null);
+      // user found
+      spyOn(Meteor.users, 'findOne').and.returnValue('found');
+      const controller = component({
+        party: {
+          owner
+        }
+      });
+
+      expect(controller.creator).toEqual('found');
+    });
+  });
+});
-- 
2.7.4


From 8b3b7ce408ae66f5cf125321a73f34dd812a3d9b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:18:32 +0200
Subject: [PATCH 153/412] Step 14.1: Add `check` package

---
 .meteor/packages | 1 +
 1 file changed, 1 insertion(+)

diff --git a/.meteor/packages b/.meteor/packages
index f33cc77..054963d 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -25,3 +25,4 @@ dotansimha:accounts-ui-angular
 accounts-facebook
 accounts-twitter
 tmeasday:publish-counts
+check
-- 
2.7.4


From a77a872096cf99d429551f581a5cfbe9284015c3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:21:04 +0200
Subject: [PATCH 154/412] Step 14.2: Create invite method

---
 imports/api/parties/methods.js | 66 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 66 insertions(+)
 create mode 100644 imports/api/parties/methods.js

diff --git a/imports/api/parties/methods.js b/imports/api/parties/methods.js
new file mode 100644
index 0000000..dd75692
--- /dev/null
+++ b/imports/api/parties/methods.js
@@ -0,0 +1,66 @@
+import _ from 'underscore';
+import { Meteor } from 'meteor/meteor';
+import { check } from 'meteor/check';
+
+import { Parties } from './collection';
+
+function getContactEmail(user) {
+  if (user.emails && user.emails.length)
+    return user.emails[0].address;
+
+  if (user.services && user.services.facebook && user.services.facebook.email)
+    return user.services.facebook.email;
+
+  return null;
+}
+
+export function invite(partyId, userId) {
+  check(partyId, String);
+  check(userId, String);
+
+  if (!this.userId) {
+    throw new Meteor.Error(400, 'You have to be logged in!');
+  }
+
+  const party = Parties.findOne(partyId);
+
+  if (!party) {
+    throw new Meteor.Error(404, 'No such party!');
+  }
+
+  if (party.owner !== this.userId) {
+    throw new Meteor.Error(404, 'No permissions!');
+  }
+
+  if (party.public) {
+    throw new Meteor.Error(400, 'That party is public. No need to invite people.');
+  }
+
+  if (userId !== party.owner && ! _.contains(party.invited, userId)) {
+    Parties.update(partyId, {
+      $addToSet: {
+        invited: userId
+      }
+    });
+
+    const replyTo = getContactEmail(Meteor.users.findOne(this.userId));
+    const to = getContactEmail(Meteor.users.findOne(userId));
+
+    if (Meteor.isServer && to) {
+      Email.send({
+        to,
+        replyTo,
+        from: 'noreply@socially.com',
+        subject: `PARTY: ${party.title}`,
+        text: `
+          Hey, I just invited you to ${party.title} on Socially.
+          Come check it out: ${Meteor.absoluteUrl()}
+        `
+      });
+    }
+  }
+}
+
+Meteor.methods({
+  invite
+});
-- 
2.7.4


From 8b1c7efc82876ac69d3938b88a4980c777c2da7c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:21:28 +0200
Subject: [PATCH 155/412] Step 14.3: Import methods

---
 imports/api/parties/index.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/api/parties/index.js b/imports/api/parties/index.js
index 5f7ae00..96b72b2 100644
--- a/imports/api/parties/index.js
+++ b/imports/api/parties/index.js
@@ -1,3 +1,4 @@
 import './publish';
+import './methods';
 
 export * from './collection';
-- 
2.7.4


From dcaf302bb181b6b3bb4ea8609126ebe4fe835dd7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:23:05 +0200
Subject: [PATCH 156/412] Step 14.4: Add `email` package

---
 .meteor/packages | 1 +
 1 file changed, 1 insertion(+)

diff --git a/.meteor/packages b/.meteor/packages
index 054963d..27dfd39 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -26,3 +26,4 @@ accounts-facebook
 accounts-twitter
 tmeasday:publish-counts
 check
+email
-- 
2.7.4


From ea3f6545d4d252d64998793f2755b61de7b005e0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:23:49 +0200
Subject: [PATCH 157/412] Step 14.5: Import email from module

---
 imports/api/parties/methods.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/api/parties/methods.js b/imports/api/parties/methods.js
index dd75692..054b42a 100644
--- a/imports/api/parties/methods.js
+++ b/imports/api/parties/methods.js
@@ -1,6 +1,7 @@
 import _ from 'underscore';
 import { Meteor } from 'meteor/meteor';
 import { check } from 'meteor/check';
+import { Email } from 'meteor/email';
 
 import { Parties } from './collection';
 
-- 
2.7.4


From 3d0a5b96d275a6814745220c8700ab3672096aea Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:25:59 +0200
Subject: [PATCH 158/412] Step 14.6: Add invite method to PartyUninvited

---
 imports/ui/components/partyUninvited/partyUninvited.js | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.js b/imports/ui/components/partyUninvited/partyUninvited.js
index ca195d5..7958f5a 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.js
+++ b/imports/ui/components/partyUninvited/partyUninvited.js
@@ -19,6 +19,18 @@ class PartyUninvited {
       }
     });
   }
+
+  invite(user) {
+    Meteor.call('invite', this.party._id, user._id,
+      (error) => {
+        if (error) {
+          console.log('Oops, unable to invite!');
+        } else {
+          console.log('Invited!');
+        }
+      }
+    );
+  }
 }
 
 const name = 'partyUninvited';
-- 
2.7.4


From 065f2edfd1cee3ca9c647baecbece357ed108023 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:26:36 +0200
Subject: [PATCH 159/412] Step 14.7: Add invite button

---
 imports/ui/components/partyUninvited/partyUninvited.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index 9603f3a..0cbb435 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -2,5 +2,6 @@
   Users to invite:
   <li ng-repeat="user in partyUninvited.users | uninvitedFilter:partyUninvited.party">
     <div>{{ user | displayNameFilter }}</div>
+    <button ng-click="partyUninvited.invite(user)">Invite</button>
   </li>
 </ul>
-- 
2.7.4


From c9fa34862b4d1f98f7c1ff673bf14ea713504ac4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:28:47 +0200
Subject: [PATCH 160/412] Step 14.8: Update the parties subscription to include
 invited

---
 imports/api/parties/publish.js | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/imports/api/parties/publish.js b/imports/api/parties/publish.js
index 67c9bdb..0d4d340 100644
--- a/imports/api/parties/publish.js
+++ b/imports/api/parties/publish.js
@@ -24,6 +24,15 @@ if (Meteor.isServer) {
             $exists: true
           }
         }]
+      }, {
+        // when logged in user is one of invited
+        $and: [{
+          invited: this.userId
+        }, {
+          invited: {
+            $exists: true
+          }
+        }]
       }]
     };
 
-- 
2.7.4


From dff965b671934674c25b6159c2e1a6ff8edbe87d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:42:35 +0200
Subject: [PATCH 161/412] Step 14.9: Add rsvp method

---
 imports/api/parties/methods.js | 79 +++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 78 insertions(+), 1 deletion(-)

diff --git a/imports/api/parties/methods.js b/imports/api/parties/methods.js
index 054b42a..e8aa1ad 100644
--- a/imports/api/parties/methods.js
+++ b/imports/api/parties/methods.js
@@ -62,6 +62,83 @@ export function invite(partyId, userId) {
   }
 }
 
+export function rsvp(partyId, rsvp) {
+  check(partyId, String);
+  check(rsvp, String);
+
+  if (!this.userId) {
+    throw new Meteor.Error(403, 'You must be logged in to RSVP');
+  }
+
+  if (!_.contains(['yes', 'no', 'maybe'], rsvp)) {
+    throw new Meteor.Error(400, 'Invalid RSVP');
+  }
+
+  const party = Parties.findOne({
+    _id: partyId,
+    $or: [{
+      // is public
+      $and: [{
+        public: true
+      }, {
+        public: {
+          $exists: true
+        }
+      }]
+    },{
+      // is owner
+      $and: [{
+        owner: this.userId
+      }, {
+        owner: {
+          $exists: true
+        }
+      }]
+    }, {
+      // is invited
+      $and: [{
+        invited: this.userId
+      }, {
+        invited: {
+          $exists: true
+        }
+      }]
+    }]
+  });
+
+  if (!party) {
+    throw new Meteor.Error(404, 'No such party');
+  }
+
+  const hasUserRsvp = _.findWhere(party.rsvps, {
+    user: this.userId
+  });
+
+  if (!hasUserRsvp) {
+    // add new rsvp entry
+    Parties.update(partyId, {
+      $push: {
+        rsvps: {
+          rsvp,
+          user: this.userId
+        }
+      }
+    });
+  } else {
+    // update rsvp entry
+    const userId = this.userId;
+    Parties.update({
+      _id: partyId,
+      'rsvps.user': userId
+    }, {
+      $set: {
+        'rsvps.$.rsvp': rsvp
+      }
+    });
+  }
+}
+
 Meteor.methods({
-  invite
+  invite,
+  rsvp
 });
-- 
2.7.4


From 55e4cd2835c9d6d4576cf754925c7abae8e4baf9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:45:36 +0200
Subject: [PATCH 162/412] Step 14.10: Create PartyRsvp component

---
 imports/ui/components/partyRsvp/partyRsvp.js | 44 ++++++++++++++++++++++++++++
 1 file changed, 44 insertions(+)
 create mode 100644 imports/ui/components/partyRsvp/partyRsvp.js

diff --git a/imports/ui/components/partyRsvp/partyRsvp.js b/imports/ui/components/partyRsvp/partyRsvp.js
new file mode 100644
index 0000000..17aeb99
--- /dev/null
+++ b/imports/ui/components/partyRsvp/partyRsvp.js
@@ -0,0 +1,44 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyRsvp.html';
+
+class PartyRsvp {
+  yes() {
+    this.answer('yes');
+  }
+
+  maybe() {
+    this.answer('maybe');
+  }
+
+  no() {
+    this.answer('no');
+  }
+
+  answer(answer) {
+    Meteor.call('rsvp', this.party._id, answer, (error) => {
+      if (error) {
+        console.error('Oops, unable to rsvp!');
+      } else {
+        console.log('RSVP done!')
+      }
+    });
+  }
+}
+
+const name = 'partyRsvp';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    party: '<'
+  },
+  controller: PartyRsvp
+});
-- 
2.7.4


From 21872375d3f2f33ce732f5707dab6c78cb8898d9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:46:38 +0200
Subject: [PATCH 163/412] Step 14.11: Create template

---
 imports/ui/components/partyRsvp/partyRsvp.html | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/ui/components/partyRsvp/partyRsvp.html

diff --git a/imports/ui/components/partyRsvp/partyRsvp.html b/imports/ui/components/partyRsvp/partyRsvp.html
new file mode 100644
index 0000000..ca15260
--- /dev/null
+++ b/imports/ui/components/partyRsvp/partyRsvp.html
@@ -0,0 +1,3 @@
+<input type="button" value="I'm going!" ng-click="partyRsvp.yes()"/>
+<input type="button" value="Maybe" ng-click="partyRsvp.maybe()"/>
+<input type="button" value="No" ng-click="partyRsvp.no()"/>
-- 
2.7.4


From 65eeaf5be4a92a73f0e55cef3959bf3868cf9ec8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:48:22 +0200
Subject: [PATCH 164/412] Step 14.12: Add component to the view

---
 imports/ui/components/partiesList/partiesList.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 2b18723..bced521 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -11,6 +11,7 @@
     </a>
     <p>{{party.description}}</p>
     <party-remove party="party"></party-remove>
+    <party-rsvp party="party"></party-rsvp>
     <party-creator party="party"></party-creator>
   </li>
 </ul>
-- 
2.7.4


From a9d3b0f29218c9faa53c9ae00b6d5d63ba8bce7c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:48:36 +0200
Subject: [PATCH 165/412] Step 14.13: Add as a dependency

---
 imports/ui/components/partiesList/partiesList.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 919bf88..14efe13 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -11,6 +11,7 @@ import { name as PartiesSort } from '../partiesSort/partiesSort';
 import { name as PartyAdd } from '../partyAdd/partyAdd';
 import { name as PartyRemove } from '../partyRemove/partyRemove';
 import { name as PartyCreator } from '../partyCreator/partyCreator';
+import { name as PartyRsvp } from '../partyRsvp/partyRsvp';
 
 class PartiesList {
   constructor($scope, $reactive) {
@@ -63,7 +64,8 @@ export default angular.module(name, [
   PartiesSort,
   PartyAdd,
   PartyRemove,
-  PartyCreator
+  PartyCreator,
+  PartyRsvp
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 255ebc470fbecd5cfd1cf6db02930bc607119e16 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:53:02 +0200
Subject: [PATCH 166/412] Step 14.14: Create view for PartyRsvpsList component

---
 imports/ui/components/partyRsvpsList/partyRsvpsList.html | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 imports/ui/components/partyRsvpsList/partyRsvpsList.html

diff --git a/imports/ui/components/partyRsvpsList/partyRsvpsList.html b/imports/ui/components/partyRsvpsList/partyRsvpsList.html
new file mode 100644
index 0000000..efc38ed
--- /dev/null
+++ b/imports/ui/components/partyRsvpsList/partyRsvpsList.html
@@ -0,0 +1,6 @@
+Who is coming: Yes -
+{{ (partyRsvpsList.rsvps | filter:{rsvp:'yes'}).length }}
+Maybe -
+{{ (partyRsvpsList.rsvps | filter:{rsvp:'maybe'}).length }}
+No -
+{{ (partyRsvpsList.rsvps | filter:{rsvp:'no'}).length }}
-- 
2.7.4


From f8027c92baf8a8884af4916a5a2baab175649ebd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:53:16 +0200
Subject: [PATCH 167/412] Step 14.15: Create component

---
 .../ui/components/partyRsvpsList/partyRsvpsList.js   | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)
 create mode 100644 imports/ui/components/partyRsvpsList/partyRsvpsList.js

diff --git a/imports/ui/components/partyRsvpsList/partyRsvpsList.js b/imports/ui/components/partyRsvpsList/partyRsvpsList.js
new file mode 100644
index 0000000..755c9f9
--- /dev/null
+++ b/imports/ui/components/partyRsvpsList/partyRsvpsList.js
@@ -0,0 +1,20 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import template from './partyRsvpsList.html';
+
+class PartyRsvpsList { }
+
+const name = 'partyRsvpsList';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    rsvps: '<'
+  },
+  controller: PartyRsvpsList
+});
-- 
2.7.4


From d66059832f3de1d6789aef3251629890c3231c8f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:53:32 +0200
Subject: [PATCH 168/412] Step 14.16: Add to the view

---
 imports/ui/components/partiesList/partiesList.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index bced521..60dbea3 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -12,6 +12,7 @@
     <p>{{party.description}}</p>
     <party-remove party="party"></party-remove>
     <party-rsvp party="party"></party-rsvp>
+    <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
     <party-creator party="party"></party-creator>
   </li>
 </ul>
-- 
2.7.4


From 9d32fb405b304cdecd9db61b46e7f40ace6cac27 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:53:47 +0200
Subject: [PATCH 169/412] Step 14.17: Also as a dependency

---
 imports/ui/components/partiesList/partiesList.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 14efe13..42342ca 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -12,6 +12,7 @@ import { name as PartyAdd } from '../partyAdd/partyAdd';
 import { name as PartyRemove } from '../partyRemove/partyRemove';
 import { name as PartyCreator } from '../partyCreator/partyCreator';
 import { name as PartyRsvp } from '../partyRsvp/partyRsvp';
+import { name as PartyRsvpsList } from '../partyRsvpsList/partyRsvpsList';
 
 class PartiesList {
   constructor($scope, $reactive) {
@@ -65,7 +66,8 @@ export default angular.module(name, [
   PartyAdd,
   PartyRemove,
   PartyCreator,
-  PartyRsvp
+  PartyRsvp,
+  PartyRsvpsList
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 57f041492fdc82cb52d9fdad020b00b27b07d4cb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:57:13 +0200
Subject: [PATCH 170/412] Step 14.18: Create view for PartyRsvpUsers component

---
 imports/ui/components/partyRsvpUsers/partyRsvpUsers.html | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 imports/ui/components/partyRsvpUsers/partyRsvpUsers.html

diff --git a/imports/ui/components/partyRsvpUsers/partyRsvpUsers.html b/imports/ui/components/partyRsvpUsers/partyRsvpUsers.html
new file mode 100644
index 0000000..445d426
--- /dev/null
+++ b/imports/ui/components/partyRsvpUsers/partyRsvpUsers.html
@@ -0,0 +1,5 @@
+<div ng-repeat="rsvp in partyRsvpUsers.rsvps | filter:{ rsvp: partyRsvpUsers.type }">
+  {{ partyRsvpUsers.getUserById(rsvp.user) | displayNameFilter }}
+  -
+  {{ partyRsvpUsers.type }}
+</div>
-- 
2.7.4


From a129328a4013010d3a9a21c9ad8b0f1b5db80aa8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:57:30 +0200
Subject: [PATCH 171/412] Step 14.19: Create component

---
 .../ui/components/partyRsvpUsers/partyRsvpUsers.js | 29 ++++++++++++++++++++++
 1 file changed, 29 insertions(+)
 create mode 100644 imports/ui/components/partyRsvpUsers/partyRsvpUsers.js

diff --git a/imports/ui/components/partyRsvpUsers/partyRsvpUsers.js b/imports/ui/components/partyRsvpUsers/partyRsvpUsers.js
new file mode 100644
index 0000000..1b4f1fa
--- /dev/null
+++ b/imports/ui/components/partyRsvpUsers/partyRsvpUsers.js
@@ -0,0 +1,29 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyRsvpUsers.html';
+import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
+
+class PartyRsvpUsers {
+  getUserById(userId) {
+    return Meteor.users.findOne(userId);
+  }
+}
+
+const name = 'partyRsvpUsers';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  DisplayNameFilter
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    rsvps: '<',
+    type: '@'
+  },
+  controller: PartyRsvpUsers
+});
-- 
2.7.4


From 2498b8e7b691878d506b8ebc7dac1b4d8ace0857 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:57:56 +0200
Subject: [PATCH 172/412] Step 14.20: Use recently created component

---
 imports/ui/components/partyRsvpsList/partyRsvpsList.html | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/imports/ui/components/partyRsvpsList/partyRsvpsList.html b/imports/ui/components/partyRsvpsList/partyRsvpsList.html
index efc38ed..2e1749d 100644
--- a/imports/ui/components/partyRsvpsList/partyRsvpsList.html
+++ b/imports/ui/components/partyRsvpsList/partyRsvpsList.html
@@ -4,3 +4,7 @@ Maybe -
 {{ (partyRsvpsList.rsvps | filter:{rsvp:'maybe'}).length }}
 No -
 {{ (partyRsvpsList.rsvps | filter:{rsvp:'no'}).length }}
+
+<party-rsvp-users rsvps="partyRsvpsList.rsvps" type="yes"></party-rsvp-users>
+<party-rsvp-users rsvps="partyRsvpsList.rsvps" type="maybe"></party-rsvp-users>
+<party-rsvp-users rsvps="partyRsvpsList.rsvps" type="no"></party-rsvp-users>
-- 
2.7.4


From d76146c321a381bb9e208e8bedb7f92df10551f1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:58:15 +0200
Subject: [PATCH 173/412] Step 14.21: Add as a dependency

---
 imports/ui/components/partyRsvpsList/partyRsvpsList.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyRsvpsList/partyRsvpsList.js b/imports/ui/components/partyRsvpsList/partyRsvpsList.js
index 755c9f9..c1ebd92 100644
--- a/imports/ui/components/partyRsvpsList/partyRsvpsList.js
+++ b/imports/ui/components/partyRsvpsList/partyRsvpsList.js
@@ -2,6 +2,7 @@ import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
 import template from './partyRsvpsList.html';
+import { name as PartyRsvpUsers } from '../partyRsvpUsers/partyRsvpUsers';
 
 class PartyRsvpsList { }
 
@@ -9,7 +10,8 @@ const name = 'partyRsvpsList';
 
 // create a module
 export default angular.module(name, [
-  angularMeteor
+  angularMeteor,
+  PartyRsvpUsers
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From f293caef541f53fc21eddce0c1b30d6d7baf95b2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 17:59:25 +0200
Subject: [PATCH 174/412] Step 14.22: Create view for PartyUnanswered

---
 imports/ui/components/partyUnanswered/partyUnanswered.html | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 imports/ui/components/partyUnanswered/partyUnanswered.html

diff --git a/imports/ui/components/partyUnanswered/partyUnanswered.html b/imports/ui/components/partyUnanswered/partyUnanswered.html
new file mode 100644
index 0000000..ecc1b45
--- /dev/null
+++ b/imports/ui/components/partyUnanswered/partyUnanswered.html
@@ -0,0 +1,5 @@
+<ul>
+  <li ng-repeat="invitedUser in partyUnanswered.getUnanswered()">
+    {{ partyUnanswered.getUserById(invitedUser) | displayNameFilter }}
+  </li>
+</ul>
-- 
2.7.4


From 2e94e8fa07192324bb3f4e487e9f5daf9f66d3fe Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 18:02:22 +0200
Subject: [PATCH 175/412] Step 14.23: Create component

---
 .../components/partyUnanswered/partyUnanswered.js  | 39 ++++++++++++++++++++++
 1 file changed, 39 insertions(+)
 create mode 100644 imports/ui/components/partyUnanswered/partyUnanswered.js

diff --git a/imports/ui/components/partyUnanswered/partyUnanswered.js b/imports/ui/components/partyUnanswered/partyUnanswered.js
new file mode 100644
index 0000000..39f2115
--- /dev/null
+++ b/imports/ui/components/partyUnanswered/partyUnanswered.js
@@ -0,0 +1,39 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+import _ from 'underscore';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyUnanswered.html';
+import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
+
+class PartyUnanswered {
+  getUnanswered() {
+    if (!this.party || !this.party.invited) {
+      return;
+    }
+
+    return this.party.invited.filter((user) => {
+      return !_.findWhere(this.party.rsvps, { user });
+    });
+  }
+
+  getUserById(userId) {
+    return Meteor.users.findOne(userId)
+  }
+}
+
+const name = 'partyUnanswered';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  DisplayNameFilter
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    party: '<'
+  },
+  controller: PartyUnanswered
+});
-- 
2.7.4


From 882b6675bceb119c132c8b65703f5b65c1bb4759 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 18:02:52 +0200
Subject: [PATCH 176/412] Step 14.24: Use recently created component

---
 imports/ui/components/partiesList/partiesList.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 60dbea3..4881e5c 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -13,6 +13,7 @@
     <party-remove party="party"></party-remove>
     <party-rsvp party="party"></party-rsvp>
     <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
+    <party-unanswered party="party"></party-unanswered>
     <party-creator party="party"></party-creator>
   </li>
 </ul>
-- 
2.7.4


From b7ff99407f1b5731d8f6f0835b699c933c0fd351 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 18:03:12 +0200
Subject: [PATCH 177/412] Step 14.25: Add as a dependency

---
 imports/ui/components/partiesList/partiesList.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 42342ca..a20e777 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -13,6 +13,7 @@ import { name as PartyRemove } from '../partyRemove/partyRemove';
 import { name as PartyCreator } from '../partyCreator/partyCreator';
 import { name as PartyRsvp } from '../partyRsvp/partyRsvp';
 import { name as PartyRsvpsList } from '../partyRsvpsList/partyRsvpsList';
+import { name as PartyUnanswered } from '../partyUnanswered/partyUnanswered';
 
 class PartiesList {
   constructor($scope, $reactive) {
@@ -67,7 +68,8 @@ export default angular.module(name, [
   PartyRemove,
   PartyCreator,
   PartyRsvp,
-  PartyRsvpsList
+  PartyRsvpsList,
+  PartyUnanswered
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From b1b958159af8cbf7282c6a204b71cb3b7717bafa Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 18:03:38 +0200
Subject: [PATCH 178/412] Step 14.26: Subscribe `users`

---
 imports/ui/components/partiesList/partiesList.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index a20e777..e745b39 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -35,6 +35,8 @@ class PartiesList {
       }, this.getReactively('searchText')
     ]);
 
+    this.subscribe('users');
+
     this.helpers({
       parties() {
         return Parties.find({}, {
-- 
2.7.4


From f86c72f381fceb60f89c5481b464119c213b2133 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 19:50:23 +0200
Subject: [PATCH 179/412] Step 14.27: Tests of invite method

---
 imports/api/parties/methods.tests.js | 126 +++++++++++++++++++++++++++++++++++
 1 file changed, 126 insertions(+)
 create mode 100644 imports/api/parties/methods.tests.js

diff --git a/imports/api/parties/methods.tests.js b/imports/api/parties/methods.tests.js
new file mode 100644
index 0000000..56e770c
--- /dev/null
+++ b/imports/api/parties/methods.tests.js
@@ -0,0 +1,126 @@
+import { invite } from './methods';
+import { Parties } from './collection';
+
+import { Meteor } from 'meteor/meteor';
+
+if (Meteor.isServer) {
+  describe('Parties / Methods', () => {
+    describe('invite', () => {
+      function loggedIn(userId = 'userId') {
+        return {
+          userId
+        };
+      }
+
+      it('should be called from Method', () => {
+        spyOn(invite, 'apply');
+
+        try {
+          Meteor.call('invite');
+        } catch (e) {}
+
+        expect(invite.apply).toHaveBeenCalled();
+      });
+
+      it('should fail on missing partyId', () => {
+        expect(() => {
+          invite.call({});
+        }).toThrowError();
+      });
+
+      it('should fail on missing userId', () => {
+        expect(() => {
+          invite.call({}, 'partyId');
+        }).toThrowError();
+      });
+
+      it('should fail on not logged in', () => {
+        expect(() => {
+          invite.call({}, 'partyId', 'userId');
+        }).toThrowError(/logged in/i);
+      });
+
+      it('should look for a party', () => {
+        const partyId = 'partyId';
+        spyOn(Parties, 'findOne');
+
+        try {
+          invite.call(loggedIn(), partyId, 'userId');
+        } catch (e) {}
+
+        expect(Parties.findOne).toHaveBeenCalledWith(partyId);
+      });
+
+      it('should fail if party does not exist', () => {
+        spyOn(Parties, 'findOne').and.returnValue(undefined);
+
+        expect(() => {
+          invite.call(loggedIn(), 'partyId', 'userId');
+        }).toThrowError(/404/);
+      });
+
+      it('should fail if logged in user is not the owner', () => {
+        spyOn(Parties, 'findOne').and.returnValue({
+          owner: 'notUserId'
+        });
+
+        expect(() => {
+          invite.call(loggedIn(), 'partyId', 'userId');
+        }).toThrowError(/404/);
+      });
+
+      it('should fail on public party', () => {
+        spyOn(Parties, 'findOne').and.returnValue({
+          owner: 'userId',
+          public: true
+        });
+
+        expect(() => {
+          invite.call(loggedIn(), 'partyId', 'userId');
+        }).toThrowError(/400/);
+      });
+
+      it('should NOT invite user who is the owner', () => {
+        spyOn(Parties, 'findOne').and.returnValue({
+          owner: 'userId'
+        });
+        spyOn(Parties, 'update');
+
+        invite.call(loggedIn(), 'partyId', 'userId');
+
+        expect(Parties.update).not.toHaveBeenCalled();
+      });
+
+      it('should NOT invite user who has been already invited', () => {
+        spyOn(Parties, 'findOne').and.returnValue({
+          owner: 'userId',
+          invited: ['invitedId']
+        });
+        spyOn(Parties, 'update');
+
+        invite.call(loggedIn(), 'partyId', 'invitedId');
+
+        expect(Parties.update).not.toHaveBeenCalled();
+      });
+
+      it('should invite user who has not been invited and is not the owner', () => {
+        const partyId = 'partyId';
+        const userId = 'notInvitedId';
+        spyOn(Parties, 'findOne').and.returnValue({
+          owner: 'userId',
+          invited: ['invitedId']
+        });
+        spyOn(Parties, 'update');
+        spyOn(Meteor.users, 'findOne').and.returnValue({});
+
+        invite.call(loggedIn(), partyId, userId);
+
+        expect(Parties.update).toHaveBeenCalledWith(partyId, {
+          $addToSet: {
+            invited: userId
+          }
+        });
+      });
+    });
+  });
+}
-- 
2.7.4


From 212cca4df7c0d7a52447ecd93e832973978ceaa5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:00:03 +0200
Subject: [PATCH 180/412] Step 14.28: Tests of rsvp Method

---
 imports/api/parties/methods.tests.js | 54 +++++++++++++++++++++++++++++++++++-
 1 file changed, 53 insertions(+), 1 deletion(-)

diff --git a/imports/api/parties/methods.tests.js b/imports/api/parties/methods.tests.js
index 56e770c..536a2b0 100644
--- a/imports/api/parties/methods.tests.js
+++ b/imports/api/parties/methods.tests.js
@@ -1,4 +1,4 @@
-import { invite } from './methods';
+import { invite, rsvp } from './methods';
 import { Parties } from './collection';
 
 import { Meteor } from 'meteor/meteor';
@@ -122,5 +122,57 @@ if (Meteor.isServer) {
         });
       });
     });
+
+    describe('rsvp', () => {
+      function loggedIn(userId = 'userId') {
+        return {
+          userId
+        };
+      }
+
+      it('should be called from Method', () => {
+        spyOn(rsvp, 'apply');
+
+        try {
+          Meteor.call('rsvp');
+        } catch (e) {}
+
+        expect(rsvp.apply).toHaveBeenCalled();
+      });
+
+      it('should fail on missing partyId', () => {
+        expect(() => {
+          rsvp.call({});
+        }).toThrowError();
+      });
+
+      it('should fail on missing rsvp', () => {
+        expect(() => {
+          rsvp.call({}, 'partyId');
+        }).toThrowError();
+      });
+
+      it('should fail if not logged in', () => {
+        expect(() => {
+          rsvp.call({}, 'partyId', 'rsvp');
+        }).toThrowError(/403/);
+      });
+
+      it('should fail on wrong answer', () => {
+        expect(() => {
+          rsvp.call(loggedIn(), 'partyId', 'wrong');
+        }).toThrowError(/400/);
+      });
+
+      ['yes', 'maybe', 'no'].forEach((answer) => {
+        it(`should pass on '${answer}'`, () => {
+          expect(() => {
+            rsvp.call(loggedIn(), 'partyId', answer);
+          }).not.toThrowError(/400/);
+        });
+      });
+
+      // TODO: more tests  
+    });
   });
 }
-- 
2.7.4


From 3f36c0c71bd0ee26fca9ff9f58bcb158d2269ea1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:07:36 +0200
Subject: [PATCH 181/412] Step 15.1: Add ngShow to PartyAdd

---
 imports/ui/components/partiesList/partiesList.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 4881e5c..d6d4c83 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -1,4 +1,4 @@
-<party-add></party-add>
+<party-add ng-show="partiesList.isLoggedIn"></party-add>
 
 <input type="search" ng-model="partiesList.searchText" placeholder="Search" />
 
-- 
2.7.4


From 16f2951d6ef2962af8e16c32c43974ed8c70334a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:09:16 +0200
Subject: [PATCH 182/412] Step 15.2: Add isLoggedIn helper

---
 imports/ui/components/partiesList/partiesList.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index e745b39..fcf7bbf 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -45,6 +45,9 @@ class PartiesList {
       },
       partiesCount() {
         return Counts.get('numberOfParties');
+      },
+      isLoggedIn() {
+        return !!Meteor.userId();
       }
     });
   }
-- 
2.7.4


From d26d68e3f2b8ed31aef781b2de974a2ee145a487 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:09:45 +0200
Subject: [PATCH 183/412] Step 15.3: Add usage for ng-hide

---
 imports/ui/components/partiesList/partiesList.html | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index d6d4c83..c3006d3 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -1,4 +1,7 @@
 <party-add ng-show="partiesList.isLoggedIn"></party-add>
+<div ng-hide="partiesList.isLoggedIn">
+  Log in to create a party!
+</div>
 
 <input type="search" ng-model="partiesList.searchText" placeholder="Search" />
 
-- 
2.7.4


From 6361c311d0ead729a7dd708c2b6a0ebac36fce0d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:10:23 +0200
Subject: [PATCH 184/412] Step 15.4: Add ngShow to PartyRsvp

---
 imports/ui/components/partiesList/partiesList.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index c3006d3..07d331f 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -14,7 +14,7 @@
     </a>
     <p>{{party.description}}</p>
     <party-remove party="party"></party-remove>
-    <party-rsvp party="party"></party-rsvp>
+    <party-rsvp party="party" ng-show="partiesList.isLoggedIn"></party-rsvp>
     <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
     <party-unanswered party="party"></party-unanswered>
     <party-creator party="party"></party-creator>
-- 
2.7.4


From d37d38490012f875b3c771f1e35d849698148768 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:10:48 +0200
Subject: [PATCH 185/412] Step 15.5: Add message for not-logged in users on the
 RSVP buttons

---
 imports/ui/components/partiesList/partiesList.html | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 07d331f..3b4a085 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -15,6 +15,10 @@
     <p>{{party.description}}</p>
     <party-remove party="party"></party-remove>
     <party-rsvp party="party" ng-show="partiesList.isLoggedIn"></party-rsvp>
+    <div ng-hide="partiesList.isLoggedIn">
+      <i>Sign in to RSVP for this party.</i>
+    </div>
+    
     <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
     <party-unanswered party="party"></party-unanswered>
     <party-creator party="party"></party-creator>
-- 
2.7.4


From b24ad4a20d028345706fea81660b7c1f934d6f2d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:12:56 +0200
Subject: [PATCH 186/412] Step 15.6: Add isOwner method

---
 imports/ui/components/partiesList/partiesList.js | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index fcf7bbf..58dd939 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -48,10 +48,17 @@ class PartiesList {
       },
       isLoggedIn() {
         return !!Meteor.userId();
+      },
+      currentUserId() {
+        return Meteor.userId();
       }
     });
   }
 
+  isOwner(party) {
+    return this.isLoggedIn && party.owner === this.currentUserId;
+  }
+
   pageChanged(newPage) {
     this.page = newPage;
   }
-- 
2.7.4


From afde0ffcd7c18555e54d354ceb016e08e0f7fe80 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:13:51 +0200
Subject: [PATCH 187/412] Step 15.7: Add ngShow to PartyRemove

---
 imports/ui/components/partiesList/partiesList.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 3b4a085..fbc61a9 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -13,12 +13,12 @@
       {{party.name}}
     </a>
     <p>{{party.description}}</p>
-    <party-remove party="party"></party-remove>
+    <party-remove party="party" ng-show="partiesList.isOwner(party)"></party-remove>
     <party-rsvp party="party" ng-show="partiesList.isLoggedIn"></party-rsvp>
     <div ng-hide="partiesList.isLoggedIn">
       <i>Sign in to RSVP for this party.</i>
     </div>
-    
+
     <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
     <party-unanswered party="party"></party-unanswered>
     <party-creator party="party"></party-creator>
-- 
2.7.4


From ec4523dc767db297f91b9cb16156fa042b20b923 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:15:08 +0200
Subject: [PATCH 188/412] Step 15.8: Add ngIf to PartyUnanswered

---
 imports/ui/components/partiesList/partiesList.html | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index fbc61a9..c4cc2c1 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -20,7 +20,12 @@
     </div>
 
     <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
-    <party-unanswered party="party"></party-unanswered>
+
+    <party-unanswered party="party" ng-if="!party.public"></party-unanswered>
+    <div ng-if="party.public">
+      Everyone is invited
+    </div>
+
     <party-creator party="party"></party-creator>
   </li>
 </ul>
-- 
2.7.4


From 6530dbbc9268291ad65aa7824fe1d1e948f45f77 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:16:17 +0200
Subject: [PATCH 189/412] Step 15.9: Add canInvite method to the component

---
 imports/ui/components/partyDetails/partyDetails.js | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index 5443915..aa4faf4 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -31,6 +31,14 @@ class PartyDetails {
     });
   }
 
+  canInvite() {
+    if (!this.party) {
+      return false;
+    }
+
+    return !this.party.public && this.party.owner === Meteor.userId();
+  }
+
   save() {
     Parties.update({
       _id: this.party._id
-- 
2.7.4


From 106d9a363662a9da5a7dbe7bf2134d4f3224b7eb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:18:07 +0200
Subject: [PATCH 190/412] Step 15.10: Add ngShow to PartyUninvited

---
 imports/ui/components/partyDetails/partyDetails.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index 916f23e..ab7abd9 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -8,4 +8,4 @@ The party your selected is:
 
 <button ui-sref="parties">Back</button>
 
-<party-uninvited party="partyDetails.party"></party-uninvited>
+<party-uninvited party="partyDetails.party" ng-show="partyDetails.canInvite()"></party-uninvited>
-- 
2.7.4


From a394ee05b848dc768be8e37d3c048de99ea9e819 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:18:54 +0200
Subject: [PATCH 191/412] Step 15.11: Add info that everyone are already
 invited

---
 imports/ui/components/partyUninvited/partyUninvited.html | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index 0cbb435..86d2519 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -4,4 +4,7 @@
     <div>{{ user | displayNameFilter }}</div>
     <button ng-click="partyUninvited.invite(user)">Invite</button>
   </li>
+  <li ng-if="(partyUninvited.users | uninvitedFilter:partyUninvited.party).length <= 0">
+    Everyone are already invited.
+  </li>
 </ul>
-- 
2.7.4


From 5e8c9517b70ba8634444c64b9ccadbf118c3422a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:19:54 +0200
Subject: [PATCH 192/412] Step 15.12: Add isLoggedIn helper to the party
 details component

---
 imports/ui/components/partyDetails/partyDetails.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index aa4faf4..351d9a8 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -27,6 +27,9 @@ class PartyDetails {
       },
       users() {
         return Meteor.users.find({});
+      },
+      isLoggedIn() {
+        return !!Meteor.userId();
       }
     });
   }
-- 
2.7.4


From 4576ce38787d7c4fa897bb7706961f11c590ddaf Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:20:39 +0200
Subject: [PATCH 193/412] Step 15.13: Add usage for ng-disabled

---
 imports/ui/components/partyDetails/partyDetails.html | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index ab7abd9..e53812d 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -1,8 +1,8 @@
 The party your selected is:
 <form>
-  Party name: <input type="text" ng-model="partyDetails.party.name" />
-  Description: <input type="text" ng-model="partyDetails.party.description" />
-  Public Party? <input type="checkbox" ng-model="partyDetails.party.public">
+  Party name: <input type="text" ng-model="partyDetails.party.name" ng-disabled="!partyDetails.isLoggedIn"/>
+  Description: <input type="text" ng-model="partyDetails.party.description" ng-disabled="!partyDetails.isLoggedIn"/>
+  Public Party? <input type="checkbox" ng-model="partyDetails.party.public" ng-disabled="!partyDetails.isLoggedIn"/>
   <button ng-click="partyDetails.save()">Save</button>
 </form>
 
-- 
2.7.4


From 021a3f19ed2f0319874213aa49a62da546918d1f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:22:55 +0200
Subject: [PATCH 194/412] Step 16.1: Install `angular-google-maps`

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 9e6806d..46fd0f7 100644
--- a/package.json
+++ b/package.json
@@ -7,6 +7,7 @@
   },
   "dependencies": {
     "angular": "^1.5.3",
+    "angular-google-maps": "^2.3.2",
     "angular-meteor": "^1.3.9",
     "angular-ui-router": "^0.2.18",
     "angular-utils-pagination": "^0.11.1",
-- 
2.7.4


From f24cf9827b59ce921251e02450d9d0b1d64f0241 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:23:36 +0200
Subject: [PATCH 195/412] Step 16.2: Install `angular-simple-logger`

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 46fd0f7..af5599d 100644
--- a/package.json
+++ b/package.json
@@ -10,6 +10,7 @@
     "angular-google-maps": "^2.3.2",
     "angular-meteor": "^1.3.9",
     "angular-ui-router": "^0.2.18",
+    "angular-simple-logger": "^0.1.7",
     "angular-utils-pagination": "^0.11.1",
     "meteor-node-stubs": "~0.2.0",
     "underscore": "^1.8.3"
-- 
2.7.4


From 8c53a405e3ae064e57857487c85a7d4d9a5649ec Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:24:57 +0200
Subject: [PATCH 196/412] Step 16.3: Create template for PartyMap

---
 imports/ui/components/partyMap/partyMap.html | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 imports/ui/components/partyMap/partyMap.html

diff --git a/imports/ui/components/partyMap/partyMap.html b/imports/ui/components/partyMap/partyMap.html
new file mode 100644
index 0000000..e590420
--- /dev/null
+++ b/imports/ui/components/partyMap/partyMap.html
@@ -0,0 +1,5 @@
+<div class="angular-google-map-container">
+  <ui-gmap-google-map center="partyMap.location || partyMap.map.center" events="partyMap.map.events" zoom="partyMap.map.zoom">
+    <ui-gmap-marker coords="partyMap.location" options="partyMap.marker.options" events="partyMapmarker.events" idKey="party-location"></ui-gmap-marker>
+  </ui-gmap-google-map>
+</div>
-- 
2.7.4


From fa6c5c5be63397d8418e8759539e390547ab4506 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:25:56 +0200
Subject: [PATCH 197/412] Step 16.4: Create component

---
 imports/ui/components/partyMap/partyMap.js | 44 ++++++++++++++++++++++++++++++
 1 file changed, 44 insertions(+)
 create mode 100644 imports/ui/components/partyMap/partyMap.js

diff --git a/imports/ui/components/partyMap/partyMap.js b/imports/ui/components/partyMap/partyMap.js
new file mode 100644
index 0000000..824df5c
--- /dev/null
+++ b/imports/ui/components/partyMap/partyMap.js
@@ -0,0 +1,44 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+import 'angular-simple-logger';
+import 'angular-google-maps';
+
+import template from './partyMap.html';
+
+class PartyMap {
+  constructor($scope) {
+    'ngInject';
+
+    this.map = {
+      center: {
+        latitude: 45,
+        longitude: -73
+      },
+      zoom: 8,
+      events: {}
+    };
+
+    this.marker = {
+      options: {
+        draggable: true
+      },
+      events: {}
+    };
+  }
+}
+
+const name = 'partyMap';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  'nemLogging', // https://github.com/angular-ui/angular-google-maps/issues/1633
+  'uiGmapgoogle-maps'
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    location: '='
+  },
+  controller: PartyMap
+});
-- 
2.7.4


From 9c58ed0b7861294fbbc2e5978f8a04cd2a0e17ef Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:27:32 +0200
Subject: [PATCH 198/412] Step 16.5: Add some class

---
 imports/ui/components/partyMap/partyMap.css | 4 ++++
 1 file changed, 4 insertions(+)
 create mode 100644 imports/ui/components/partyMap/partyMap.css

diff --git a/imports/ui/components/partyMap/partyMap.css b/imports/ui/components/partyMap/partyMap.css
new file mode 100644
index 0000000..f4b49f5
--- /dev/null
+++ b/imports/ui/components/partyMap/partyMap.css
@@ -0,0 +1,4 @@
+.angular-google-map-container {
+  height: 400px;
+  width: 400px;
+}
-- 
2.7.4


From 959fd944fb5712c7d77aff02b664f6b9a5d1a943 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:28:08 +0200
Subject: [PATCH 199/412] Step 16.6: Import styles

---
 imports/ui/components/partyMap/partyMap.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partyMap/partyMap.js b/imports/ui/components/partyMap/partyMap.js
index 824df5c..d240c5b 100644
--- a/imports/ui/components/partyMap/partyMap.js
+++ b/imports/ui/components/partyMap/partyMap.js
@@ -3,6 +3,7 @@ import angularMeteor from 'angular-meteor';
 import 'angular-simple-logger';
 import 'angular-google-maps';
 
+import './partyMap.css';
 import template from './partyMap.html';
 
 class PartyMap {
-- 
2.7.4


From fdb04f93af23d4c860461d3a42cdd9b266847aca Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:29:34 +0200
Subject: [PATCH 200/412] Step 16.7: Add as a dependency to PartyDetails

---
 imports/ui/components/partyDetails/partyDetails.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index 351d9a8..a81a8fa 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -7,6 +7,7 @@ import { Meteor } from 'meteor/meteor';
 import template from './partyDetails.html';
 import { Parties } from '../../../api/parties';
 import { name as PartyUninvited } from '../partyUninvited/partyUninvited';
+import { name as PartyMap } from '../partyMap/partyMap';
 
 class PartyDetails {
   constructor($stateParams, $scope, $reactive) {
@@ -67,7 +68,8 @@ const name = 'partyDetails';
 export default angular.module(name, [
   angularMeteor,
   uiRouter,
-  PartyUninvited
+  PartyUninvited,
+  PartyMap
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From c7006e0635b9df4fc4e5a9dfeb7834fa9468fe0b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:42:54 +0200
Subject: [PATCH 201/412] Step 16.8: Use in the view

---
 imports/ui/components/partyDetails/partyDetails.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index e53812d..7354dd6 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -9,3 +9,5 @@ The party your selected is:
 <button ui-sref="parties">Back</button>
 
 <party-uninvited party="partyDetails.party" ng-show="partyDetails.canInvite()"></party-uninvited>
+
+<party-map location="partyDetails.party.location"></party-map>
-- 
2.7.4


From 4f141be1486b91e88f838ee034085d371cd7ee1a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:44:36 +0200
Subject: [PATCH 202/412] Step 16.9: Add actions

---
 imports/ui/components/partyMap/partyMap.js | 21 +++++++++++++++++++--
 1 file changed, 19 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/partyMap/partyMap.js b/imports/ui/components/partyMap/partyMap.js
index d240c5b..9db5069 100644
--- a/imports/ui/components/partyMap/partyMap.js
+++ b/imports/ui/components/partyMap/partyMap.js
@@ -16,14 +16,31 @@ class PartyMap {
         longitude: -73
       },
       zoom: 8,
-      events: {}
+      events: {
+        click: (mapModel, eventName, originalEventArgs) => {
+          this.setLocation(originalEventArgs[0].latLng.lat(), originalEventArgs[0].latLng.lng());
+          $scope.$apply();
+        }
+      }
     };
 
     this.marker = {
       options: {
         draggable: true
       },
-      events: {}
+      events: {
+        dragend: (marker, eventName, args) => {
+          this.setLocation(marker.getPosition().lat(), marker.getPosition().lng());
+          $scope.$apply();
+        }
+      }
+    };
+  }
+
+  setLocation(latitude, longitude) {
+    this.location = {
+      latitude,
+      longitude
     };
   }
 }
-- 
2.7.4


From dfdbf02f6161f899d6aa256dcb6051186e930a33 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:45:34 +0200
Subject: [PATCH 203/412] Step 16.10: Add location to be updated with a party

---
 imports/ui/components/partyDetails/partyDetails.js | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
index a81a8fa..471edc1 100644
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ b/imports/ui/components/partyDetails/partyDetails.js
@@ -50,7 +50,8 @@ class PartyDetails {
       $set: {
         name: this.party.name,
         description: this.party.description,
-        public: this.party.public
+        public: this.party.public,
+        location: this.party.location
       }
     }, (error) => {
       if (error) {
-- 
2.7.4


From 7c7883632d9787150d77e46cf2ab61383cf4674f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:49:27 +0200
Subject: [PATCH 204/412] Step 16.11: Create view for PartiesMap

---
 imports/ui/components/partiesMap/partiesMap.html | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 imports/ui/components/partiesMap/partiesMap.html

diff --git a/imports/ui/components/partiesMap/partiesMap.html b/imports/ui/components/partiesMap/partiesMap.html
new file mode 100644
index 0000000..a488738
--- /dev/null
+++ b/imports/ui/components/partiesMap/partiesMap.html
@@ -0,0 +1,5 @@
+<div class="angular-google-map-container">
+  <ui-gmap-google-map center="partiesMap.map.center" zoom="partiesMap.map.zoom">
+    <ui-gmap-markers models="partiesMap.parties" coords="'location'" fit="true" idkey="'_id'" doRebuildAll="true"></ui-gmap-markers>
+  </ui-gmap-google-map>
+</div>
-- 
2.7.4


From 69c2f0d99cc2a08e18cb5cbe8641feca2ba48277 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:49:42 +0200
Subject: [PATCH 205/412] Step 16.12: Create component

---
 imports/ui/components/partiesMap/partiesMap.js | 37 ++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)
 create mode 100644 imports/ui/components/partiesMap/partiesMap.js

diff --git a/imports/ui/components/partiesMap/partiesMap.js b/imports/ui/components/partiesMap/partiesMap.js
new file mode 100644
index 0000000..1c94faf
--- /dev/null
+++ b/imports/ui/components/partiesMap/partiesMap.js
@@ -0,0 +1,37 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+import 'angular-simple-logger';
+import 'angular-google-maps';
+
+import template from './partiesMap.html';
+
+/**
+ * PartiesMap component
+ */
+class PartiesMap {
+  constructor() {
+    this.map = {
+      center: {
+        latitude: 45,
+        longitude: -73
+      },
+      zoom: 8
+    };
+  }
+}
+
+const name = 'partiesMap';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  'nemLogging', // https://github.com/angular-ui/angular-google-maps/issues/1633
+  'uiGmapgoogle-maps'
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    parties: '='
+  },
+  controller: PartiesMap
+});
-- 
2.7.4


From 1c106fe5832bad911a11fa8337b15cdfc985bbae Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:49:56 +0200
Subject: [PATCH 206/412] Step 16.13: Add as a dependency

---
 imports/ui/components/partiesList/partiesList.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 58dd939..a8e8e0f 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -8,6 +8,7 @@ import { Counts } from 'meteor/tmeasday:publish-counts';
 import template from './partiesList.html';
 import { Parties } from '../../../api/parties';
 import { name as PartiesSort } from '../partiesSort/partiesSort';
+import { name as PartiesMap } from '../partiesMap/partiesMap';
 import { name as PartyAdd } from '../partyAdd/partyAdd';
 import { name as PartyRemove } from '../partyRemove/partyRemove';
 import { name as PartyCreator } from '../partyCreator/partyCreator';
@@ -76,6 +77,7 @@ export default angular.module(name, [
   uiRouter,
   utilsPagination,
   PartiesSort,
+  PartiesMap,
   PartyAdd,
   PartyRemove,
   PartyCreator,
-- 
2.7.4


From d1bc515ad0b717259e2fa3f7b326609b8924cc89 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 7 Apr 2016 20:50:10 +0200
Subject: [PATCH 207/412] Step 16.14: Implement in the view

---
 imports/ui/components/partiesList/partiesList.html | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index c4cc2c1..a7984f6 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -31,3 +31,6 @@
 </ul>
 
 <dir-pagination-controls on-page-change="partiesList.pageChanged(newPageNumber)"></dir-pagination-controls>
+
+
+<parties-map parties="partiesList.parties"></parties-map>
-- 
2.7.4


From 16fb56a442f9cafdea8aad2a2ec34cf4c6f1525a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 00:31:49 +0200
Subject: [PATCH 208/412] Step 17.1: Install `bootstrap`

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index af5599d..158bf82 100644
--- a/package.json
+++ b/package.json
@@ -12,6 +12,7 @@
     "angular-ui-router": "^0.2.18",
     "angular-simple-logger": "^0.1.7",
     "angular-utils-pagination": "^0.11.1",
+    "bootstrap": "^4.0.0-alpha.2",
     "meteor-node-stubs": "~0.2.0",
     "underscore": "^1.8.3"
   },
-- 
2.7.4


From 632b7cc925876c1a63b38d4150ecf24c9177095f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 00:32:37 +0200
Subject: [PATCH 209/412] Step 17.2: Add `less` package

---
 .meteor/packages | 1 +
 1 file changed, 1 insertion(+)

diff --git a/.meteor/packages b/.meteor/packages
index 27dfd39..4e35175 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -27,3 +27,4 @@ accounts-twitter
 tmeasday:publish-counts
 check
 email
+less
-- 
2.7.4


From 461952aa74517edceda5551eb9b1c41e64e24c37 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 00:34:27 +0200
Subject: [PATCH 210/412] Step 17.3: Add main.less

---
 client/main.less | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 client/main.less

diff --git a/client/main.less b/client/main.less
new file mode 100644
index 0000000..1c1bc90
--- /dev/null
+++ b/client/main.less
@@ -0,0 +1,3 @@
+body {
+  background-color: #f9f9f9;
+}
-- 
2.7.4


From aab5101e4ecd79ecb9f25b06232c51505b724fdf Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:03:30 +0200
Subject: [PATCH 211/412] Step 17.4: Import bootstrap

---
 client/main.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/main.js b/client/main.js
index 06731e1..52cb827 100644
--- a/client/main.js
+++ b/client/main.js
@@ -1,4 +1,5 @@
 import angular from 'angular';
+import 'bootstrap/dist/css/bootstrap.css';
 
 import { Meteor } from 'meteor/meteor';
 
-- 
2.7.4


From 8b405c778931862d4c51870d56788d23bae02598 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:04:28 +0200
Subject: [PATCH 212/412] Step 17.5: Import future Socially less file

---
 client/main.less | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/main.less b/client/main.less
index 1c1bc90..4368004 100644
--- a/client/main.less
+++ b/client/main.less
@@ -1,3 +1,5 @@
 body {
   background-color: #f9f9f9;
 }
+
+@import "../imports/ui/components/socially/socially.less";
-- 
2.7.4


From 49b30c0d08e9e51fd6eef0e02332248320521de1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:05:42 +0200
Subject: [PATCH 213/412] Step 17.6: Refactor Socially

---
 imports/ui/components/socially/socially.html | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/imports/ui/components/socially/socially.html b/imports/ui/components/socially/socially.html
index 83c40e7..2e91050 100644
--- a/imports/ui/components/socially/socially.html
+++ b/imports/ui/components/socially/socially.html
@@ -1,5 +1,3 @@
-<login-buttons></login-buttons>
+<navigation class="navbar navbar-static-top navbar-dark bg-inverse"></navigation>
 
-<navigation></navigation>
-
-<div ui-view=""></div>
+<div ui-view="" class="container-fluid"></div>
-- 
2.7.4


From 9cb04b8b0965da7569535ec7bb0e7210cec4b6b1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:06:24 +0200
Subject: [PATCH 214/412] Step 17.7: Styles for Socially

---
 imports/ui/components/socially/socially.less | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/ui/components/socially/socially.less

diff --git a/imports/ui/components/socially/socially.less b/imports/ui/components/socially/socially.less
new file mode 100644
index 0000000..eec0480
--- /dev/null
+++ b/imports/ui/components/socially/socially.less
@@ -0,0 +1,3 @@
+socially {
+  display: block;
+}
-- 
2.7.4


From 4002e3258075e31a5a9f42ad8c2ace8b02e57b5f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:06:51 +0200
Subject: [PATCH 215/412] Step 17.8: Refactor index.html

---
 client/index.html | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/client/index.html b/client/index.html
index 0a26426..d4505ca 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,5 +1,10 @@
 <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
   <base href="/">
+  <title>Socially</title>
+  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
 </head>
 <body>
   <socially></socially>
-- 
2.7.4


From 19fd2977946b6b8302eef7f41cca8bd3c5b91859 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:07:16 +0200
Subject: [PATCH 216/412] Step 17.9: Refactor Navigation

---
 imports/ui/components/navigation/navigation.html | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/imports/ui/components/navigation/navigation.html b/imports/ui/components/navigation/navigation.html
index def2640..2bcae64 100644
--- a/imports/ui/components/navigation/navigation.html
+++ b/imports/ui/components/navigation/navigation.html
@@ -1,3 +1,6 @@
-<h1>
-  <a href="/parties">Home</a>
-</h1>
+<div class="fluid-container">
+  <div class="navbar-header">
+    <a href="/parties" class="navbar-brand">Socially</a>
+    <login-buttons class="navbar-brand"></login-buttons>
+  </div>
+</div>
-- 
2.7.4


From 215d10fb6d306c7273f77bb7dd5684f025fafd69 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:08:18 +0200
Subject: [PATCH 217/412] Step 17.10: Styles for Navigation

---
 imports/ui/components/navigation/navigation.less | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/ui/components/navigation/navigation.less

diff --git a/imports/ui/components/navigation/navigation.less b/imports/ui/components/navigation/navigation.less
new file mode 100644
index 0000000..4035b7b
--- /dev/null
+++ b/imports/ui/components/navigation/navigation.less
@@ -0,0 +1,3 @@
+navigation {
+  display: block;
+}
-- 
2.7.4


From 2a3a74e513910724e8ec9c5c1837ba7a6b22221a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:08:50 +0200
Subject: [PATCH 218/412] Step 17.11: Refactor PartiesList

---
 imports/ui/components/partiesList/partiesList.html | 94 ++++++++++++++--------
 1 file changed, 62 insertions(+), 32 deletions(-)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index a7984f6..29c4c69 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -1,36 +1,66 @@
-<party-add ng-show="partiesList.isLoggedIn"></party-add>
-<div ng-hide="partiesList.isLoggedIn">
-  Log in to create a party!
-</div>
-
-<input type="search" ng-model="partiesList.searchText" placeholder="Search" />
-
-<parties-sort on-change="partiesList.sortChanged(sort)" property="name" order="1"></parties-sort>
+<div class="container-fluid">
+  <div class="row">
+    <div class="col-md-12">
+      <party-add ng-show="partiesList.isLoggedIn"></party-add>
 
-<ul>
-  <li dir-paginate="party in partiesList.parties | itemsPerPage: partiesList.perPage" total-items="partiesList.partiesCount">
-    <a ui-sref="partyDetails({ partyId: party._id })">
-      {{party.name}}
-    </a>
-    <p>{{party.description}}</p>
-    <party-remove party="party" ng-show="partiesList.isOwner(party)"></party-remove>
-    <party-rsvp party="party" ng-show="partiesList.isLoggedIn"></party-rsvp>
-    <div ng-hide="partiesList.isLoggedIn">
-      <i>Sign in to RSVP for this party.</i>
+      <div class="alert alert-warning" role="alert" ng-hide="partiesList.isLoggedIn">
+        <strong>Warning!</strong>
+        Log in to create a party!
+      </div>
     </div>
-
-    <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
-
-    <party-unanswered party="party" ng-if="!party.public"></party-unanswered>
-    <div ng-if="party.public">
-      Everyone is invited
+  </div>
+  <div class="row">
+    <div class="col-md-12">
+      <h2>List of parties:</h2>
+      <form class="form-inline">
+        <div class="form-group">
+          <input type="search" ng-model="partiesList.searchText" placeholder="Search" class="form-control"/>
+        </div>
+        <parties-sort class="form-group" on-change="partiesList.sortChanged(sort)" property="name" order="1"></parties-sort>
+      </form>
     </div>
+  </div>
+  <div class="row">
+    <div class="col-md-6">
+      <ul class="parties">
+        <li dir-paginate="party in partiesList.parties | itemsPerPage: partiesList.perPage" total-items="partiesList.partiesCount">
+          <div class="row">
+            <div class="col-sm-8">
+              <h3 class="party-name">
+                <a ui-sref="partyDetails({ partyId: party._id })">{{party.name}}</a>
+              </h3>
+              <p class="party-description">
+                {{party.description}}
+              </p>
+            </div>
+            <div class="col-sm-4">
+              <party-remove party="party" ng-show="partiesList.isOwner(party)"></party-remove>
+            </div>
+          </div>
+          <div class="row">
+            <div class="col-md-12">
+              <party-rsvp party="party" ng-show="partiesList.isLoggedIn"></party-rsvp>
+              <div class="alert alert-warning" role="alert" ng-hide="partiesList.isLoggedIn">
+                <strong>Warning!</strong>
+                <i>Sign in to RSVP for this party.</i>
+              </div>
+            </div>
+          </div>
+          <div class="row">
+            <div class="col-md-4">
+              <party-creator party="party"></party-creator>
+            </div>
+            <div class="col-md-8">
+              <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
+            </div>
+          </div>
+        </li>
+      </ul>
 
-    <party-creator party="party"></party-creator>
-  </li>
-</ul>
-
-<dir-pagination-controls on-page-change="partiesList.pageChanged(newPageNumber)"></dir-pagination-controls>
-
-
-<parties-map parties="partiesList.parties"></parties-map>
+      <dir-pagination-controls on-page-change="partiesList.pageChanged(newPageNumber)"></dir-pagination-controls>
+    </div>
+    <div class="col-md-6">
+      <parties-map parties="partiesList.parties"></parties-map>
+    </div>
+  </div>
+</div>
-- 
2.7.4


From a3c5f9884b49c78256859a5cc1c7eec2bee5ba48 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:09:21 +0200
Subject: [PATCH 219/412] Step 17.12: Styles for PartiesList

---
 imports/ui/components/partiesList/partiesList.less | 30 ++++++++++++++++++++++
 1 file changed, 30 insertions(+)
 create mode 100644 imports/ui/components/partiesList/partiesList.less

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
new file mode 100644
index 0000000..6cd14df
--- /dev/null
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -0,0 +1,30 @@
+parties-list {
+  display: block;
+  padding: 25px 0;
+
+  ul.parties {
+    padding-left: 0;
+    list-style-type: none;
+
+    > li {
+      padding: 15px;
+      background-color: #fff;
+      margin: 15px 0;
+      border: 3px solid #eaeaea;
+
+     .party-name {
+       margin-top: 0px;
+       margin-bottom: 20px;
+       a {
+         text-decoration: none !important;
+         font-weight: 400;
+       }
+     }
+     .party-description {
+       font-weight: 300;
+       padding-left: 18px;
+       font-size: 14px;
+     }
+    }
+  }
+}
-- 
2.7.4


From 32baca49c36de2c839229f8675eaba2711cfb035 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:09:54 +0200
Subject: [PATCH 220/412] Step 17.13: Refactor PartyAdd

---
 imports/ui/components/partyAdd/partyAdd.html | 31 ++++++++++++++++------------
 1 file changed, 18 insertions(+), 13 deletions(-)

diff --git a/imports/ui/components/partyAdd/partyAdd.html b/imports/ui/components/partyAdd/partyAdd.html
index 4db1888..7c4d284 100644
--- a/imports/ui/components/partyAdd/partyAdd.html
+++ b/imports/ui/components/partyAdd/partyAdd.html
@@ -1,15 +1,20 @@
 <form>
-  <label>
-    Party Name:
-  </label>
-  <input type="text" ng-model="partyAdd.party.name" />
-  <label>
-    Description:
-  </label>
-  <input type="text" ng-model="partyAdd.party.description" />
-  <label>
-    Public Party?
-  </label>
-  <input type="checkbox" ng-model="partyAdd.party.public">
-  <button ng-click="partyAdd.submit()">Add Party!</button>
+  <div class="form-group">
+    <label>
+      Party Name:
+    </label>
+    <input type="text" ng-model="partyAdd.party.name" class="form-control"/>
+  </div>
+  <div class="form-group">
+    <label>
+      Description:
+    </label>
+    <input type="text" ng-model="partyAdd.party.description" class="form-control"/>
+  </div>
+  <div class="checkbox">
+    <label>
+      <input type="checkbox" ng-model="partyAdd.party.public"/> Public Party?
+    </label>
+  </div>
+  <button ng-click="partyAdd.submit()" class="btn btn-success">Add Party!</button>
 </form>
-- 
2.7.4


From c53aec99b2f8000c56faf351bb26045de868ea56 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:10:22 +0200
Subject: [PATCH 221/412] Step 17.14: Styles for PartyAdd

---
 imports/ui/components/partyAdd/partyAdd.less | 10 ++++++++++
 1 file changed, 10 insertions(+)
 create mode 100644 imports/ui/components/partyAdd/partyAdd.less

diff --git a/imports/ui/components/partyAdd/partyAdd.less b/imports/ui/components/partyAdd/partyAdd.less
new file mode 100644
index 0000000..90b24c1
--- /dev/null
+++ b/imports/ui/components/partyAdd/partyAdd.less
@@ -0,0 +1,10 @@
+party-add {
+  display: block;
+}
+
+party-add > form {
+  padding: 15px;
+  margin-bottom: 25px;
+  background-color: #fff;
+  border: 3px solid #EAEAEC;
+}
-- 
2.7.4


From 86e35fe889a7a14086e2dcf5ec58d8bbde26df6a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:11:05 +0200
Subject: [PATCH 222/412] Step 17.15: Import PartyAdd

---
 imports/ui/components/partiesList/partiesList.less | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index 6cd14df..645d165 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -28,3 +28,5 @@ parties-list {
     }
   }
 }
+
+@import "../partyAdd/partyAdd.less";
-- 
2.7.4


From 15cac68547d8a03ee3d968978d6235961ebf4b1b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:11:45 +0200
Subject: [PATCH 223/412] Step 17.16: Refactor PartiesMap

---
 imports/ui/components/partiesMap/partiesMap.html | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/partiesMap/partiesMap.html b/imports/ui/components/partiesMap/partiesMap.html
index a488738..870b2f7 100644
--- a/imports/ui/components/partiesMap/partiesMap.html
+++ b/imports/ui/components/partiesMap/partiesMap.html
@@ -1,3 +1,6 @@
+<h4>
+  See all the parties:
+</h4>
 <div class="angular-google-map-container">
   <ui-gmap-google-map center="partiesMap.map.center" zoom="partiesMap.map.zoom">
     <ui-gmap-markers models="partiesMap.parties" coords="'location'" fit="true" idkey="'_id'" doRebuildAll="true"></ui-gmap-markers>
-- 
2.7.4


From b092ce382327e8fa5c7ad87f66fb9acb9e2242bc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:12:13 +0200
Subject: [PATCH 224/412] Step 17.17: Styles for PartiesMap

---
 imports/ui/components/partiesMap/partiesMap.less | 9 +++++++++
 1 file changed, 9 insertions(+)
 create mode 100644 imports/ui/components/partiesMap/partiesMap.less

diff --git a/imports/ui/components/partiesMap/partiesMap.less b/imports/ui/components/partiesMap/partiesMap.less
new file mode 100644
index 0000000..020e970
--- /dev/null
+++ b/imports/ui/components/partiesMap/partiesMap.less
@@ -0,0 +1,9 @@
+parties-map {
+  display: block;
+  margin: 15px 5px;
+
+  .angular-google-map-container {
+    width: 100%;
+    height: 400px;
+  }
+}
-- 
2.7.4


From 482cde26345ffae1d331580cc2353d152785759a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:12:38 +0200
Subject: [PATCH 225/412] Step 17.18: Import PartiesMap

---
 imports/ui/components/partiesList/partiesList.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index 645d165..374d741 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -30,3 +30,4 @@ parties-list {
 }
 
 @import "../partyAdd/partyAdd.less";
+@import "../partiesMap/partiesMap.less";
-- 
2.7.4


From b72d356ae203494017e983ad8a1be3309dbe4088 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:13:05 +0200
Subject: [PATCH 226/412] Step 17.19: Refactor PartiesSort

---
 imports/ui/components/partiesSort/partiesSort.html | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/imports/ui/components/partiesSort/partiesSort.html b/imports/ui/components/partiesSort/partiesSort.html
index cf2102b..b2a52b3 100644
--- a/imports/ui/components/partiesSort/partiesSort.html
+++ b/imports/ui/components/partiesSort/partiesSort.html
@@ -1,6 +1,4 @@
-<div>
-  <select ng-model="partiesSort.order" ng-change="partiesSort.changed()">
-    <option value="1">Ascending</option>
-    <option value="-1">Descending</option>
-  </select>
-</div>
+<select ng-model="partiesSort.order" ng-change="partiesSort.changed()" class="form-control">
+  <option value="1">Ascending</option>
+  <option value="-1">Descending</option>
+</select>
-- 
2.7.4


From e7681f63e29373b8c6774d0a48cad3c0f4e93809 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:13:38 +0200
Subject: [PATCH 227/412] Step 17.20: Refactor PartyCreator

---
 imports/ui/components/partyCreator/partyCreator.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyCreator/partyCreator.html b/imports/ui/components/partyCreator/partyCreator.html
index de986fb..077739d 100644
--- a/imports/ui/components/partyCreator/partyCreator.html
+++ b/imports/ui/components/partyCreator/partyCreator.html
@@ -1,5 +1,5 @@
 <p>
   <small>
-    Posted by {{ partyCreator.creator | displayNameFilter }}
+    <i class="fa fa-user fa-lg"></i> {{ partyCreator.creator | displayNameFilter }}
   </small>
 </p>
-- 
2.7.4


From 2d92175bdf8a7fc1a6e4717c149ee0f081a44d2b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:14:04 +0200
Subject: [PATCH 228/412] Step 17.21: Styles for PartyCreator

---
 imports/ui/components/partyCreator/partyCreator.less | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 imports/ui/components/partyCreator/partyCreator.less

diff --git a/imports/ui/components/partyCreator/partyCreator.less b/imports/ui/components/partyCreator/partyCreator.less
new file mode 100644
index 0000000..4679f1f
--- /dev/null
+++ b/imports/ui/components/partyCreator/partyCreator.less
@@ -0,0 +1,6 @@
+party-creator {
+  i.fa {
+    margin-left: 5px;
+    margin-right: 10px;
+  }
+}
-- 
2.7.4


From e52f5789cac5c6dde91489b6f1a42f4fa50bf87c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:14:40 +0200
Subject: [PATCH 229/412] Step 17.22: Import PartyCreator

---
 imports/ui/components/partiesList/partiesList.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index 374d741..e73e928 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -31,3 +31,4 @@ parties-list {
 
 @import "../partyAdd/partyAdd.less";
 @import "../partiesMap/partiesMap.less";
+@import "../partyCreator/partyCreator.less";
-- 
2.7.4


From 65bd56b3fdb56c46e4773ead5cc09d977f4b5362 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:15:08 +0200
Subject: [PATCH 230/412] Step 17.23: Refactor PartyRemove

---
 imports/ui/components/partyRemove/partyRemove.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyRemove/partyRemove.html b/imports/ui/components/partyRemove/partyRemove.html
index 1295105..ebe46ea 100644
--- a/imports/ui/components/partyRemove/partyRemove.html
+++ b/imports/ui/components/partyRemove/partyRemove.html
@@ -1 +1 @@
-<button ng-click="partyRemove.remove()">X</button>
+<button type="button" class="close" aria-label="Close" ng-click="partyRemove.remove()"><span aria-hidden="true">&times;</span></button>
-- 
2.7.4


From be81cdbbdcaf43b5e97ec2aadbdb94c026f932ab Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:15:48 +0200
Subject: [PATCH 231/412] Step 17.24: Refactor PartyRsvp

---
 imports/ui/components/partyRsvp/partyRsvp.html | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/imports/ui/components/partyRsvp/partyRsvp.html b/imports/ui/components/partyRsvp/partyRsvp.html
index ca15260..e4c078c 100644
--- a/imports/ui/components/partyRsvp/partyRsvp.html
+++ b/imports/ui/components/partyRsvp/partyRsvp.html
@@ -1,3 +1,3 @@
-<input type="button" value="I'm going!" ng-click="partyRsvp.yes()"/>
-<input type="button" value="Maybe" ng-click="partyRsvp.maybe()"/>
-<input type="button" value="No" ng-click="partyRsvp.no()"/>
+<input type="button" value="I'm going!" ng-click="partyRsvp.yes()" class="btn btn-default" ng-class="{'btn-primary' : partyRsvp.isYes()}"/>
+<input type="button" value="Maybe" ng-click="partyRsvp.maybe()" class="btn btn-default" ng-class="{'btn-primary' : partyRsvp.isMaybe()}"/>
+<input type="button" value="No" ng-click="partyRsvp.no()" class="btn btn-default" ng-class="{'btn-primary' : partyRsvp.isNo()}"/>
-- 
2.7.4


From 22c82e2c928c7ab7a6bbe927595b432c76a3f305 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:16:13 +0200
Subject: [PATCH 232/412] Step 17.25: Styles for PartyRsvp

---
 imports/ui/components/partyRsvp/partyRsvp.less | 4 ++++
 1 file changed, 4 insertions(+)
 create mode 100644 imports/ui/components/partyRsvp/partyRsvp.less

diff --git a/imports/ui/components/partyRsvp/partyRsvp.less b/imports/ui/components/partyRsvp/partyRsvp.less
new file mode 100644
index 0000000..be52d51
--- /dev/null
+++ b/imports/ui/components/partyRsvp/partyRsvp.less
@@ -0,0 +1,4 @@
+party-rsvp {
+  display: block;
+  margin: 15px 0;
+}
-- 
2.7.4


From 637724ab97ee48cd5c6bb660d9f1431e6bb6269c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:17:04 +0200
Subject: [PATCH 233/412] Step 17.26: Import PartyRsvp

---
 imports/ui/components/partiesList/partiesList.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index e73e928..be384ba 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -32,3 +32,4 @@ parties-list {
 @import "../partyAdd/partyAdd.less";
 @import "../partiesMap/partiesMap.less";
 @import "../partyCreator/partyCreator.less";
+@import "../partyRsvp/partyRsvp.less";
-- 
2.7.4


From 6f1a504d0e1f1212e4bf8cb658d1a2d1a4285a93 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:17:32 +0200
Subject: [PATCH 234/412] Step 17.27: Refactor PartyRsvpsList

---
 .../components/partyRsvpsList/partyRsvpsList.html  | 36 ++++++++++++++++------
 1 file changed, 26 insertions(+), 10 deletions(-)

diff --git a/imports/ui/components/partyRsvpsList/partyRsvpsList.html b/imports/ui/components/partyRsvpsList/partyRsvpsList.html
index 2e1749d..5c24b02 100644
--- a/imports/ui/components/partyRsvpsList/partyRsvpsList.html
+++ b/imports/ui/components/partyRsvpsList/partyRsvpsList.html
@@ -1,10 +1,26 @@
-Who is coming: Yes -
-{{ (partyRsvpsList.rsvps | filter:{rsvp:'yes'}).length }}
-Maybe -
-{{ (partyRsvpsList.rsvps | filter:{rsvp:'maybe'}).length }}
-No -
-{{ (partyRsvpsList.rsvps | filter:{rsvp:'no'}).length }}
-
-<party-rsvp-users rsvps="partyRsvpsList.rsvps" type="yes"></party-rsvp-users>
-<party-rsvp-users rsvps="partyRsvpsList.rsvps" type="maybe"></party-rsvp-users>
-<party-rsvp-users rsvps="partyRsvpsList.rsvps" type="no"></party-rsvp-users>
+<div class="rsvp-sum">
+  <div class="rsvp-amount">
+    <div class="amount">
+      {{ (partyRsvpsList.rsvps | filter:{rsvp:'yes'}).length || 0 }}
+    </div>
+    <div class="rsvp-title">
+      YES
+    </div>
+  </div>
+  <div class="rsvp-amount">
+    <div class="amount">
+      {{ (partyRsvpsList.rsvps | filter:{rsvp:'maybe'}).length || 0 }}
+    </div>
+    <div class="rsvp-title">
+      MAYBE
+    </div>
+  </div>
+  <div class="rsvp-amount">
+    <div class="amount">
+      {{ (partyRsvpsList.rsvps | filter:{rsvp:'no'}).length || 0 }}
+    </div>
+    <div class="rsvp-title">
+      NO
+    </div>
+  </div>
+</div>
-- 
2.7.4


From 1d182cdd595dcbf77d51212bde1ff29352976e3d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:17:59 +0200
Subject: [PATCH 235/412] Step 17.28: Styles for PartyRsvpsList

---
 .../components/partyRsvpsList/partyRsvpsList.less  | 24 ++++++++++++++++++++++
 1 file changed, 24 insertions(+)
 create mode 100644 imports/ui/components/partyRsvpsList/partyRsvpsList.less

diff --git a/imports/ui/components/partyRsvpsList/partyRsvpsList.less b/imports/ui/components/partyRsvpsList/partyRsvpsList.less
new file mode 100644
index 0000000..ca24446
--- /dev/null
+++ b/imports/ui/components/partyRsvpsList/partyRsvpsList.less
@@ -0,0 +1,24 @@
+.rsvp-sum {
+  width: 160px;
+  @media (min-width: 400px) {
+    float: right;
+  }
+  @media (max-width: 400px) {
+    margin: 0 auto;
+  }
+  > .rsvp-amount {
+    display: inline-block;
+    text-align: center;
+    width: 50px;
+
+    > .amount {
+      font-weight: bold;
+      font-size: 20px;
+    }
+    > .rsvp-title {
+      font-size: 11px;
+      color: #aaa;
+      text-transform: uppercase;
+    }
+  }
+}
-- 
2.7.4


From 513544ca2ea7ed22eff5ad1eb746f2e3244980af Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:18:30 +0200
Subject: [PATCH 236/412] Step 17.29: Import PartyRsvpsList

---
 imports/ui/components/partiesList/partiesList.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index be384ba..a1eac5c 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -33,3 +33,4 @@ parties-list {
 @import "../partiesMap/partiesMap.less";
 @import "../partyCreator/partyCreator.less";
 @import "../partyRsvp/partyRsvp.less";
+@import "../partyRsvpsList/partyRsvpsList.less";
-- 
2.7.4


From 201a3c05ecb524d2a62a5cfa05620aa755fc9c77 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:19:03 +0200
Subject: [PATCH 237/412] Step 17.30: Refactor PartyUninvited

---
 imports/ui/components/partyUninvited/partyUninvited.html | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index 86d2519..e9f9e1c 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -1,10 +1,10 @@
+<h4>Users to invite:</h4>
 <ul>
-  Users to invite:
   <li ng-repeat="user in partyUninvited.users | uninvitedFilter:partyUninvited.party">
-    <div>{{ user | displayNameFilter }}</div>
-    <button ng-click="partyUninvited.invite(user)">Invite</button>
-  </li>
-  <li ng-if="(partyUninvited.users | uninvitedFilter:partyUninvited.party).length <= 0">
-    Everyone are already invited.
+    <button ng-click="partyUninvited.invite(user)" class="btn btn-primary-outline">Invite</button>
+    {{ user | displayNameFilter }}
   </li>
 </ul>
+<div class="alert alert-success" role="alert" ng-if="(partyUninvited.users | uninvitedFilter:partyUninvited.party).length <= 0">
+  Everyone are already invited.
+</div>
-- 
2.7.4


From 6ccdf23557953a5769869869e4ea70051d486fd3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:26:22 +0200
Subject: [PATCH 238/412] Step 17.31: Styles for PartyUninvited

---
 imports/ui/components/partyUninvited/partyUninvited.less | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 imports/ui/components/partyUninvited/partyUninvited.less

diff --git a/imports/ui/components/partyUninvited/partyUninvited.less b/imports/ui/components/partyUninvited/partyUninvited.less
new file mode 100644
index 0000000..52b27fe
--- /dev/null
+++ b/imports/ui/components/partyUninvited/partyUninvited.less
@@ -0,0 +1,8 @@
+party-uninvited {
+  display: block;
+
+  ul {
+    padding-left: 0;
+    list-style-type: none;
+  }
+}
-- 
2.7.4


From f4dc096f6f7352600636f54cc7d21c3aa8e7bb2b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:19:41 +0200
Subject: [PATCH 239/412] Step 17.32: Refactor PartyDetails

---
 .../ui/components/partyDetails/partyDetails.html   | 42 ++++++++++++++++------
 1 file changed, 32 insertions(+), 10 deletions(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index 7354dd6..4023174 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -1,13 +1,35 @@
-The party your selected is:
-<form>
-  Party name: <input type="text" ng-model="partyDetails.party.name" ng-disabled="!partyDetails.isLoggedIn"/>
-  Description: <input type="text" ng-model="partyDetails.party.description" ng-disabled="!partyDetails.isLoggedIn"/>
-  Public Party? <input type="checkbox" ng-model="partyDetails.party.public" ng-disabled="!partyDetails.isLoggedIn"/>
-  <button ng-click="partyDetails.save()">Save</button>
-</form>
+<div class="container-fluid">
+  <div class="row">
+    <div class="col-md-6">
+      <form>
+        <fieldset class="form-group">
+          <label>Party name</label>
+          <input type="text" ng-model="partyDetails.party.name" ng-disabled="!partyDetails.isLoggedIn" class="form-control"/>
+        </fieldset>
 
-<button ui-sref="parties">Back</button>
+        <fieldset class="form-group">
+          <label>Description</label>
+          <input type="text" ng-model="partyDetails.party.name" ng-disabled="!partyDetails.isLoggedIn" class="form-control"/>
+        </fieldset>
 
-<party-uninvited party="partyDetails.party" ng-show="partyDetails.canInvite()"></party-uninvited>
+        <div class="checkbox">
+          <label>
+            <input type="checkbox" ng-model="partyDetails.party.public" ng-disabled="!partyDetails.isLoggedIn"/>
+            Public Party?
+          </label>
+        </div>
 
-<party-map location="partyDetails.party.location"></party-map>
+        <button ng-click="partyDetails.save()" type="submit" class="btn btn-primary">Save</button>
+      </form>
+    </div>
+    <div class="col-md-6">
+      <party-map location="partyDetails.party.location"></party-map>
+    </div>
+  </div>
+
+  <div class="row">
+    <div class="col-md-6">
+      <party-uninvited party="partyDetails.party" ng-show="partyDetails.canInvite()"></party-uninvited>
+    </div>
+  </div>
+</div>
-- 
2.7.4


From 892e7cddb0ff2c7783be22db92ffd4e8cf64b4aa Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:20:17 +0200
Subject: [PATCH 240/412] Step 17.33: Styles for PartyDetails

---
 imports/ui/components/partyDetails/partyDetails.less | 9 +++++++++
 1 file changed, 9 insertions(+)
 create mode 100644 imports/ui/components/partyDetails/partyDetails.less

diff --git a/imports/ui/components/partyDetails/partyDetails.less b/imports/ui/components/partyDetails/partyDetails.less
new file mode 100644
index 0000000..bfea863
--- /dev/null
+++ b/imports/ui/components/partyDetails/partyDetails.less
@@ -0,0 +1,9 @@
+party-details {
+  display: block;
+
+  form {
+    margin: 25px 0;
+  }
+}
+
+@import "../partyUninvited/partyUninvited.less";
-- 
2.7.4


From 0adfb10838ea02b6e6cddd4364f7bbfa14e19dee Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:21:01 +0200
Subject: [PATCH 241/412] Step 17.34: Styles for PartyMap

---
 imports/ui/components/partyMap/partyMap.less | 10 ++++++++++
 1 file changed, 10 insertions(+)
 create mode 100644 imports/ui/components/partyMap/partyMap.less

diff --git a/imports/ui/components/partyMap/partyMap.less b/imports/ui/components/partyMap/partyMap.less
new file mode 100644
index 0000000..3b4bed1
--- /dev/null
+++ b/imports/ui/components/partyMap/partyMap.less
@@ -0,0 +1,10 @@
+party-map {
+  display: block;
+  width: 100%;
+  margin: 25px 0;
+
+  .angular-google-map-container {
+    width: 100%;
+    height: 400px;
+  }
+}
-- 
2.7.4


From 7126e722a2e07428039016a013e243190ddd54db Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:21:22 +0200
Subject: [PATCH 242/412] Step 17.35: Remove old css

---
 imports/ui/components/partyMap/partyMap.js | 1 -
 1 file changed, 1 deletion(-)

diff --git a/imports/ui/components/partyMap/partyMap.js b/imports/ui/components/partyMap/partyMap.js
index 9db5069..c062d30 100644
--- a/imports/ui/components/partyMap/partyMap.js
+++ b/imports/ui/components/partyMap/partyMap.js
@@ -3,7 +3,6 @@ import angularMeteor from 'angular-meteor';
 import 'angular-simple-logger';
 import 'angular-google-maps';
 
-import './partyMap.css';
 import template from './partyMap.html';
 
 class PartyMap {
-- 
2.7.4


From cf2d6aa2b07c411bff2dd53fe8ffd83bf4cf0484 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:21:43 +0200
Subject: [PATCH 243/412] Step 17.36: Delete old file

---
 imports/ui/components/partyMap/partyMap.css | 4 ----
 1 file changed, 4 deletions(-)
 delete mode 100644 imports/ui/components/partyMap/partyMap.css

diff --git a/imports/ui/components/partyMap/partyMap.css b/imports/ui/components/partyMap/partyMap.css
deleted file mode 100644
index f4b49f5..0000000
--- a/imports/ui/components/partyMap/partyMap.css
+++ /dev/null
@@ -1,4 +0,0 @@
-.angular-google-map-container {
-  height: 400px;
-  width: 400px;
-}
-- 
2.7.4


From 1b2ee735bef625f17c424eaee5c04a9648f54edd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:22:35 +0200
Subject: [PATCH 244/412] Step 17.37: Import PartyMap

---
 imports/ui/components/partyDetails/partyDetails.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.less b/imports/ui/components/partyDetails/partyDetails.less
index bfea863..a42c467 100644
--- a/imports/ui/components/partyDetails/partyDetails.less
+++ b/imports/ui/components/partyDetails/partyDetails.less
@@ -7,3 +7,4 @@ party-details {
 }
 
 @import "../partyUninvited/partyUninvited.less";
+@import "../partyMap/partyMap.less";
-- 
2.7.4


From 224340560c3caae70f9cfc0dd30f741a789ebd2d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:23:50 +0200
Subject: [PATCH 245/412] Step 17.38: Import missing files

---
 imports/ui/components/socially/socially.less | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/imports/ui/components/socially/socially.less b/imports/ui/components/socially/socially.less
index eec0480..3eabc12 100644
--- a/imports/ui/components/socially/socially.less
+++ b/imports/ui/components/socially/socially.less
@@ -1,3 +1,8 @@
 socially {
   display: block;
 }
+
+
+@import "../navigation/navigation.less";
+@import "../partiesList/partiesList.less";
+@import "../partyDetails/partyDetails.less";
-- 
2.7.4


From aa4527424dffe24fbf0107412cdad448be936121 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 01:32:24 +0200
Subject: [PATCH 246/412] Step 17.39: Add checking methods

---
 imports/ui/components/partyRsvp/partyRsvp.js | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/imports/ui/components/partyRsvp/partyRsvp.js b/imports/ui/components/partyRsvp/partyRsvp.js
index 17aeb99..522cc38 100644
--- a/imports/ui/components/partyRsvp/partyRsvp.js
+++ b/imports/ui/components/partyRsvp/partyRsvp.js
@@ -1,5 +1,6 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
+import _ from 'underscore';
 
 import { Meteor } from 'meteor/meteor';
 
@@ -9,14 +10,23 @@ class PartyRsvp {
   yes() {
     this.answer('yes');
   }
+  isYes() {
+    return this.isAnswer('yes');
+  }
 
   maybe() {
     this.answer('maybe');
   }
+  isMaybe() {
+    return this.isAnswer('maybe');
+  }
 
   no() {
     this.answer('no');
   }
+  isNo() {
+    return this.isAnswer('no');
+  }
 
   answer(answer) {
     Meteor.call('rsvp', this.party._id, answer, (error) => {
@@ -27,6 +37,14 @@ class PartyRsvp {
       }
     });
   }
+  isAnswer(answer) {
+    if(this.party) {
+      return !!_.findWhere(this.party.rsvps, {
+        user: Meteor.userId(),
+        rsvp: answer
+      });
+    }
+  }
 }
 
 const name = 'partyRsvp';
-- 
2.7.4


From ef6cf97e65767796edbc3aad6a431b17323b8272 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:26:23 +0200
Subject: [PATCH 247/412] Step 17.40: Remove unused partyRsvpUsers

---
 imports/ui/components/partyRsvpUsers/partyRsvpUsers.html | 5 -----
 1 file changed, 5 deletions(-)
 delete mode 100644 imports/ui/components/partyRsvpUsers/partyRsvpUsers.html

diff --git a/imports/ui/components/partyRsvpUsers/partyRsvpUsers.html b/imports/ui/components/partyRsvpUsers/partyRsvpUsers.html
deleted file mode 100644
index 445d426..0000000
--- a/imports/ui/components/partyRsvpUsers/partyRsvpUsers.html
+++ /dev/null
@@ -1,5 +0,0 @@
-<div ng-repeat="rsvp in partyRsvpUsers.rsvps | filter:{ rsvp: partyRsvpUsers.type }">
-  {{ partyRsvpUsers.getUserById(rsvp.user) | displayNameFilter }}
-  -
-  {{ partyRsvpUsers.type }}
-</div>
-- 
2.7.4


From ddbddbe0e122597264fa08c0407c7f36a102b8de Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:26:40 +0200
Subject: [PATCH 248/412] Step 17.41: Remove unused partyUnanswered

---
 .../partyUnanswered/partyUnanswered.html           |  5 ---
 .../components/partyUnanswered/partyUnanswered.js  | 39 ----------------------
 2 files changed, 44 deletions(-)
 delete mode 100644 imports/ui/components/partyUnanswered/partyUnanswered.html
 delete mode 100644 imports/ui/components/partyUnanswered/partyUnanswered.js

diff --git a/imports/ui/components/partyUnanswered/partyUnanswered.html b/imports/ui/components/partyUnanswered/partyUnanswered.html
deleted file mode 100644
index ecc1b45..0000000
--- a/imports/ui/components/partyUnanswered/partyUnanswered.html
+++ /dev/null
@@ -1,5 +0,0 @@
-<ul>
-  <li ng-repeat="invitedUser in partyUnanswered.getUnanswered()">
-    {{ partyUnanswered.getUserById(invitedUser) | displayNameFilter }}
-  </li>
-</ul>
diff --git a/imports/ui/components/partyUnanswered/partyUnanswered.js b/imports/ui/components/partyUnanswered/partyUnanswered.js
deleted file mode 100644
index 39f2115..0000000
--- a/imports/ui/components/partyUnanswered/partyUnanswered.js
+++ /dev/null
@@ -1,39 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import _ from 'underscore';
-
-import { Meteor } from 'meteor/meteor';
-
-import template from './partyUnanswered.html';
-import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
-
-class PartyUnanswered {
-  getUnanswered() {
-    if (!this.party || !this.party.invited) {
-      return;
-    }
-
-    return this.party.invited.filter((user) => {
-      return !_.findWhere(this.party.rsvps, { user });
-    });
-  }
-
-  getUserById(userId) {
-    return Meteor.users.findOne(userId)
-  }
-}
-
-const name = 'partyUnanswered';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  DisplayNameFilter
-]).component(name, {
-  template,
-  controllerAs: name,
-  bindings: {
-    party: '<'
-  },
-  controller: PartyUnanswered
-});
-- 
2.7.4


From f14b78a25ca90b0cbf6c042faf665fd7c73de3ab Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:27:20 +0200
Subject: [PATCH 249/412] Step 17.42: Remove PartyUnanswered

---
 imports/ui/components/partiesList/partiesList.js | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index a8e8e0f..ec99584 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -14,7 +14,6 @@ import { name as PartyRemove } from '../partyRemove/partyRemove';
 import { name as PartyCreator } from '../partyCreator/partyCreator';
 import { name as PartyRsvp } from '../partyRsvp/partyRsvp';
 import { name as PartyRsvpsList } from '../partyRsvpsList/partyRsvpsList';
-import { name as PartyUnanswered } from '../partyUnanswered/partyUnanswered';
 
 class PartiesList {
   constructor($scope, $reactive) {
@@ -82,8 +81,7 @@ export default angular.module(name, [
   PartyRemove,
   PartyCreator,
   PartyRsvp,
-  PartyRsvpsList,
-  PartyUnanswered
+  PartyRsvpsList
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From dc07816a305ae773704770fc5234455c849ec9c6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:27:38 +0200
Subject: [PATCH 250/412] Step 17.43: Remove PartyRsvpUsers

---
 imports/ui/components/partyRsvpsList/partyRsvpsList.js | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/imports/ui/components/partyRsvpsList/partyRsvpsList.js b/imports/ui/components/partyRsvpsList/partyRsvpsList.js
index c1ebd92..755c9f9 100644
--- a/imports/ui/components/partyRsvpsList/partyRsvpsList.js
+++ b/imports/ui/components/partyRsvpsList/partyRsvpsList.js
@@ -2,7 +2,6 @@ import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 
 import template from './partyRsvpsList.html';
-import { name as PartyRsvpUsers } from '../partyRsvpUsers/partyRsvpUsers';
 
 class PartyRsvpsList { }
 
@@ -10,8 +9,7 @@ const name = 'partyRsvpsList';
 
 // create a module
 export default angular.module(name, [
-  angularMeteor,
-  PartyRsvpUsers
+  angularMeteor
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 2f277c96421c4541a441bf77da6f1df3da6758bd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:37:40 +0200
Subject: [PATCH 251/412] Step 18.1: Uninstall `bootstrap`

---
 package.json | 1 -
 1 file changed, 1 deletion(-)

diff --git a/package.json b/package.json
index 158bf82..af5599d 100644
--- a/package.json
+++ b/package.json
@@ -12,7 +12,6 @@
     "angular-ui-router": "^0.2.18",
     "angular-simple-logger": "^0.1.7",
     "angular-utils-pagination": "^0.11.1",
-    "bootstrap": "^4.0.0-alpha.2",
     "meteor-node-stubs": "~0.2.0",
     "underscore": "^1.8.3"
   },
-- 
2.7.4


From 50e66e23ee0f6fc5bef5b57318426260f258cf9a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:38:13 +0200
Subject: [PATCH 252/412] Step 18.2: Install `angular-material`

---
 package.json | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/package.json b/package.json
index af5599d..8971ed8 100644
--- a/package.json
+++ b/package.json
@@ -7,7 +7,11 @@
   },
   "dependencies": {
     "angular": "^1.5.3",
+    "angular-animate": "^1.5.3",
+    "angular-aria": "^1.5.3",
     "angular-google-maps": "^2.3.2",
+    "angular-material": "^1.0.7",
+    "angular-messages": "^1.5.3",
     "angular-meteor": "^1.3.9",
     "angular-ui-router": "^0.2.18",
     "angular-simple-logger": "^0.1.7",
-- 
2.7.4


From b74a18234973f4443c261d306ce20f4a35d45ce5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:38:56 +0200
Subject: [PATCH 253/412] Step 18.3: Add css

---
 client/index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/index.html b/client/index.html
index d4505ca..4a914a1 100644
--- a/client/index.html
+++ b/client/index.html
@@ -4,7 +4,7 @@
   <meta name="viewport" content="width=device-width, initial-scale=1">
   <base href="/">
   <title>Socially</title>
-  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
+  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/angular-material/1.0.7/angular-material.min.css">
 </head>
 <body>
   <socially></socially>
-- 
2.7.4


From 85377ca9e7bc3a3b69645b412b9f05bcb366200b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:31:01 +0200
Subject: [PATCH 254/412] Step 18.4: Remove bootstrap from main.js

---
 client/main.js | 1 -
 1 file changed, 1 deletion(-)

diff --git a/client/main.js b/client/main.js
index 52cb827..06731e1 100644
--- a/client/main.js
+++ b/client/main.js
@@ -1,5 +1,4 @@
 import angular from 'angular';
-import 'bootstrap/dist/css/bootstrap.css';
 
 import { Meteor } from 'meteor/meteor';
 
-- 
2.7.4


From 56b201c97a25c224c068c876dd6fb561237f447a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:39:53 +0200
Subject: [PATCH 255/412] Step 18.5: Add ngMaterial to Socially

---
 imports/ui/components/socially/socially.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index dec6060..e692001 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -1,5 +1,6 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
+import ngMaterial from 'angular-material';
 import uiRouter from 'angular-ui-router';
 
 import template from './socially.html';
@@ -14,6 +15,7 @@ const name = 'socially';
 // create a module
 export default angular.module(name, [
   angularMeteor,
+  ngMaterial,
   uiRouter,
   PartiesList,
   PartyDetails,
-- 
2.7.4


From 92e2570927693ee349373c0da73fc99494e81b5e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:41:34 +0200
Subject: [PATCH 256/412] Step 18.6: Clean up Socially template

---
 imports/ui/components/socially/socially.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/socially/socially.html b/imports/ui/components/socially/socially.html
index 2e91050..7fdb2de 100644
--- a/imports/ui/components/socially/socially.html
+++ b/imports/ui/components/socially/socially.html
@@ -1,3 +1,3 @@
-<navigation class="navbar navbar-static-top navbar-dark bg-inverse"></navigation>
+<navigation></navigation>
 
-<div ui-view="" class="container-fluid"></div>
+<div ui-view=""></div>
-- 
2.7.4


From e0e7a3cf54963caa75cfdf655badb14d6f1491e9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:43:06 +0200
Subject: [PATCH 257/412] Step 18.7: Refactor Navigation

---
 imports/ui/components/navigation/navigation.html | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/imports/ui/components/navigation/navigation.html b/imports/ui/components/navigation/navigation.html
index 2bcae64..0b1d8a6 100644
--- a/imports/ui/components/navigation/navigation.html
+++ b/imports/ui/components/navigation/navigation.html
@@ -1,6 +1,10 @@
-<div class="fluid-container">
-  <div class="navbar-header">
-    <a href="/parties" class="navbar-brand">Socially</a>
-    <login-buttons class="navbar-brand"></login-buttons>
+<md-toolbar>
+  <div class="md-toolbar-tools">
+    <h2>
+      <span ui-sref="parties">
+        Socially
+      </span>
+    </h2>
+    <login-buttons></login-buttons>
   </div>
-</div>
+</md-toolbar>
-- 
2.7.4


From b49e1b91a67315614b6605bc4830b395dd925528 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:43:40 +0200
Subject: [PATCH 258/412] Step 18.8: Add space before loginButtons

---
 imports/ui/components/navigation/navigation.less | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/navigation/navigation.less b/imports/ui/components/navigation/navigation.less
index 4035b7b..87b8777 100644
--- a/imports/ui/components/navigation/navigation.less
+++ b/imports/ui/components/navigation/navigation.less
@@ -1,3 +1,5 @@
 navigation {
-  display: block;
+  login-buttons {
+    margin-left: 15px;
+  }
 }
-- 
2.7.4


From 60657f38642f3a9980a67d64f027b6539e5dc9a9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:44:33 +0200
Subject: [PATCH 259/412] Step 18.9: Refactor PartiesList

---
 imports/ui/components/partiesList/partiesList.html | 99 ++++++++++------------
 1 file changed, 44 insertions(+), 55 deletions(-)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 29c4c69..b6772eb 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -1,65 +1,54 @@
-<div class="container-fluid">
-  <div class="row">
-    <div class="col-md-12">
-      <party-add ng-show="partiesList.isLoggedIn"></party-add>
+<div layout="column" layout-padding>
+  <party-add ng-show="partiesList.isLoggedIn"></party-add>
+  <div ng-hide="partiesList.isLoggedIn">
+    <i>Log in to create a party!</i>
+  </div>
 
-      <div class="alert alert-warning" role="alert" ng-hide="partiesList.isLoggedIn">
-        <strong>Warning!</strong>
-        Log in to create a party!
-      </div>
-    </div>
+  <div flex>
+    <h2 class="md-display-1">List of the parties:</h2>
   </div>
-  <div class="row">
-    <div class="col-md-12">
-      <h2>List of parties:</h2>
-      <form class="form-inline">
-        <div class="form-group">
-          <input type="search" ng-model="partiesList.searchText" placeholder="Search" class="form-control"/>
-        </div>
-        <parties-sort class="form-group" on-change="partiesList.sortChanged(sort)" property="name" order="1"></parties-sort>
-      </form>
-    </div>
+
+  <div flex layout="row" layout-padding>
+    <md-input-container>
+      <label>Search</label>
+      <input ng-model="partiesList.searchText">
+    </md-input-container>
+
+    <parties-sort on-change="partiesList.sortChanged(sort)" property="name" order="1"></parties-sort>
   </div>
-  <div class="row">
-    <div class="col-md-6">
-      <ul class="parties">
-        <li dir-paginate="party in partiesList.parties | itemsPerPage: partiesList.perPage" total-items="partiesList.partiesCount">
-          <div class="row">
-            <div class="col-sm-8">
-              <h3 class="party-name">
-                <a ui-sref="partyDetails({ partyId: party._id })">{{party.name}}</a>
-              </h3>
-              <p class="party-description">
-                {{party.description}}
-              </p>
-            </div>
-            <div class="col-sm-4">
-              <party-remove party="party" ng-show="partiesList.isOwner(party)"></party-remove>
-            </div>
-          </div>
-          <div class="row">
-            <div class="col-md-12">
-              <party-rsvp party="party" ng-show="partiesList.isLoggedIn"></party-rsvp>
-              <div class="alert alert-warning" role="alert" ng-hide="partiesList.isLoggedIn">
-                <strong>Warning!</strong>
-                <i>Sign in to RSVP for this party.</i>
-              </div>
-            </div>
-          </div>
-          <div class="row">
-            <div class="col-md-4">
-              <party-creator party="party"></party-creator>
-            </div>
-            <div class="col-md-8">
-              <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
-            </div>
+
+  <div layout="column" layout-gt-sm="row">
+    <div flex="50">
+      <md-card dir-paginate="party in partiesList.parties | itemsPerPage: partiesList.perPage" total-items="partiesList.partiesCount">
+        <md-card-title>
+          <md-card-title-text>
+            <span class="md-headline" ui-sref="partyDetails({ partyId: party._id })">
+              {{party.name}}
+              <party-remove party="party"></party-remove>
+            </span>
+            <span class="md-subhead">{{party.description}}</span>
+          </md-card-title-text>
+        </md-card-title>
+        <md-card-content>
+          <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
+
+          <party-unanswered party="party" ng-if="!party.public"></party-unanswered>
+          <div ng-if="party.public">
+            Everyone is invited
           </div>
-        </li>
-      </ul>
 
+          <party-creator party="party"></party-creator>
+        </md-card-content>
+        <md-card-actions>
+          <party-rsvp party="party" ng-show="partiesList.isLoggedIn"></party-rsvp>
+          <div ng-hide="partiesList.isLoggedIn">
+            <i>Sign in to RSVP for this party.</i>
+          </div>
+        </md-card-actions>
+      </md-card>
       <dir-pagination-controls on-page-change="partiesList.pageChanged(newPageNumber)"></dir-pagination-controls>
     </div>
-    <div class="col-md-6">
+    <div flex="50">
       <parties-map parties="partiesList.parties"></parties-map>
     </div>
   </div>
-- 
2.7.4


From deab2c1cf93945a10a1a0ad6d367ae6dd99c8cc7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:45:55 +0200
Subject: [PATCH 260/412] Step 18.10: Leave only one definition

---
 imports/ui/components/partiesList/partiesList.less | 35 ++--------------------
 1 file changed, 2 insertions(+), 33 deletions(-)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index a1eac5c..ba0839b 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -1,36 +1,5 @@
 parties-list {
-  display: block;
-  padding: 25px 0;
-
-  ul.parties {
-    padding-left: 0;
-    list-style-type: none;
-
-    > li {
-      padding: 15px;
-      background-color: #fff;
-      margin: 15px 0;
-      border: 3px solid #eaeaea;
-
-     .party-name {
-       margin-top: 0px;
-       margin-bottom: 20px;
-       a {
-         text-decoration: none !important;
-         font-weight: 400;
-       }
-     }
-     .party-description {
-       font-weight: 300;
-       padding-left: 18px;
-       font-size: 14px;
-     }
-    }
+  [ui-sref] {
+    cursor: pointer;
   }
 }
-
-@import "../partyAdd/partyAdd.less";
-@import "../partiesMap/partiesMap.less";
-@import "../partyCreator/partyCreator.less";
-@import "../partyRsvp/partyRsvp.less";
-@import "../partyRsvpsList/partyRsvpsList.less";
-- 
2.7.4


From 7d1d9c9168f89c7d3647f47cd1f2efe018f377a1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:46:45 +0200
Subject: [PATCH 261/412] Step 18.11: Refactor PartiesMap

---
 imports/ui/components/partiesMap/partiesMap.html | 3 ---
 1 file changed, 3 deletions(-)

diff --git a/imports/ui/components/partiesMap/partiesMap.html b/imports/ui/components/partiesMap/partiesMap.html
index 870b2f7..a488738 100644
--- a/imports/ui/components/partiesMap/partiesMap.html
+++ b/imports/ui/components/partiesMap/partiesMap.html
@@ -1,6 +1,3 @@
-<h4>
-  See all the parties:
-</h4>
 <div class="angular-google-map-container">
   <ui-gmap-google-map center="partiesMap.map.center" zoom="partiesMap.map.zoom">
     <ui-gmap-markers models="partiesMap.parties" coords="'location'" fit="true" idkey="'_id'" doRebuildAll="true"></ui-gmap-markers>
-- 
2.7.4


From e3877def4fa5a8d10d8025f53ba81e19ae8bd179 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:47:31 +0200
Subject: [PATCH 262/412] Step 18.12: Styles for PartiesMap

---
 imports/ui/components/partiesMap/partiesMap.less | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesMap/partiesMap.less b/imports/ui/components/partiesMap/partiesMap.less
index 020e970..b69b834 100644
--- a/imports/ui/components/partiesMap/partiesMap.less
+++ b/imports/ui/components/partiesMap/partiesMap.less
@@ -1,6 +1,6 @@
 parties-map {
   display: block;
-  margin: 15px 5px;
+  padding: 10px;
 
   .angular-google-map-container {
     width: 100%;
-- 
2.7.4


From 50a13eb0b5626a4417d5f1f60d4e609f95e95fe8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:13:36 +0200
Subject: [PATCH 263/412] Step 18.13: Import in PartiesList

---
 imports/ui/components/partiesList/partiesList.less | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index ba0839b..d3f7da4 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -3,3 +3,5 @@ parties-list {
     cursor: pointer;
   }
 }
+
+@import "../partiesMap/partiesMap.less";
-- 
2.7.4


From a090f5fa36be72da87ef8785825ef7fe702aecb0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:48:05 +0200
Subject: [PATCH 264/412] Step 18.14: Refactor PartiesSort

---
 imports/ui/components/partiesSort/partiesSort.html | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/imports/ui/components/partiesSort/partiesSort.html b/imports/ui/components/partiesSort/partiesSort.html
index b2a52b3..0b7a94e 100644
--- a/imports/ui/components/partiesSort/partiesSort.html
+++ b/imports/ui/components/partiesSort/partiesSort.html
@@ -1,4 +1,10 @@
-<select ng-model="partiesSort.order" ng-change="partiesSort.changed()" class="form-control">
-  <option value="1">Ascending</option>
-  <option value="-1">Descending</option>
-</select>
+<md-input-container>
+  <md-select ng-model="partiesSort.order" ng-change="partiesSort.changed()">
+    <md-option value="1">
+      Ascending
+    </md-option>
+    <md-option value="-1">
+      Descending
+    </md-option>
+  </md-select>
+</md-input-container>
-- 
2.7.4


From bbb7e4316c3271388d4997203086919a1d04d2b4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:48:41 +0200
Subject: [PATCH 265/412] Step 18.15: Refactor PartyAdd

---
 imports/ui/components/partyAdd/partyAdd.html | 26 ++++++++++++++------------
 1 file changed, 14 insertions(+), 12 deletions(-)

diff --git a/imports/ui/components/partyAdd/partyAdd.html b/imports/ui/components/partyAdd/partyAdd.html
index 7c4d284..6e504f0 100644
--- a/imports/ui/components/partyAdd/partyAdd.html
+++ b/imports/ui/components/partyAdd/partyAdd.html
@@ -1,20 +1,22 @@
-<form>
-  <div class="form-group">
+<div layout="column" layout-padding>
+  <md-input-container>
     <label>
       Party Name:
     </label>
-    <input type="text" ng-model="partyAdd.party.name" class="form-control"/>
-  </div>
-  <div class="form-group">
+    <input type="text" ng-model="partyAdd.party.name"/>
+  </md-input-container>
+  <md-input-container>
     <label>
       Description:
     </label>
-    <input type="text" ng-model="partyAdd.party.description" class="form-control"/>
+    <input type="text" ng-model="partyAdd.party.description"/>
+  </md-input-container>
+  <div flex>
+    <md-checkbox ng-model="partyAdd.party.public" aria-label="Public Party?">
+      Public Party?
+    </md-checkbox>
   </div>
-  <div class="checkbox">
-    <label>
-      <input type="checkbox" ng-model="partyAdd.party.public"/> Public Party?
-    </label>
+  <div flex>
+    <md-button ng-click="partyAdd.submit()" class="md-raised">Add Party!</md-button>
   </div>
-  <button ng-click="partyAdd.submit()" class="btn btn-success">Add Party!</button>
-</form>
+</div>
-- 
2.7.4


From b8841342411c0bdcd4d0be84615ccafa6a050fcc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:49:18 +0200
Subject: [PATCH 266/412] Step 18.16: Remove styles for PartyAdd

---
 imports/ui/components/partyAdd/partyAdd.less | 10 ----------
 1 file changed, 10 deletions(-)
 delete mode 100644 imports/ui/components/partyAdd/partyAdd.less

diff --git a/imports/ui/components/partyAdd/partyAdd.less b/imports/ui/components/partyAdd/partyAdd.less
deleted file mode 100644
index 90b24c1..0000000
--- a/imports/ui/components/partyAdd/partyAdd.less
+++ /dev/null
@@ -1,10 +0,0 @@
-party-add {
-  display: block;
-}
-
-party-add > form {
-  padding: 15px;
-  margin-bottom: 25px;
-  background-color: #fff;
-  border: 3px solid #EAEAEC;
-}
-- 
2.7.4


From fab460b38815d3a07c749ff7ecec815f377ee376 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:50:00 +0200
Subject: [PATCH 267/412] Step 18.17: Refactor PartyCreator

---
 imports/ui/components/partyCreator/partyCreator.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyCreator/partyCreator.html b/imports/ui/components/partyCreator/partyCreator.html
index 077739d..de986fb 100644
--- a/imports/ui/components/partyCreator/partyCreator.html
+++ b/imports/ui/components/partyCreator/partyCreator.html
@@ -1,5 +1,5 @@
 <p>
   <small>
-    <i class="fa fa-user fa-lg"></i> {{ partyCreator.creator | displayNameFilter }}
+    Posted by {{ partyCreator.creator | displayNameFilter }}
   </small>
 </p>
-- 
2.7.4


From 7c93c1c855f4eddbc54b8070f5c83f6bef42fdfa Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 02:50:35 +0200
Subject: [PATCH 268/412] Step 18.18: Remove partyCreator.less

---
 imports/ui/components/partyCreator/partyCreator.less | 6 ------
 1 file changed, 6 deletions(-)
 delete mode 100644 imports/ui/components/partyCreator/partyCreator.less

diff --git a/imports/ui/components/partyCreator/partyCreator.less b/imports/ui/components/partyCreator/partyCreator.less
deleted file mode 100644
index 4679f1f..0000000
--- a/imports/ui/components/partyCreator/partyCreator.less
+++ /dev/null
@@ -1,6 +0,0 @@
-party-creator {
-  i.fa {
-    margin-left: 5px;
-    margin-right: 10px;
-  }
-}
-- 
2.7.4


From f438e888e1f8030b7a080025c5485b23ad39f969 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:08:43 +0200
Subject: [PATCH 269/412] Step 18.19: Add `material-design-icons`

---
 .meteor/packages |  2 ++
 .meteor/versions | 18 +++++++++++-------
 2 files changed, 13 insertions(+), 7 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 4e35175..1116bb7 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -28,3 +28,5 @@ tmeasday:publish-counts
 check
 email
 less
+planettraining:material-design-icons
+pagebakers:ionicons
diff --git a/.meteor/versions b/.meteor/versions
index d6f5bc3..bef3e68 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -3,8 +3,8 @@ accounts-facebook@1.0.10
 accounts-oauth@1.1.13
 accounts-password@1.3.0
 accounts-twitter@1.1.11
-accounts-ui@1.1.8
-accounts-ui-unstyled@1.1.11
+accounts-ui@1.1.9
+accounts-ui-unstyled@1.1.12
 allow-deny@1.0.5
 amplify@1.0.0
 autoupdate@1.2.11
@@ -13,11 +13,11 @@ babel-runtime@0.1.11_1
 base64@1.0.9
 binary-heap@1.0.9
 blaze@2.1.9
-blaze-html-templates@1.0.4
+blaze-html-templates@1.0.5
 blaze-tools@1.0.10
 boilerplate-generator@1.0.10
-caching-compiler@1.0.6
-caching-html-compiler@1.0.6
+caching-compiler@1.1.7_1
+caching-html-compiler@1.0.7
 callback-hook@1.0.9
 check@1.2.3
 ddp@1.2.5
@@ -43,7 +43,7 @@ http@1.2.9_1
 id-map@1.0.8
 jquery@1.11.9
 launch-screen@1.0.12
-less@2.5.7
+less@2.7.5_1
 livedata@1.0.18
 localstorage@1.0.11
 logging@1.1.15_1
@@ -65,7 +65,9 @@ oauth1@1.1.10
 oauth2@1.1.10
 observe-sequence@1.0.13
 ordered-dict@1.0.8
+pagebakers:ionicons@2.0.1_1
 pbastowski:angular-babel@1.3.6
+planettraining:material-design-icons@2.2.3
 promise@0.8.7
 random@1.0.10
 rate-limit@1.0.5
@@ -83,7 +85,9 @@ spacebars-compiler@1.0.13
 srp@1.0.9
 standard-minifier-css@1.2.1
 standard-minifier-js@1.2.0_1
-templating@1.2.14_1
+templating@1.2.15
+templating-compiler@1.2.15
+templating-runtime@1.2.15
 templating-tools@1.0.5
 tmeasday:check-npm-versions@0.1.1
 tmeasday:publish-counts@0.8.0
-- 
2.7.4


From 7f2a516215e4813896b18e7fc6c529d7dc679c9c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:10:01 +0200
Subject: [PATCH 270/412] Step 18.20: Set icons

---
 imports/ui/components/socially/socially.js | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index e692001..cad243b 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -29,12 +29,30 @@ export default angular.module(name, [
   .config(config)
   .run(run);
 
-function config($locationProvider, $urlRouterProvider) {
+function config($locationProvider, $urlRouterProvider, $mdIconProvider) {
   'ngInject';
 
   $locationProvider.html5Mode(true);
 
   $urlRouterProvider.otherwise('/parties');
+
+  const iconPath =  '/packages/planettraining_material-design-icons/bower_components/material-design-icons/sprites/svg-sprite/';
+
+  $mdIconProvider
+    .iconSet('social',
+      iconPath + 'svg-sprite-social.svg')
+    .iconSet('action',
+      iconPath + 'svg-sprite-action.svg')
+    .iconSet('communication',
+      iconPath + 'svg-sprite-communication.svg')
+    .iconSet('content',
+      iconPath + 'svg-sprite-content.svg')
+    .iconSet('toggle',
+      iconPath + 'svg-sprite-toggle.svg')
+    .iconSet('navigation',
+      iconPath + 'svg-sprite-navigation.svg')
+    .iconSet('image',
+      iconPath + 'svg-sprite-image.svg');
 }
 
 function run($rootScope, $state) {
-- 
2.7.4


From 3543cc8c0ab86d6d6937e8b892eafbce2b0b0a9a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:10:41 +0200
Subject: [PATCH 271/412] Step 18.21: Refactor PartyRemove

---
 imports/ui/components/partyRemove/partyRemove.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyRemove/partyRemove.html b/imports/ui/components/partyRemove/partyRemove.html
index ebe46ea..fc1206c 100644
--- a/imports/ui/components/partyRemove/partyRemove.html
+++ b/imports/ui/components/partyRemove/partyRemove.html
@@ -1 +1 @@
-<button type="button" class="close" aria-label="Close" ng-click="partyRemove.remove()"><span aria-hidden="true">&times;</span></button>
+<md-icon md-svg-icon="content:ic_clear_24px" ng-click="partyRemove.remove()"></md-icon>
-- 
2.7.4


From c36a314fc5b0c2af1b46969bd392f00942fcda6a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:11:20 +0200
Subject: [PATCH 272/412] Step 18.22: Styles for PartyRemove

---
 imports/ui/components/partyRemove/partyRemove.less | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/ui/components/partyRemove/partyRemove.less

diff --git a/imports/ui/components/partyRemove/partyRemove.less b/imports/ui/components/partyRemove/partyRemove.less
new file mode 100644
index 0000000..d7ad1f1
--- /dev/null
+++ b/imports/ui/components/partyRemove/partyRemove.less
@@ -0,0 +1,3 @@
+party-remove {
+  float: right;
+}
-- 
2.7.4


From 7f2cacd5c060012714ca5284a3fe78f212b92f92 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:12:08 +0200
Subject: [PATCH 273/412] Step 18.23: Import to PartiesList

---
 imports/ui/components/partiesList/partiesList.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index d3f7da4..26a3d6b 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -5,3 +5,4 @@ parties-list {
 }
 
 @import "../partiesMap/partiesMap.less";
+@import "../partyRemove/partyRemove.less";
-- 
2.7.4


From 6135644ceb53fa69d451a1eb744ac601f9a48da8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:17:34 +0200
Subject: [PATCH 274/412] Step 18.24: Refactor PartyRsvp

---
 imports/ui/components/partyRsvp/partyRsvp.html | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/imports/ui/components/partyRsvp/partyRsvp.html b/imports/ui/components/partyRsvp/partyRsvp.html
index e4c078c..ec6302b 100644
--- a/imports/ui/components/partyRsvp/partyRsvp.html
+++ b/imports/ui/components/partyRsvp/partyRsvp.html
@@ -1,3 +1,5 @@
-<input type="button" value="I'm going!" ng-click="partyRsvp.yes()" class="btn btn-default" ng-class="{'btn-primary' : partyRsvp.isYes()}"/>
-<input type="button" value="Maybe" ng-click="partyRsvp.maybe()" class="btn btn-default" ng-class="{'btn-primary' : partyRsvp.isMaybe()}"/>
-<input type="button" value="No" ng-click="partyRsvp.no()" class="btn btn-default" ng-class="{'btn-primary' : partyRsvp.isNo()}"/>
+<div layout="row" layout-align="end center">
+  <md-button ng-click="partyRsvp.yes()" ng-class="{'md-primary' : partyRsvp.isYes()}">I'm going!</md-button>
+  <md-button ng-click="partyRsvp.maybe()" ng-class="{'md-primary' : partyRsvp.isMaybe()}">Maybe</md-button>
+  <md-button ng-click="partyRsvp.no()" ng-class="{'md-primary' : partyRsvp.isNo()}">No</md-button>
+</div>
-- 
2.7.4


From 4f66ab24925ecd2e3dcd50620013727a9e9d38ef Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:18:08 +0200
Subject: [PATCH 275/412] Step 18.25: Remove styles

---
 imports/ui/components/partyRsvp/partyRsvp.less | 4 ----
 1 file changed, 4 deletions(-)
 delete mode 100644 imports/ui/components/partyRsvp/partyRsvp.less

diff --git a/imports/ui/components/partyRsvp/partyRsvp.less b/imports/ui/components/partyRsvp/partyRsvp.less
deleted file mode 100644
index be52d51..0000000
--- a/imports/ui/components/partyRsvp/partyRsvp.less
+++ /dev/null
@@ -1,4 +0,0 @@
-party-rsvp {
-  display: block;
-  margin: 15px 0;
-}
-- 
2.7.4


From 712c7934b8a1bb27669e4ec591988ab12db5a896 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:19:01 +0200
Subject: [PATCH 276/412] Step 18.26: Refactor PartyUninvited

---
 .../components/partyUninvited/partyUninvited.html  | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index e9f9e1c..84b3eaf 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -1,10 +1,12 @@
-<h4>Users to invite:</h4>
-<ul>
-  <li ng-repeat="user in partyUninvited.users | uninvitedFilter:partyUninvited.party">
-    <button ng-click="partyUninvited.invite(user)" class="btn btn-primary-outline">Invite</button>
-    {{ user | displayNameFilter }}
-  </li>
-</ul>
-<div class="alert alert-success" role="alert" ng-if="(partyUninvited.users | uninvitedFilter:partyUninvited.party).length <= 0">
-  Everyone are already invited.
-</div>
+<h4 class="md-headline">
+  Users to invite:
+</h4>
+
+<md-list>
+  <md-list-item ng-repeat="user in partyUninvited.users | uninvitedFilter:partyUninvited.party" ng-click="partyUninvited.invite(user)">
+    <p>{{ user | displayNameFilter }}</p>
+  </md-list-item>
+  <md-list-item ng-if="(partyUninvited.users | uninvitedFilter:partyUninvited.party).length <= 0">
+    Everyone are already invited.
+  </md-list-item>
+</md-list>
-- 
2.7.4


From e194707e3fc0c5978db7f480e44c33da84ea95f0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:19:24 +0200
Subject: [PATCH 277/412] Step 18.27: Remove unused styles

---
 imports/ui/components/partyUninvited/partyUninvited.less | 8 --------
 1 file changed, 8 deletions(-)
 delete mode 100644 imports/ui/components/partyUninvited/partyUninvited.less

diff --git a/imports/ui/components/partyUninvited/partyUninvited.less b/imports/ui/components/partyUninvited/partyUninvited.less
deleted file mode 100644
index 52b27fe..0000000
--- a/imports/ui/components/partyUninvited/partyUninvited.less
+++ /dev/null
@@ -1,8 +0,0 @@
-party-uninvited {
-  display: block;
-
-  ul {
-    padding-left: 0;
-    list-style-type: none;
-  }
-}
-- 
2.7.4


From ccea753834e29898d813164eb25b1d5faa23f873 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:20:28 +0200
Subject: [PATCH 278/412] Step 18.28: Add PartyRsvpsList less to PartiesList

---
 imports/ui/components/partiesList/partiesList.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index 26a3d6b..6ac87dc 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -6,3 +6,4 @@ parties-list {
 
 @import "../partiesMap/partiesMap.less";
 @import "../partyRemove/partyRemove.less";
+@import "../partyRsvpsList/partyRsvpsList.less";
-- 
2.7.4


From d0e6656079108f4c5cbd0cb394ea118e90b3b5ba Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:21:23 +0200
Subject: [PATCH 279/412] Step 18.29: Update styles of PartyMap

---
 imports/ui/components/partyMap/partyMap.less | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/imports/ui/components/partyMap/partyMap.less b/imports/ui/components/partyMap/partyMap.less
index 3b4bed1..62f1643 100644
--- a/imports/ui/components/partyMap/partyMap.less
+++ b/imports/ui/components/partyMap/partyMap.less
@@ -1,7 +1,6 @@
 party-map {
   display: block;
-  width: 100%;
-  margin: 25px 0;
+  padding: 10px;
 
   .angular-google-map-container {
     width: 100%;
-- 
2.7.4


From 4b4c2e312a5068acdb38635bfc0190852f32ac51 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:23:22 +0200
Subject: [PATCH 280/412] Step 18.30: Refactor PartyDetails

---
 .../ui/components/partyDetails/partyDetails.html   | 51 ++++++++++------------
 1 file changed, 22 insertions(+), 29 deletions(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index 4023174..59fe896 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -1,35 +1,28 @@
-<div class="container-fluid">
-  <div class="row">
-    <div class="col-md-6">
-      <form>
-        <fieldset class="form-group">
-          <label>Party name</label>
-          <input type="text" ng-model="partyDetails.party.name" ng-disabled="!partyDetails.isLoggedIn" class="form-control"/>
-        </fieldset>
+<div layout="column" layout-padding>
+  <div layout="column" layout-gt-sm="row"  layout-padding>
+    <form flex="50" layout="column">
+      <md-input-container>
+        <label>Party name</label>
+        <input ng-model="partyDetails.party.name" ng-disabled="!partyDetails.isLoggedIn">
+      </md-input-container>
 
-        <fieldset class="form-group">
-          <label>Description</label>
-          <input type="text" ng-model="partyDetails.party.name" ng-disabled="!partyDetails.isLoggedIn" class="form-control"/>
-        </fieldset>
+      <md-input-container>
+        <label>Description</label>
+        <input ng-model="partyDetails.party.description" ng-disabled="!partyDetails.isLoggedIn">
+      </md-input-container>
 
-        <div class="checkbox">
-          <label>
-            <input type="checkbox" ng-model="partyDetails.party.public" ng-disabled="!partyDetails.isLoggedIn"/>
-            Public Party?
-          </label>
-        </div>
+      <div>
+        <md-checkbox ng-model="partyDetails.party.public" ng-disabled="!partyDetails.isLoggedIn" aria-label="Public Party?">
+          Public Party?
+        </md-checkbox>
+      </div>
 
-        <button ng-click="partyDetails.save()" type="submit" class="btn btn-primary">Save</button>
-      </form>
-    </div>
-    <div class="col-md-6">
-      <party-map location="partyDetails.party.location"></party-map>
-    </div>
+      <div>
+        <md-button ng-click="partyDetails.save()" class="md-primary md-raised">Save</md-button>
+      </div>
+    </form>
+    <party-map flex="50" location="partyDetails.party.location"></party-map>
   </div>
 
-  <div class="row">
-    <div class="col-md-6">
-      <party-uninvited party="partyDetails.party" ng-show="partyDetails.canInvite()"></party-uninvited>
-    </div>
-  </div>
+  <party-uninvited flex party="partyDetails.party" ng-show="partyDetails.canInvite()"></party-uninvited>
 </div>
-- 
2.7.4


From 45646aac07aaa2f97c323367e1cae65af297bb01 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:24:01 +0200
Subject: [PATCH 281/412] Step 18.31: Leave only PartyMap inside PartyDetails
 less

---
 imports/ui/components/partyDetails/partyDetails.less | 9 ---------
 1 file changed, 9 deletions(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.less b/imports/ui/components/partyDetails/partyDetails.less
index a42c467..bb42a69 100644
--- a/imports/ui/components/partyDetails/partyDetails.less
+++ b/imports/ui/components/partyDetails/partyDetails.less
@@ -1,10 +1 @@
-party-details {
-  display: block;
-
-  form {
-    margin: 25px 0;
-  }
-}
-
-@import "../partyUninvited/partyUninvited.less";
 @import "../partyMap/partyMap.less";
-- 
2.7.4


From f86e7f42656878f49634e4306f8c534decd3531c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 11:43:44 +0200
Subject: [PATCH 282/412] Step 18.32: Create view for PartyAddButton

---
 imports/ui/components/partyAddButton/partyAddButton.html | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/ui/components/partyAddButton/partyAddButton.html

diff --git a/imports/ui/components/partyAddButton/partyAddButton.html b/imports/ui/components/partyAddButton/partyAddButton.html
new file mode 100644
index 0000000..6e37857
--- /dev/null
+++ b/imports/ui/components/partyAddButton/partyAddButton.html
@@ -0,0 +1,3 @@
+<md-button class="md-fab" aria-label="Add new party" ng-click="partyAddButton.open($event)">
+  <md-icon md-svg-icon="content:ic_add_24px"></md-icon>
+</md-button>
-- 
2.7.4


From faffa2c8c2e0870dc94e26318c131ed0f53e4ff5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 11:45:15 +0200
Subject: [PATCH 283/412] Step 18.33: Create PartyAddButton component

---
 .../ui/components/partyAddButton/partyAddButton.js | 45 ++++++++++++++++++++++
 1 file changed, 45 insertions(+)
 create mode 100644 imports/ui/components/partyAddButton/partyAddButton.js

diff --git a/imports/ui/components/partyAddButton/partyAddButton.js b/imports/ui/components/partyAddButton/partyAddButton.js
new file mode 100644
index 0000000..cadd70c
--- /dev/null
+++ b/imports/ui/components/partyAddButton/partyAddButton.js
@@ -0,0 +1,45 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import buttonTemplate from './partyAddButton.html';
+import modalTemplate from './partyAddModal.html';
+import { name as PartyAdd } from '../partyAdd/partyAdd';
+
+class PartyAddButton {
+  constructor($mdDialog, $mdMedia) {
+    'ngInject';
+
+    this.$mdDialog = $mdDialog;
+    this.$mdMedia = $mdMedia
+  }
+
+  open(event) {
+    this.$mdDialog.show({
+      controller($mdDialog) {
+        'ngInject';
+
+        this.close = () => {
+          $mdDialog.hide();
+        }
+      },
+      controllerAs: 'partyAddModal',
+      template: modalTemplate,
+      targetEvent: event,
+      parent: angular.element(document.body),
+      clickOutsideToClose: true,
+      fullscreen: this.$mdMedia('sm') || this.$mdMedia('xs')
+    });
+  }
+}
+
+const name = 'partyAddButton';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  PartyAdd
+]).component(name, {
+  template: buttonTemplate,
+  controllerAs: name,
+  controller: PartyAddButton
+});
-- 
2.7.4


From 75f42b4a00bfcb69ba5dfae9cd638c56b5f1fc48 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 11:46:03 +0200
Subject: [PATCH 284/412] Step 18.34: Add view for modal window

---
 imports/ui/components/partyAddButton/partyAddModal.html | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)
 create mode 100644 imports/ui/components/partyAddButton/partyAddModal.html

diff --git a/imports/ui/components/partyAddButton/partyAddModal.html b/imports/ui/components/partyAddButton/partyAddModal.html
new file mode 100644
index 0000000..3b490ec
--- /dev/null
+++ b/imports/ui/components/partyAddButton/partyAddModal.html
@@ -0,0 +1,16 @@
+<md-dialog aria-label="New party" ng-cloak>
+  <md-toolbar>
+    <div class="md-toolbar-tools">
+      <h2>New party</h2>
+      <span flex></span>
+      <md-button ng-click="partyAddModal.close()">
+        Close
+      </md-button>
+    </div>
+  </md-toolbar>
+  <md-dialog-content>
+    <div class="md-dialog-content">
+      <party-add done="partyAddModal.close()"></party-add>
+    </div>
+  </md-dialog-content>
+</md-dialog>
-- 
2.7.4


From 30cf6a984ccd955a87cf37d6477027901942fba1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 11:46:27 +0200
Subject: [PATCH 285/412] Step 18.35: Add some style

---
 imports/ui/components/partyAddButton/partyAddButton.less | 7 +++++++
 1 file changed, 7 insertions(+)
 create mode 100644 imports/ui/components/partyAddButton/partyAddButton.less

diff --git a/imports/ui/components/partyAddButton/partyAddButton.less b/imports/ui/components/partyAddButton/partyAddButton.less
new file mode 100644
index 0000000..73828f6
--- /dev/null
+++ b/imports/ui/components/partyAddButton/partyAddButton.less
@@ -0,0 +1,7 @@
+party-add-button {
+  .md-fab {
+    position: fixed;
+    right: 15px;
+    bottom: 15px;
+  }
+}
-- 
2.7.4


From e72f5a727f07b0de0734f0bea7508eddca857d49 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 11:47:55 +0200
Subject: [PATCH 286/412] Step 18.36: Implement `done` expression to PartyAdd

---
 imports/ui/components/partyAdd/partyAdd.js | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/imports/ui/components/partyAdd/partyAdd.js b/imports/ui/components/partyAdd/partyAdd.js
index 4c9052a..ddef484 100644
--- a/imports/ui/components/partyAdd/partyAdd.js
+++ b/imports/ui/components/partyAdd/partyAdd.js
@@ -14,6 +14,11 @@ class PartyAdd {
   submit() {
     this.party.owner = Meteor.user()._id;
     Parties.insert(this.party);
+
+    if(this.done) {
+      this.done();
+    }
+
     this.reset();
   }
 
@@ -29,6 +34,9 @@ export default angular.module(name, [
   angularMeteor
 ]).component(name, {
   template,
+  bindings: {
+    done: '&?'
+  },
   controllerAs: name,
   controller: PartyAdd
 });
-- 
2.7.4


From 89ab6c18e392415f06a25740756313933d605004 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 11:48:44 +0200
Subject: [PATCH 287/412] Step 18.37: Add PartyAddButton to PartiesList

---
 imports/ui/components/partiesList/partiesList.js | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index ec99584..17996c3 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -9,7 +9,7 @@ import template from './partiesList.html';
 import { Parties } from '../../../api/parties';
 import { name as PartiesSort } from '../partiesSort/partiesSort';
 import { name as PartiesMap } from '../partiesMap/partiesMap';
-import { name as PartyAdd } from '../partyAdd/partyAdd';
+import { name as PartyAddButton } from '../partyAddButton/partyAddButton';
 import { name as PartyRemove } from '../partyRemove/partyRemove';
 import { name as PartyCreator } from '../partyCreator/partyCreator';
 import { name as PartyRsvp } from '../partyRsvp/partyRsvp';
@@ -77,7 +77,7 @@ export default angular.module(name, [
   utilsPagination,
   PartiesSort,
   PartiesMap,
-  PartyAdd,
+  PartyAddButton,
   PartyRemove,
   PartyCreator,
   PartyRsvp,
-- 
2.7.4


From 73027bacf04d742888b917b9a1e5b1bb65bd3187 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 11:51:45 +0200
Subject: [PATCH 288/412] Step 18.38: Implement PartyAddButton

---
 imports/ui/components/partiesList/partiesList.html | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index b6772eb..12987b3 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -1,8 +1,5 @@
 <div layout="column" layout-padding>
-  <party-add ng-show="partiesList.isLoggedIn"></party-add>
-  <div ng-hide="partiesList.isLoggedIn">
-    <i>Log in to create a party!</i>
-  </div>
+  <party-add-button ng-show="partiesList.isLoggedIn"></party-add-button>
 
   <div flex>
     <h2 class="md-display-1">List of the parties:</h2>
-- 
2.7.4


From d95f8642e628c8fb20348eb2d2f17930bde98500 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 11:51:59 +0200
Subject: [PATCH 289/412] Step 18.39: Import styles

---
 imports/ui/components/partiesList/partiesList.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index 6ac87dc..b0bc5dc 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -6,4 +6,5 @@ parties-list {
 
 @import "../partiesMap/partiesMap.less";
 @import "../partyRemove/partyRemove.less";
+@import "../partyAddButton/partyAddButton.less";
 @import "../partyRsvpsList/partyRsvpsList.less";
-- 
2.7.4


From ed68e0d4da6bb497bbb677f5d12917c56b523e98 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:25:09 +0200
Subject: [PATCH 290/412] Step 18.40: Create view for Auth

---
 imports/ui/components/auth/auth.html | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 imports/ui/components/auth/auth.html

diff --git a/imports/ui/components/auth/auth.html b/imports/ui/components/auth/auth.html
new file mode 100644
index 0000000..28f7a45
--- /dev/null
+++ b/imports/ui/components/auth/auth.html
@@ -0,0 +1,6 @@
+<div layout="row">
+  <md-button flex ui-sref="login" ng-hide="auth.isLoggedIn">Login</md-button>
+  <md-button flex ui-sref="register" ng-hide="auth.isLoggedIn">Sign up</md-button>
+  <md-button flex ng-click="auth.logout()" ng-show="auth.isLoggedIn">Logout</md-button>
+  <div ng-show="auth.isLoggedIn">{{ auth.currentUser | displayNameFilter }}</div>
+</div>
-- 
2.7.4


From 1cc660fdb54dc8a2b832cbd61942fb30df899af5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:25:49 +0200
Subject: [PATCH 291/412] Step 18.41: Create Auth component

---
 imports/ui/components/auth/auth.js | 41 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 41 insertions(+)
 create mode 100644 imports/ui/components/auth/auth.js

diff --git a/imports/ui/components/auth/auth.js b/imports/ui/components/auth/auth.js
new file mode 100644
index 0000000..faffdb3
--- /dev/null
+++ b/imports/ui/components/auth/auth.js
@@ -0,0 +1,41 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+import { Accounts } from 'meteor/accounts-base';
+
+import template from './auth.html';
+import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
+
+const name = 'auth';
+
+class Auth {
+  constructor($scope, $reactive) {
+    'ngInject';
+
+    $reactive(this).attach($scope);
+
+    this.helpers({
+      isLoggedIn() {
+        return !!Meteor.userId();
+      },
+      currentUser() {
+        return Meteor.user();
+      }
+    });
+  }
+
+  logout() {
+    Accounts.logout();
+  }
+}
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  DisplayNameFilter
+]).component(name, {
+  template,
+  controllerAs: name,
+  controller: Auth
+});
-- 
2.7.4


From 8086046811ef636cb2e46f5ee8a36449ec2fd0e6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:42:53 +0200
Subject: [PATCH 292/412] Step 18.42: View for Login

---
 imports/ui/components/login/login.html | 72 ++++++++++++++++++++++++++++++++++
 1 file changed, 72 insertions(+)
 create mode 100644 imports/ui/components/login/login.html

diff --git a/imports/ui/components/login/login.html b/imports/ui/components/login/login.html
new file mode 100644
index 0000000..feb3443
--- /dev/null
+++ b/imports/ui/components/login/login.html
@@ -0,0 +1,72 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+
+    <md-toolbar class="md-primary md-tall" layout="column" layout-align="end" layout-fill>
+      <div layout="row" class="md-toolbar-tools md-toolbar-tools-bottom">
+        <h3 class="md-display-1">
+          Sign in
+        </h3>
+      </div>
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2">
+          Use existing account</p>
+      </div>
+      <div layout="row" layout-fill layout-margin layout-padding layout-wrap>
+        <md-button class="md-raised">
+          <i class="icon ion-social-google" style="color: #DC4A38; font-size: 24px;"></i>
+          <span>
+            Google</span>
+        </md-button>
+        <md-button class="md-raised">
+          <i class="icon ion-social-facebook" style="color: #3F62B4; font-size: 24px;"></i>
+          <span>Facebook
+          </span>
+        </md-button>
+        <md-button class="md-raised">
+          <i class="icon ion-social-twitter" style="color: #27AAE2; font-size: 24px;"></i>
+          <span>Twitter
+          </span>
+        </md-button>
+      </div>
+      <md-divider class="inset"></md-divider>
+
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2">
+          Sign in with your email</p>
+      </div>
+
+      <form name="loginForm" layout="column" layout-fill layout-padding layout-margin>
+        <md-input-container>
+          <label>
+            Email
+          </label>
+          <input type="text" ng-model="login.credentials.email" aria-label="email" required/>
+        </md-input-container>
+        <md-input-container>
+          <label>
+            Password
+          </label>
+          <input type="password" ng-model="login.credentials.password" aria-label="password" required/>
+        </md-input-container>
+        <div layout="row" layout-align="space-between center">
+          <a class="md-button" href="/password">Forgot password?</a>
+          <md-button class="md-raised md-primary" ng-click="login.login()" aria-label="login" ng-disabled="login.loginForm.$invalid()">Sign In
+          </md-button>
+        </div>
+      </form>
+      <md-toolbar ng-show="login.error" class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+        <p class="md-body-1">{{ login.error }}</p>
+      </md-toolbar>
+      <md-divider></md-divider>
+      <div layout="row" layout-align="center">
+        <a class="md-button" href="/register">Need an account?</a>
+      </div>
+
+    </div>
+
+  </md-whiteframe>
+</md-content>
-- 
2.7.4


From 58bdd22bf16f211e702622d702f960a7986723f3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:44:02 +0200
Subject: [PATCH 293/412] Step 18.43: Create Login

---
 imports/ui/components/login/login.js | 61 ++++++++++++++++++++++++++++++++++++
 1 file changed, 61 insertions(+)
 create mode 100644 imports/ui/components/login/login.js

diff --git a/imports/ui/components/login/login.js b/imports/ui/components/login/login.js
new file mode 100644
index 0000000..4ae9c9e
--- /dev/null
+++ b/imports/ui/components/login/login.js
@@ -0,0 +1,61 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+import uiRouter from 'angular-ui-router';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './login.html';
+
+import { name as Register } from '../register/register';
+
+class Login {
+  constructor($scope, $reactive, $state) {
+    'ngInject';
+
+    this.$state = $state;
+
+    $reactive(this).attach($scope);
+
+    this.credentials = {
+      email: '',
+      password: ''
+    };
+
+    this.error = '';
+  }
+
+  login() {
+    Meteor.loginWithPassword(this.credentials.email, this.credentials.password,
+      this.$bindToContext((err) => {
+        if (err) {
+          this.error = err;
+        } else {
+          this.$state.go('parties');
+        }
+      })
+    );
+  }
+}
+
+const name = 'login';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  uiRouter
+])
+  .component(name, {
+    template,
+    controllerAs: name,
+    controller: Login
+  })
+  .config(config);
+
+function config($stateProvider) {
+  'ngInject';
+
+  $stateProvider.state('login', {
+    url: '/login',
+    template: '<login></login>'
+  });
+}
-- 
2.7.4


From 265d52b6372c7fb47aac7d00bb772ddada1d82cd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:44:39 +0200
Subject: [PATCH 294/412] Step 18.44: Add Login to Auth

---
 imports/ui/components/auth/auth.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/auth/auth.js b/imports/ui/components/auth/auth.js
index faffdb3..e3290b8 100644
--- a/imports/ui/components/auth/auth.js
+++ b/imports/ui/components/auth/auth.js
@@ -6,6 +6,7 @@ import { Accounts } from 'meteor/accounts-base';
 
 import template from './auth.html';
 import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
+import { name as Login } from '../login/login';
 
 const name = 'auth';
 
@@ -33,7 +34,8 @@ class Auth {
 // create a module
 export default angular.module(name, [
   angularMeteor,
-  DisplayNameFilter
+  DisplayNameFilter,
+  Login
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 6c3b370e645b33e1362f0de20303cf023a1c1add Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:45:38 +0200
Subject: [PATCH 295/412] Step 18.45: View for Register

---
 imports/ui/components/register/register.html | 72 ++++++++++++++++++++++++++++
 1 file changed, 72 insertions(+)
 create mode 100644 imports/ui/components/register/register.html

diff --git a/imports/ui/components/register/register.html b/imports/ui/components/register/register.html
new file mode 100644
index 0000000..37b42c6
--- /dev/null
+++ b/imports/ui/components/register/register.html
@@ -0,0 +1,72 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+
+    <md-toolbar class="md-primary md-tall" layout="column" layout-align="end" layout-fill>
+      <div layout="row" class="md-toolbar-tools md-toolbar-tools-bottom">
+        <h3 class="md-display-1">
+          Register a new account</h3>
+      </div>
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2">Use your email?</p>
+      </div>
+
+      <form name="registerForm" layout="column" layout-fill layout-padding layout-margin>
+        <md-input-container >
+          <label>
+            Email
+          </label>
+          <input type="text" ng-model="register.credentials.email" placeholder="email" aria-label="email" required/>
+        </md-input-container>
+        <md-input-container >
+          <label>
+            Password
+          </label>
+          <input type="password" ng-model="register.credentials.password" placeholder="password" aria-label="password" required/>
+        </md-input-container>
+        <div layout="row" layout-align="end center">
+          <md-button class="md-raised md-primary" ng-click="register.register()" aria-label="login" ng-disabled="register.registerForm.$invalid()">Register</md-button>
+        </div>
+      </form>
+
+      <md-divider class="inset"></md-divider>
+
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2">
+          Want to use an existing account?
+        </p>
+      </div>
+
+      <div layout="row" layout-fill layout-margin layout-padding layout-wrap>
+        <md-button class="md-raised">
+          <md-icon md-svg-icon="social:ic_google_24px" style="color: #DC4A38;"></md-icon>
+          <span>
+            Google</span>
+        </md-button>
+        <md-button class="md-raised">
+          <md-icon md-svg-icon="social:ic_facebook_24px" style="color: #3F62B4;"></md-icon>
+          <span>Facebook
+          </span>
+        </md-button>
+        <md-button class="md-raised">
+          <md-icon md-svg-icon="social:ic_twitter_24px" style="color: #27AAE2;"></md-icon>
+          <span>Twitter
+          </span>
+        </md-button>
+      </div>
+      <md-toolbar ng-show="register.error" class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+        <p class="md-body-1">{{ register.error }}</p>
+      </md-toolbar>
+
+      <md-divider></md-divider>
+      <div layout="row" layout-align="center">
+        <a class="md-button" href="/login">Already a user?</a>
+      </div>
+
+    </div>
+
+  </md-whiteframe>
+</md-content>
-- 
2.7.4


From 406533474840815b528673f352fd1cab140de331 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:46:15 +0200
Subject: [PATCH 296/412] Step 18.46: Create Register

---
 imports/ui/components/register/register.js | 58 ++++++++++++++++++++++++++++++
 1 file changed, 58 insertions(+)
 create mode 100644 imports/ui/components/register/register.js

diff --git a/imports/ui/components/register/register.js b/imports/ui/components/register/register.js
new file mode 100644
index 0000000..ab4ae94
--- /dev/null
+++ b/imports/ui/components/register/register.js
@@ -0,0 +1,58 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+import uiRouter from 'angular-ui-router';
+
+import { Accounts } from 'meteor/accounts-base';
+
+import template from './register.html';
+
+class Register {
+  constructor($scope, $reactive, $state) {
+    'ngInject';
+
+    this.$state = $state;
+
+    $reactive(this).attach($scope);
+
+    this.credentials = {
+      email: '',
+      password: ''
+    };
+
+    this.error = '';
+  }
+
+  register() {
+    Accounts.createUser(this.credentials,
+      this.$bindToContext((err) => {
+        if (err) {
+          this.error = err;
+        } else {
+          this.$state.go('parties');
+        }
+      })
+    );
+  }
+}
+
+const name = 'register';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  uiRouter
+])
+  .component(name, {
+    template,
+    controllerAs: name,
+    controller: Register
+  })
+  .config(config);
+
+function config($stateProvider) {
+  'ngInject';
+  $stateProvider.state('register', {
+    url: '/register',
+    template: '<register></register>'
+  });
+}
-- 
2.7.4


From 91615cc6eaf7323e5c3a382ca577ac592b7efeee Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:46:55 +0200
Subject: [PATCH 297/412] Step 18.47: Add Register to Auth

---
 imports/ui/components/auth/auth.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/auth/auth.js b/imports/ui/components/auth/auth.js
index e3290b8..871e2fd 100644
--- a/imports/ui/components/auth/auth.js
+++ b/imports/ui/components/auth/auth.js
@@ -7,6 +7,7 @@ import { Accounts } from 'meteor/accounts-base';
 import template from './auth.html';
 import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
 import { name as Login } from '../login/login';
+import { name as Register } from '../register/register';
 
 const name = 'auth';
 
@@ -35,7 +36,8 @@ class Auth {
 export default angular.module(name, [
   angularMeteor,
   DisplayNameFilter,
-  Login
+  Login,
+  Register
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From ab4080d9df2e7015d8cf8bb987ee980279f9bf30 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:47:29 +0200
Subject: [PATCH 298/412] Step 18.48: View for Password

---
 imports/ui/components/password/password.html | 40 ++++++++++++++++++++++++++++
 1 file changed, 40 insertions(+)
 create mode 100644 imports/ui/components/password/password.html

diff --git a/imports/ui/components/password/password.html b/imports/ui/components/password/password.html
new file mode 100644
index 0000000..94df2b0
--- /dev/null
+++ b/imports/ui/components/password/password.html
@@ -0,0 +1,40 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+
+    <md-toolbar class="md-primary md-tall" layout="column" layout-align="end" layout-fill>
+      <div layout="row" class="md-toolbar-tools md-toolbar-tools-bottom">
+        <h3 class="md-display-1"> Reset Password</h3>
+      </div>
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2">Enter your email so we can send you a reset link</p>
+      </div>
+
+      <form name="resetForm" layout="column" layout-fill layout-padding layout-margin>
+        <md-input-container>
+          <label> Email </label>
+          <input type="text" ng-model="password.credentials.email" placeholder="email" aria-label="email" required/>
+        </md-input-container>
+        <div layout="row" layout-align="end center">
+          <md-button class="md-raised md-primary" ng-click="password.reset()" aria-label="reset"
+                     ng-disabled="password.resetForm.$invalid()">Send Email
+          </md-button>
+        </div>
+      </form>
+
+      <md-toolbar ng-show="password.error" class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+        <p class="md-body-1">{{ password.error }}</p>
+      </md-toolbar>
+
+      <md-divider></md-divider>
+      <div layout="row" layout-align="center">
+        <a class="md-button" href="/login">Sign in</a>
+      </div>
+
+    </div>
+
+  </md-whiteframe>
+</md-content>
-- 
2.7.4


From f769acf853ffcf4bd95fc35b0eefeeba4f9a2357 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:48:03 +0200
Subject: [PATCH 299/412] Step 18.49: Create Password

---
 imports/ui/components/password/password.js | 56 ++++++++++++++++++++++++++++++
 1 file changed, 56 insertions(+)
 create mode 100644 imports/ui/components/password/password.js

diff --git a/imports/ui/components/password/password.js b/imports/ui/components/password/password.js
new file mode 100644
index 0000000..c417f95
--- /dev/null
+++ b/imports/ui/components/password/password.js
@@ -0,0 +1,56 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+import uiRouter from 'angular-ui-router';
+
+import { Accounts } from 'meteor/accounts-base';
+
+import template from './password.html';
+
+class Register {
+  constructor($scope, $reactive, $state) {
+    'ngInject';
+
+    this.$state = $state;
+
+    $reactive(this).attach($scope);
+
+    this.credentials = {
+      email: ''
+    };
+
+    this.error = '';
+  }
+
+  reset() {
+    Accounts.forgotPassword(this.credentials, this.$bindToContext((err) => {
+      if (err) {
+        this.error = err;
+      } else {
+        this.$state.go('parties');
+      }
+    }));
+  }
+}
+
+const name = 'password';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  uiRouter
+])
+  .component(name, {
+    template,
+    controllerAs: name,
+    controller: Register
+  })
+  .config(config);
+
+function config($stateProvider) {
+  'ngInject';
+
+  $stateProvider.state('password', {
+    url: '/password',
+    template: '<password></password>'
+  });
+}
-- 
2.7.4


From 010e95f3a44e2578193eaeb2b73762ef203a6600 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:48:33 +0200
Subject: [PATCH 300/412] Step 18.50: Add Password to Auth

---
 imports/ui/components/auth/auth.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/auth/auth.js b/imports/ui/components/auth/auth.js
index 871e2fd..a87dd5e 100644
--- a/imports/ui/components/auth/auth.js
+++ b/imports/ui/components/auth/auth.js
@@ -8,6 +8,7 @@ import template from './auth.html';
 import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
 import { name as Login } from '../login/login';
 import { name as Register } from '../register/register';
+import { name as Password } from '../password/password';
 
 const name = 'auth';
 
@@ -37,7 +38,8 @@ export default angular.module(name, [
   angularMeteor,
   DisplayNameFilter,
   Login,
-  Register
+  Register,
+  Password
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 491ed0155bdffd1c1cf0c14c06f7ea140e340985 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:50:12 +0200
Subject: [PATCH 301/412] Step 18.51: Add Auth to Socially

---
 imports/ui/components/socially/socially.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index cad243b..21940eb 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -7,6 +7,7 @@ import template from './socially.html';
 import { name as PartiesList } from '../partiesList/partiesList';
 import { name as PartyDetails } from '../partyDetails/partyDetails';
 import { name as Navigation } from '../navigation/navigation';
+import { name as Auth } from '../auth/auth';
 
 class Socially {}
 
@@ -20,6 +21,7 @@ export default angular.module(name, [
   PartiesList,
   PartyDetails,
   Navigation,
+  Auth,
   'accounts.ui'
 ]).component(name, {
   template,
-- 
2.7.4


From d8ea70afa972144ad24bbb74804c9494a5256887 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:50:46 +0200
Subject: [PATCH 302/412] Step 18.52: Implement Auth

---
 imports/ui/components/navigation/navigation.html | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/navigation/navigation.html b/imports/ui/components/navigation/navigation.html
index 0b1d8a6..2d81bc4 100644
--- a/imports/ui/components/navigation/navigation.html
+++ b/imports/ui/components/navigation/navigation.html
@@ -5,6 +5,7 @@
         Socially
       </span>
     </h2>
-    <login-buttons></login-buttons>
+    <span flex></span>
+    <auth></auth>
   </div>
 </md-toolbar>
-- 
2.7.4


From 1d6ba3eda40ba6d2ed1c030d866bbab6c444eafb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:51:45 +0200
Subject: [PATCH 303/412] Step 18.53: Remove .less of Navigation

---
 imports/ui/components/navigation/navigation.less | 5 -----
 1 file changed, 5 deletions(-)
 delete mode 100644 imports/ui/components/navigation/navigation.less

diff --git a/imports/ui/components/navigation/navigation.less b/imports/ui/components/navigation/navigation.less
deleted file mode 100644
index 87b8777..0000000
--- a/imports/ui/components/navigation/navigation.less
+++ /dev/null
@@ -1,5 +0,0 @@
-navigation {
-  login-buttons {
-    margin-left: 15px;
-  }
-}
-- 
2.7.4


From 6ea315574b395569d430fafd4125fa405aab430b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 03:52:12 +0200
Subject: [PATCH 304/412] Step 18.54: Remove import statement

---
 imports/ui/components/socially/socially.less | 2 --
 1 file changed, 2 deletions(-)

diff --git a/imports/ui/components/socially/socially.less b/imports/ui/components/socially/socially.less
index 3eabc12..742f92d 100644
--- a/imports/ui/components/socially/socially.less
+++ b/imports/ui/components/socially/socially.less
@@ -2,7 +2,5 @@ socially {
   display: block;
 }
 
-
-@import "../navigation/navigation.less";
 @import "../partiesList/partiesList.less";
 @import "../partyDetails/partyDetails.less";
-- 
2.7.4


From eb3b5c927459507fd4f6c67b6e8e0ce2f8b57040 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 12:38:56 +0200
Subject: [PATCH 305/412] Step 20.1: Add `jalik:ufs`

---
 .meteor/packages | 1 +
 .meteor/versions | 2 ++
 2 files changed, 3 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 1116bb7..59856e0 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -30,3 +30,4 @@ email
 less
 planettraining:material-design-icons
 pagebakers:ionicons
+jalik:ufs
diff --git a/.meteor/versions b/.meteor/versions
index bef3e68..dbae4b0 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -41,12 +41,14 @@ html-tools@1.0.11
 htmljs@1.0.11
 http@1.2.9_1
 id-map@1.0.8
+jalik:ufs@0.7.1_1
 jquery@1.11.9
 launch-screen@1.0.12
 less@2.7.5_1
 livedata@1.0.18
 localstorage@1.0.11
 logging@1.1.15_1
+matb33:collection-hooks@0.8.4
 meteor@1.2.17_1
 meteor-base@1.0.4
 minifier-css@1.2.14_1
-- 
2.7.4


From 78ab789112c28656581e428bc5e660251744a977 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 12:40:52 +0200
Subject: [PATCH 306/412] Step 20.2: Add `jalik:ufs-gridfs`

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 59856e0..dab7905 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -31,3 +31,4 @@ less
 planettraining:material-design-icons
 pagebakers:ionicons
 jalik:ufs
+jalik:ufs-gridfs
diff --git a/.meteor/versions b/.meteor/versions
index dbae4b0..a60ade0 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -42,6 +42,7 @@ htmljs@1.0.11
 http@1.2.9_1
 id-map@1.0.8
 jalik:ufs@0.7.1_1
+jalik:ufs-gridfs@0.1.4
 jquery@1.11.9
 launch-screen@1.0.12
 less@2.7.5_1
-- 
2.7.4


From 57603c1a2a060206bdbd0822bfeea51044bd07a1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 12:48:58 +0200
Subject: [PATCH 307/412] Step 20.3: Create Images and Thumbs collections

---
 imports/api/images/collection.js | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)
 create mode 100644 imports/api/images/collection.js

diff --git a/imports/api/images/collection.js b/imports/api/images/collection.js
new file mode 100644
index 0000000..a522111
--- /dev/null
+++ b/imports/api/images/collection.js
@@ -0,0 +1,21 @@
+import { Meteor } from 'meteor/meteor';
+import { Mongo } from 'meteor/mongo';
+
+export const Images = new Mongo.Collection('images');
+export const Thumbs = new Mongo.Collection('thumbs');
+
+function loggedIn(userId) {
+  return !!userId;
+}
+
+Thumbs.allow({
+  insert: loggedIn,
+  update: loggedIn,
+  remove: loggedIn
+});
+
+Images.allow({
+  insert: loggedIn,
+  update: loggedIn,
+  remove: loggedIn
+});
-- 
2.7.4


From a4b41517f180df893ad94080c72f075e24e86165 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 12:50:11 +0200
Subject: [PATCH 308/412] Step 20.4: Create ThumbsStore and ImagesStore

---
 imports/api/images/store.js | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)
 create mode 100644 imports/api/images/store.js

diff --git a/imports/api/images/store.js b/imports/api/images/store.js
new file mode 100644
index 0000000..58462c1
--- /dev/null
+++ b/imports/api/images/store.js
@@ -0,0 +1,18 @@
+import { UploadFS } from 'meteor/jalik:ufs';
+import { Images, Thumbs } from './collection';
+
+export const ThumbsStore = new UploadFS.store.GridFS({
+  collection: Thumbs,
+  name: 'thumbs'
+});
+
+export const ImagesStore = new UploadFS.store.GridFS({
+  collection: Images,
+  name: 'images',
+  filter: new UploadFS.Filter({
+    contentTypes: ['image/*']
+  }),
+  copyTo: [
+    ThumbsStore
+  ]
+});
-- 
2.7.4


From 0f982d3bc43cf41aa5b2f9be7235ed79c53126ec Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 12:50:57 +0200
Subject: [PATCH 309/412] Step 20.5: Create main export file of Images and
 Thumbs

---
 imports/api/images/index.js | 2 ++
 1 file changed, 2 insertions(+)
 create mode 100644 imports/api/images/index.js

diff --git a/imports/api/images/index.js b/imports/api/images/index.js
new file mode 100644
index 0000000..9c18361
--- /dev/null
+++ b/imports/api/images/index.js
@@ -0,0 +1,2 @@
+export * from './collection';
+export * from './store';
-- 
2.7.4


From a77a3c1ea51d9faa7fbe51ff3a15f805fbdd4c37 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 12:52:30 +0200
Subject: [PATCH 310/412] Step 20.6: Resize images

---
 imports/api/images/store.js | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/imports/api/images/store.js b/imports/api/images/store.js
index 58462c1..a0fa6d6 100644
--- a/imports/api/images/store.js
+++ b/imports/api/images/store.js
@@ -3,7 +3,19 @@ import { Images, Thumbs } from './collection';
 
 export const ThumbsStore = new UploadFS.store.GridFS({
   collection: Thumbs,
-  name: 'thumbs'
+  name: 'thumbs',
+  transformWrite(from, to, fileId, file) {
+    // Resize to 32x32
+    const gm = require('gm');
+
+    gm(from, file.name)
+      .resize(32, 32)
+      .gravity('Center')
+      .extent(32, 32)
+      .quality(75)
+      .stream()
+      .pipe(to);
+  }
 });
 
 export const ImagesStore = new UploadFS.store.GridFS({
-- 
2.7.4


From c44f4b1be195c512170de0825c8c22c27f5168eb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 12:54:06 +0200
Subject: [PATCH 311/412] Step 20.7: Install `gm`

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 8971ed8..459c03c 100644
--- a/package.json
+++ b/package.json
@@ -16,6 +16,7 @@
     "angular-ui-router": "^0.2.18",
     "angular-simple-logger": "^0.1.7",
     "angular-utils-pagination": "^0.11.1",
+    "gm": "^1.22.0",
     "meteor-node-stubs": "~0.2.0",
     "underscore": "^1.8.3"
   },
-- 
2.7.4


From 3e8c2feca9da1a255160522963dc50d0d5abcfb5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 12:58:21 +0200
Subject: [PATCH 312/412] Step 20.8: Create view for PartyUpload

---
 imports/ui/components/partyUpload/partyUpload.html | 9 +++++++++
 1 file changed, 9 insertions(+)
 create mode 100644 imports/ui/components/partyUpload/partyUpload.html

diff --git a/imports/ui/components/partyUpload/partyUpload.html b/imports/ui/components/partyUpload/partyUpload.html
new file mode 100644
index 0000000..d53d6c7
--- /dev/null
+++ b/imports/ui/components/partyUpload/partyUpload.html
@@ -0,0 +1,9 @@
+<div layout="column">
+  <div>
+      <div>Click here to select image</div>
+      <div>
+        <strong>OR</strong>
+      </div>
+      <div>You can also drop image to here</div>
+  </div>
+</div>
-- 
2.7.4


From 322e810a4875a1476af6c065fc3717cf5b863aa8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 12:59:42 +0200
Subject: [PATCH 313/412] Step 20.9: Create PartyUpload component

---
 imports/ui/components/partyUpload/partyUpload.js | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)
 create mode 100644 imports/ui/components/partyUpload/partyUpload.js

diff --git a/imports/ui/components/partyUpload/partyUpload.js b/imports/ui/components/partyUpload/partyUpload.js
new file mode 100644
index 0000000..571b3c1
--- /dev/null
+++ b/imports/ui/components/partyUpload/partyUpload.js
@@ -0,0 +1,19 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyUpload.html';
+
+class PartyUpload {}
+
+const name = 'partyUpload';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name,
+  controller: PartyUpload
+});
-- 
2.7.4


From e6a1f8920fba4989fd90f264fb700db35e709ff7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:01:32 +0200
Subject: [PATCH 314/412] Step 20.10: Add to PartyAdd

---
 imports/ui/components/partyAdd/partyAdd.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyAdd/partyAdd.js b/imports/ui/components/partyAdd/partyAdd.js
index ddef484..47f09fe 100644
--- a/imports/ui/components/partyAdd/partyAdd.js
+++ b/imports/ui/components/partyAdd/partyAdd.js
@@ -5,6 +5,7 @@ import { Meteor } from 'meteor/meteor';
 
 import template from './partyAdd.html';
 import { Parties } from '../../../api/parties';
+import { name as PartyUpload } from '../partyUpload/partyUpload';
 
 class PartyAdd {
   constructor() {
@@ -31,7 +32,8 @@ const name = 'partyAdd';
 
 // create a module
 export default angular.module(name, [
-  angularMeteor
+  angularMeteor,
+  PartyUpload
 ]).component(name, {
   template,
   bindings: {
-- 
2.7.4


From 0fb8d5249640450e696d96333581dff81ab90053 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:03:51 +0200
Subject: [PATCH 315/412] Step 20.11: Implement to the view

---
 imports/ui/components/partyAdd/partyAdd.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partyAdd/partyAdd.html b/imports/ui/components/partyAdd/partyAdd.html
index 6e504f0..8946e6d 100644
--- a/imports/ui/components/partyAdd/partyAdd.html
+++ b/imports/ui/components/partyAdd/partyAdd.html
@@ -19,4 +19,5 @@
   <div flex>
     <md-button ng-click="partyAdd.submit()" class="md-raised">Add Party!</md-button>
   </div>
+  <party-upload files="partyAdd.party.images"></party-upload>
 </div>
-- 
2.7.4


From abe78fa5d1c75f7cda20d586a81206c0814c552e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:05:32 +0200
Subject: [PATCH 316/412] Step 20.12: install `ng-file-upload`

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 459c03c..0484324 100644
--- a/package.json
+++ b/package.json
@@ -18,6 +18,7 @@
     "angular-utils-pagination": "^0.11.1",
     "gm": "^1.22.0",
     "meteor-node-stubs": "~0.2.0",
+    "ng-file-upload": "^12.0.4",
     "underscore": "^1.8.3"
   },
   "devDependencies": {
-- 
2.7.4


From 131a9b412a5ac7c8ef29b188bb7ab713578628bd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:08:06 +0200
Subject: [PATCH 317/412] Step 20.13: Add as a dependency

---
 imports/ui/components/partyUpload/partyUpload.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUpload/partyUpload.js b/imports/ui/components/partyUpload/partyUpload.js
index 571b3c1..d4b7c6e 100644
--- a/imports/ui/components/partyUpload/partyUpload.js
+++ b/imports/ui/components/partyUpload/partyUpload.js
@@ -1,5 +1,6 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
+import ngFileUpload from 'ng-file-upload';
 
 import { Meteor } from 'meteor/meteor';
 
@@ -11,7 +12,8 @@ const name = 'partyUpload';
 
 // create a module
 export default angular.module(name, [
-  angularMeteor
+  angularMeteor,
+  ngFileUpload
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From f01c1b301eaa7d6a460d01f31d9a6c98252eb3aa Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:09:13 +0200
Subject: [PATCH 318/412] Step 20.14: Add ngf-drop to the view

---
 imports/ui/components/partyUpload/partyUpload.html | 21 +++++++++++++++------
 1 file changed, 15 insertions(+), 6 deletions(-)

diff --git a/imports/ui/components/partyUpload/partyUpload.html b/imports/ui/components/partyUpload/partyUpload.html
index d53d6c7..70e5af3 100644
--- a/imports/ui/components/partyUpload/partyUpload.html
+++ b/imports/ui/components/partyUpload/partyUpload.html
@@ -1,9 +1,18 @@
 <div layout="column">
-  <div>
-      <div>Click here to select image</div>
-      <div>
-        <strong>OR</strong>
-      </div>
-      <div>You can also drop image to here</div>
+  <div ngf-drop
+    ngf-select
+    ngf-change="partyUpload.addImages($files)"
+    ngf-drag-over-class="{accept:'dragover', reject:'dragover-err', delay:100}"
+    class="drop-box"
+    ngf-multiple="false"
+    ngf-allow-dir="false"
+    ngf-accept="'image/*'"
+    ngf-drop-available="true"
+    ng-hide="partyUpload.cropImgSrc">
+    <div>Click here to select image</div>
+    <div>
+      <strong>OR</strong>
+    </div>
+    <div>You can also drop image to here</div>
   </div>
 </div>
-- 
2.7.4


From b4401d29dae2418e3e11c4d713258a2cbce5f4c1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:12:52 +0200
Subject: [PATCH 319/412] Step 20.15: Handle file selection

---
 imports/ui/components/partyUpload/partyUpload.js | 25 +++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUpload/partyUpload.js b/imports/ui/components/partyUpload/partyUpload.js
index d4b7c6e..7ad01f9 100644
--- a/imports/ui/components/partyUpload/partyUpload.js
+++ b/imports/ui/components/partyUpload/partyUpload.js
@@ -6,7 +6,30 @@ import { Meteor } from 'meteor/meteor';
 
 import template from './partyUpload.html';
 
-class PartyUpload {}
+class PartyUpload {
+  constructor($scope, $reactive) {
+    'ngInject';
+
+    $reactive(this).attach($scope);
+  }
+
+  addImages(files) {
+    if (files.length) {
+      this.currentFile = files[0];
+
+      const reader = new FileReader;
+
+      reader.onload = this.$bindToContext((e) => {
+        this.cropImgSrc = e.target.result;
+        this.myCroppedImage = '';
+      });
+
+      reader.readAsDataURL(files[0]);
+    } else {
+      this.cropImgSrc = undefined;
+    }
+  }
+}
 
 const name = 'partyUpload';
 
-- 
2.7.4


From 48de3226c55118c1ac25c657b7029837e6e00e61 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:15:21 +0200
Subject: [PATCH 320/412] Step 20.16: Add style

---
 imports/ui/components/partyUpload/partyUpload.less | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)
 create mode 100644 imports/ui/components/partyUpload/partyUpload.less

diff --git a/imports/ui/components/partyUpload/partyUpload.less b/imports/ui/components/partyUpload/partyUpload.less
new file mode 100644
index 0000000..987a853
--- /dev/null
+++ b/imports/ui/components/partyUpload/partyUpload.less
@@ -0,0 +1,16 @@
+party-upload {
+  .drop-box {
+    background: #F8F8F8;
+    border: 5px dashed #DDD;
+    text-align: center;
+    padding: 25px;
+    margin-left: 10px;
+    margin-bottom: 20px;
+  }
+  .drop-box.dragover {
+    border: 5px dashed blue;
+  }
+  .drop-box.dragover-err {
+    border: 5px dashed red;
+  }
+}
-- 
2.7.4


From fc8bf8866030b1c53f48e44849465f3976e138a7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:15:42 +0200
Subject: [PATCH 321/412] Step 20.17: Import in PartyAdd

---
 imports/ui/components/partyAdd/partyAdd.less | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 imports/ui/components/partyAdd/partyAdd.less

diff --git a/imports/ui/components/partyAdd/partyAdd.less b/imports/ui/components/partyAdd/partyAdd.less
new file mode 100644
index 0000000..18bfd78
--- /dev/null
+++ b/imports/ui/components/partyAdd/partyAdd.less
@@ -0,0 +1 @@
+@import "../partyUpload/partyUpload.less";
-- 
2.7.4


From ffb0b64056d6d767e2817ce8317cfc5358bf3653 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:16:18 +0200
Subject: [PATCH 322/412] Step 20.18: Import in PartyAddButton

---
 imports/ui/components/partyAddButton/partyAddButton.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/partyAddButton/partyAddButton.less b/imports/ui/components/partyAddButton/partyAddButton.less
index 73828f6..1b95052 100644
--- a/imports/ui/components/partyAddButton/partyAddButton.less
+++ b/imports/ui/components/partyAddButton/partyAddButton.less
@@ -5,3 +5,4 @@ party-add-button {
     bottom: 15px;
   }
 }
+@import "../partyAdd/partyAdd.less";
-- 
2.7.4


From 0481dc1b05f2781ef8cf9e69d7ef956526a402d5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:17:27 +0200
Subject: [PATCH 323/412] Step 20.19: Install `ng-img-crop`

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 0484324..1ebcbea 100644
--- a/package.json
+++ b/package.json
@@ -19,6 +19,7 @@
     "gm": "^1.22.0",
     "meteor-node-stubs": "~0.2.0",
     "ng-file-upload": "^12.0.4",
+    "ng-img-crop": "^0.2.0",
     "underscore": "^1.8.3"
   },
   "devDependencies": {
-- 
2.7.4


From 2eb5c44c173baac0e5582fad8157fde635a3976c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:27:50 +0200
Subject: [PATCH 324/412] Step 20.20: Add ngImgCrop

---
 imports/ui/components/partyUpload/partyUpload.js | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUpload/partyUpload.js b/imports/ui/components/partyUpload/partyUpload.js
index 7ad01f9..94f2de1 100644
--- a/imports/ui/components/partyUpload/partyUpload.js
+++ b/imports/ui/components/partyUpload/partyUpload.js
@@ -1,6 +1,9 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 import ngFileUpload from 'ng-file-upload';
+import 'ng-img-crop/compile/minified/ng-img-crop';
+import 'ng-img-crop/compile/minified/ng-img-crop.css';
+
 
 import { Meteor } from 'meteor/meteor';
 
@@ -36,7 +39,8 @@ const name = 'partyUpload';
 // create a module
 export default angular.module(name, [
   angularMeteor,
-  ngFileUpload
+  ngFileUpload,
+  'ngImgCrop'
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 40017c884f6fc563dfb5ef9235a0803eb2c014f1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:31:51 +0200
Subject: [PATCH 325/412] Step 20.21: Use ngImgCrop

---
 imports/ui/components/partyUpload/partyUpload.html | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/imports/ui/components/partyUpload/partyUpload.html b/imports/ui/components/partyUpload/partyUpload.html
index 70e5af3..2dd38e9 100644
--- a/imports/ui/components/partyUpload/partyUpload.html
+++ b/imports/ui/components/partyUpload/partyUpload.html
@@ -15,4 +15,18 @@
     </div>
     <div>You can also drop image to here</div>
   </div>
+  <div ng-show="partyUpload.cropImgSrc" layout="column" class="ng-crop">
+    <div>
+      <h3>Edit &amp; crop</h3>
+      <md-button ng-click="partyUpload.save()" class="md-primary">
+        Save Image
+      </md-button>
+      <md-button ng-click="partyUpload.reset()">
+        Cancel
+      </md-button>
+    </div>
+    <div class="ng-crop-container">
+      <img-crop image="partyUpload.cropImgSrc" result-image="partyUpload.myCroppedImage" area-type="square"></img-crop>
+    </div>
+  </div>
 </div>
-- 
2.7.4


From fc33e761fabd5773dd270d9fa2fd3110614113b2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 13:32:11 +0200
Subject: [PATCH 326/412] Step 20.22: Add styles

---
 imports/ui/components/partyUpload/partyUpload.less | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/imports/ui/components/partyUpload/partyUpload.less b/imports/ui/components/partyUpload/partyUpload.less
index 987a853..645cee2 100644
--- a/imports/ui/components/partyUpload/partyUpload.less
+++ b/imports/ui/components/partyUpload/partyUpload.less
@@ -13,4 +13,13 @@ party-upload {
   .drop-box.dragover-err {
     border: 5px dashed red;
   }
+  .ng-crop {
+    h3 {
+      margin-top: 0;
+    }
+  }
+  .ng-crop-container {
+    width: 400px;
+    height: 225px;
+  }
 }
-- 
2.7.4


From 2660eada6ba7c19a4dd1e8ec87c189a5ab0b3815 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:02:41 +0200
Subject: [PATCH 327/412] Step 20.23: Add dataURLToBlob helper

---
 imports/api/images/helpers.js | 31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)
 create mode 100644 imports/api/images/helpers.js

diff --git a/imports/api/images/helpers.js b/imports/api/images/helpers.js
new file mode 100644
index 0000000..23f1350
--- /dev/null
+++ b/imports/api/images/helpers.js
@@ -0,0 +1,31 @@
+/**
+ * Converts DataURL to Blob object
+ *
+ * https://github.com/ebidel/filer.js/blob/master/src/filer.js#L137
+ *
+ * @param  {String} dataURL
+ * @return {Blob}
+ */
+export function dataURLToBlob(dataURL) {
+    const BASE64_MARKER = ';base64,';
+
+    if (dataURL.indexOf(BASE64_MARKER) === -1) {
+      const parts = dataURL.split(',');
+      const contentType = parts[0].split(':')[1];
+      const raw = decodeURIComponent(parts[1]);
+
+      return new Blob([raw], {type: contentType});
+    }
+
+    const parts = dataURL.split(BASE64_MARKER);
+    const contentType = parts[0].split(':')[1];
+    const raw = window.atob(parts[1]);
+    const rawLength = raw.length;
+    const uInt8Array = new Uint8Array(rawLength);
+
+    for (let i = 0; i < rawLength; ++i) {
+      uInt8Array[i] = raw.charCodeAt(i);
+    }
+
+    return new Blob([uInt8Array], {type: contentType});
+}
-- 
2.7.4


From 655c009baed1f208f6f104fab09d427f654961ea Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:05:04 +0200
Subject: [PATCH 328/412] Step 20.24: Add blobToArrayBuffer helper

---
 imports/api/images/helpers.js | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/imports/api/images/helpers.js b/imports/api/images/helpers.js
index 23f1350..448f932 100644
--- a/imports/api/images/helpers.js
+++ b/imports/api/images/helpers.js
@@ -29,3 +29,26 @@ export function dataURLToBlob(dataURL) {
 
     return new Blob([uInt8Array], {type: contentType});
 }
+
+/**
+ * Converts Blob object to ArrayBuffer
+ *
+ * @param  {Blob}       blob          Source file
+ * @param  {Function}   callback      Success callback with converted object as a first argument
+ * @param  {Function}   errorCallback Error callback with error as a first argument
+ */
+export function blobToArrayBuffer(blob, callback, errorCallback) {
+  const reader = new FileReader();
+
+  reader.onload = (e) => {
+    callback(e.target.result);
+  };
+
+  reader.onerror = (e) => {
+    if (errorCallback) {
+      errorCallback(e);
+    }
+  };
+
+  reader.readAsArrayBuffer(blob);
+}
-- 
2.7.4


From b3329bf6d57bbf0ab039903ed8263779d525f3e6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:08:29 +0200
Subject: [PATCH 329/412] Step 20.25: Create `upload` method

---
 imports/api/images/methods.js | 33 +++++++++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)
 create mode 100644 imports/api/images/methods.js

diff --git a/imports/api/images/methods.js b/imports/api/images/methods.js
new file mode 100644
index 0000000..e634901
--- /dev/null
+++ b/imports/api/images/methods.js
@@ -0,0 +1,33 @@
+import { UploadFS } from 'meteor/jalik:ufs';
+import { ImagesStore } from './store';
+import { dataURLToBlob, blobToArrayBuffer } from './helpers';
+
+/**
+ * Uploads a new file
+ *
+ * @param  {String}   dataUrl [description]
+ * @param  {String}   name    [description]
+ * @param  {Function} resolve [description]
+ * @param  {Function} reject  [description]
+ */
+export function upload(dataUrl, name, resolve, reject) {
+  // convert to Blob
+  const blob = dataURLToBlob(dataUrl);
+  blob.name = name;
+
+  // pick from an object only: name, type and size
+  const file = _.pick(blob, 'name', 'type', 'size');
+
+  // convert to ArrayBuffer
+  blobToArrayBuffer(blob, (data) => {
+    const upload = new UploadFS.Uploader({
+      data,
+      file,
+      store: ImagesStore,
+      onError: reject,
+      onComplete: resolve
+    });
+
+    upload.start();
+  }, reject);
+}
-- 
2.7.4


From 1c6ece62c873a2933d80df1ad6cfb4169227eafa Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:08:56 +0200
Subject: [PATCH 330/412] Step 20.26: Export methods

---
 imports/api/images/index.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/api/images/index.js b/imports/api/images/index.js
index 9c18361..74293fe 100644
--- a/imports/api/images/index.js
+++ b/imports/api/images/index.js
@@ -1,2 +1,3 @@
 export * from './collection';
 export * from './store';
+export * from './methods';
-- 
2.7.4


From ba8465b3278f4aa758121b48065c70ebdce41081 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:15:15 +0200
Subject: [PATCH 331/412] Step 20.27: Implement `save` and `reset` methods

---
 imports/ui/components/partyUpload/partyUpload.js | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/imports/ui/components/partyUpload/partyUpload.js b/imports/ui/components/partyUpload/partyUpload.js
index 94f2de1..7dd2bd1 100644
--- a/imports/ui/components/partyUpload/partyUpload.js
+++ b/imports/ui/components/partyUpload/partyUpload.js
@@ -8,12 +8,15 @@ import 'ng-img-crop/compile/minified/ng-img-crop.css';
 import { Meteor } from 'meteor/meteor';
 
 import template from './partyUpload.html';
+import { upload } from '../../../api/images';
 
 class PartyUpload {
   constructor($scope, $reactive) {
     'ngInject';
 
     $reactive(this).attach($scope);
+
+    this.uploaded = [];
   }
 
   addImages(files) {
@@ -32,6 +35,20 @@ class PartyUpload {
       this.cropImgSrc = undefined;
     }
   }
+
+  save() {
+    upload(this.myCroppedImage, this.currentFile.name, this.$bindToContext((file) => {
+      this.uploaded.push(file);
+      this.reset();
+    }), (e) => {
+      console.log('Oops, something went wrong', e);
+    });
+  }
+
+  reset() {
+    this.cropImgSrc = undefined;
+    this.myCroppedImage = '';
+  }
 }
 
 const name = 'partyUpload';
-- 
2.7.4


From a009e043eb337ab73fdf9c46e9bca2702e10f403 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:16:03 +0200
Subject: [PATCH 332/412] Step 20.28: Import Images on server side

---
 server/main.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/server/main.js b/server/main.js
index 1acdc6c..2b47936 100644
--- a/server/main.js
+++ b/server/main.js
@@ -1,3 +1,4 @@
 import '../imports/startup/fixtures';
 import '../imports/api/parties';
 import '../imports/api/users';
+import '../imports/api/images';
-- 
2.7.4


From f4435b7114e148d795267b2a40003801eccf4385 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:21:33 +0200
Subject: [PATCH 333/412] Step 20.29: Display uploaded images

---
 imports/ui/components/partyUpload/partyUpload.html | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/imports/ui/components/partyUpload/partyUpload.html b/imports/ui/components/partyUpload/partyUpload.html
index 2dd38e9..124bfdb 100644
--- a/imports/ui/components/partyUpload/partyUpload.html
+++ b/imports/ui/components/partyUpload/partyUpload.html
@@ -29,4 +29,9 @@
       <img-crop image="partyUpload.cropImgSrc" result-image="partyUpload.myCroppedImage" area-type="square"></img-crop>
     </div>
   </div>
+  <div layout="row" class="images-container-title">
+    <div class="party-image-container" ng-class="{'main-image': $index === 0}" ng-repeat="thumb in partyUpload.thumbs">
+      <img ng-src="{{ thumb.url }}"/>
+    </div>
+  </div>
 </div>
-- 
2.7.4


From 02763b604d2f1ee4b477597405a57c564d39cbc5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:22:36 +0200
Subject: [PATCH 334/412] Step 20.30: Add styles

---
 imports/ui/components/partyUpload/partyUpload.less | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/imports/ui/components/partyUpload/partyUpload.less b/imports/ui/components/partyUpload/partyUpload.less
index 645cee2..f781c1c 100644
--- a/imports/ui/components/partyUpload/partyUpload.less
+++ b/imports/ui/components/partyUpload/partyUpload.less
@@ -22,4 +22,20 @@ party-upload {
     width: 400px;
     height: 225px;
   }
+  .images-container-title {
+    padding-bottom: 30px;
+  }
+  .party-image-container {
+    position: relative;
+    margin-right: 10px;
+    max-height: 200px;
+    max-width: 200px;
+    img {
+      max-height: 100%;
+      max-width: 100%;
+    }
+  }
+  .main-image {
+    border: 2px solid #ddd;
+  }
 }
-- 
2.7.4


From c64ce02deb572982c88ed0671fc465dcf63a7db1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:24:09 +0200
Subject: [PATCH 335/412] Step 20.31: Add `thumbs` and `images` publications

---
 imports/api/images/publish.js | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)
 create mode 100644 imports/api/images/publish.js

diff --git a/imports/api/images/publish.js b/imports/api/images/publish.js
new file mode 100644
index 0000000..5949c72
--- /dev/null
+++ b/imports/api/images/publish.js
@@ -0,0 +1,17 @@
+import { Meteor } from 'meteor/meteor';
+import { Thumbs, Images } from './collection';
+
+if (Meteor.isServer) {
+  Meteor.publish('thumbs', function(ids) {
+    return Thumbs.find({
+      originalStore: 'images',
+      originalId: {
+        $in: ids
+      }
+    });
+  });
+
+  Meteor.publish('images', function() {
+    return Images.find({});
+  });
+}
-- 
2.7.4


From ea34277bf24a08cceb589c6ba6a0af12428adfd6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:24:36 +0200
Subject: [PATCH 336/412] Step 20.32: Import publications

---
 imports/api/images/index.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/api/images/index.js b/imports/api/images/index.js
index 74293fe..57692b3 100644
--- a/imports/api/images/index.js
+++ b/imports/api/images/index.js
@@ -1,3 +1,4 @@
+import './publish';
 export * from './collection';
 export * from './store';
 export * from './methods';
-- 
2.7.4


From 839f358f6ca1880f38345cd758f24564525e95ce Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:29:08 +0200
Subject: [PATCH 337/412] Step 20.33: Implement thumbnails

---
 imports/ui/components/partyUpload/partyUpload.js | 23 ++++++++++++++++++++++-
 1 file changed, 22 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUpload/partyUpload.js b/imports/ui/components/partyUpload/partyUpload.js
index 7dd2bd1..100b85a 100644
--- a/imports/ui/components/partyUpload/partyUpload.js
+++ b/imports/ui/components/partyUpload/partyUpload.js
@@ -8,7 +8,7 @@ import 'ng-img-crop/compile/minified/ng-img-crop.css';
 import { Meteor } from 'meteor/meteor';
 
 import template from './partyUpload.html';
-import { upload } from '../../../api/images';
+import { Thumbs, upload } from '../../../api/images';
 
 class PartyUpload {
   constructor($scope, $reactive) {
@@ -17,6 +17,21 @@ class PartyUpload {
     $reactive(this).attach($scope);
 
     this.uploaded = [];
+
+    this.subscribe('thumbs', () => [
+      this.getReactively('files', true) || []
+    ]);
+
+    this.helpers({
+      thumbs() {
+        return Thumbs.find({
+          originalStore: 'images',
+          originalId: {
+            $in: this.getReactively('files', true) || []
+          }
+        });
+      }
+    });
   }
 
   addImages(files) {
@@ -39,6 +54,12 @@ class PartyUpload {
   save() {
     upload(this.myCroppedImage, this.currentFile.name, this.$bindToContext((file) => {
       this.uploaded.push(file);
+
+      if (!this.files || !this.files.length) {
+        this.files = [];
+      }
+      this.files.push(file._id);
+
       this.reset();
     }), (e) => {
       console.log('Oops, something went wrong', e);
-- 
2.7.4


From 8ed9160e1c87cbe3d371cdb871e10f414e2b3d43 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:32:41 +0200
Subject: [PATCH 338/412] Step 20.34: Install `angular-sortable-view`

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 1ebcbea..ffe3f6d 100644
--- a/package.json
+++ b/package.json
@@ -15,6 +15,7 @@
     "angular-meteor": "^1.3.9",
     "angular-ui-router": "^0.2.18",
     "angular-simple-logger": "^0.1.7",
+    "angular-sortable-view": "0.0.15",
     "angular-utils-pagination": "^0.11.1",
     "gm": "^1.22.0",
     "meteor-node-stubs": "~0.2.0",
-- 
2.7.4


From 96c1b544801cb8b865359f05342358685afca8a1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:33:09 +0200
Subject: [PATCH 339/412] Step 20.35: Add as a dependency

---
 imports/ui/components/partyUpload/partyUpload.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUpload/partyUpload.js b/imports/ui/components/partyUpload/partyUpload.js
index 100b85a..237ac4d 100644
--- a/imports/ui/components/partyUpload/partyUpload.js
+++ b/imports/ui/components/partyUpload/partyUpload.js
@@ -1,6 +1,7 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 import ngFileUpload from 'ng-file-upload';
+import 'angular-sortable-view';
 import 'ng-img-crop/compile/minified/ng-img-crop';
 import 'ng-img-crop/compile/minified/ng-img-crop.css';
 
@@ -78,7 +79,8 @@ const name = 'partyUpload';
 export default angular.module(name, [
   angularMeteor,
   ngFileUpload,
-  'ngImgCrop'
+  'ngImgCrop',
+  'angular-sortable-view'
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 1126b1f304ad8edb5c5ba350cadc812547765130 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 14:33:31 +0200
Subject: [PATCH 340/412] Step 20.36: Use directives on thumbnails

---
 imports/ui/components/partyUpload/partyUpload.html | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/imports/ui/components/partyUpload/partyUpload.html b/imports/ui/components/partyUpload/partyUpload.html
index 124bfdb..14a3704 100644
--- a/imports/ui/components/partyUpload/partyUpload.html
+++ b/imports/ui/components/partyUpload/partyUpload.html
@@ -29,9 +29,9 @@
       <img-crop image="partyUpload.cropImgSrc" result-image="partyUpload.myCroppedImage" area-type="square"></img-crop>
     </div>
   </div>
-  <div layout="row" class="images-container-title">
-    <div class="party-image-container" ng-class="{'main-image': $index === 0}" ng-repeat="thumb in partyUpload.thumbs">
-      <img ng-src="{{ thumb.url }}"/>
+  <div layout="row" class="images-container-title" sv-root sv-part="partyUpload.thumbs">
+    <div sv-element class="party-image-container" ng-class="{'main-image': $index === 0}" ng-repeat="thumb in partyUpload.thumbs">
+      <img draggable="false" ng-src="{{ thumb.url }}"/>
     </div>
   </div>
 </div>
-- 
2.7.4


From 14e48286e1c4cb1b9ec5c84f6350df32a7ef1584 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 15:33:07 +0200
Subject: [PATCH 341/412] Step 20.37: Define two-way data binding `files`

---
 imports/ui/components/partyUpload/partyUpload.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/partyUpload/partyUpload.js b/imports/ui/components/partyUpload/partyUpload.js
index 237ac4d..400368e 100644
--- a/imports/ui/components/partyUpload/partyUpload.js
+++ b/imports/ui/components/partyUpload/partyUpload.js
@@ -83,6 +83,9 @@ export default angular.module(name, [
   'angular-sortable-view'
 ]).component(name, {
   template,
+  bindings: {
+    files: '=?'
+  },
   controllerAs: name,
   controller: PartyUpload
 });
-- 
2.7.4


From 7a9df5320719238f2efadb87e18e7ec40d2d38dc Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 15:33:24 +0200
Subject: [PATCH 342/412] Step 20.38: Create view for PartyImage

---
 imports/ui/components/partyImage/partyImage.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 imports/ui/components/partyImage/partyImage.html

diff --git a/imports/ui/components/partyImage/partyImage.html b/imports/ui/components/partyImage/partyImage.html
new file mode 100644
index 0000000..719c4a3
--- /dev/null
+++ b/imports/ui/components/partyImage/partyImage.html
@@ -0,0 +1 @@
+<img ng-src="{{partyImage.mainImage.url}}"/>
-- 
2.7.4


From 8a221230bca7bc241fd2405b236cd7bee918fd90 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 15:33:39 +0200
Subject: [PATCH 343/412] Step 20.39: Create PartyImage component

---
 imports/ui/components/partyImage/partyImage.js | 37 ++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)
 create mode 100644 imports/ui/components/partyImage/partyImage.js

diff --git a/imports/ui/components/partyImage/partyImage.js b/imports/ui/components/partyImage/partyImage.js
new file mode 100644
index 0000000..5b636b8
--- /dev/null
+++ b/imports/ui/components/partyImage/partyImage.js
@@ -0,0 +1,37 @@
+import angular from 'angular';
+import angularMeteor from 'angular-meteor';
+
+import template from './partyImage.html';
+import { Images } from '../../../api/images';
+
+class PartyImage {
+  constructor($scope, $reactive) {
+    'ngInject';
+    $reactive(this).attach($scope);
+
+    this.helpers({
+      mainImage() {
+        const images = this.getReactively('images', true);
+        if (images) {
+          return Images.findOne({
+            _id: images[0]
+          });
+        }
+      }
+    });
+  }
+}
+
+const name = 'partyImage';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  bindings: {
+    images: '<'
+  },
+  controllerAs: name,
+  controller: PartyImage
+});
-- 
2.7.4


From 2f07a29cc57de2aab367beb1796cf18a61fe8c16 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 15:33:58 +0200
Subject: [PATCH 344/412] Step 20.40: Implement PartyImage in PartiesList

---
 imports/ui/components/partiesList/partiesList.html | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
index 12987b3..de5d229 100644
--- a/imports/ui/components/partiesList/partiesList.html
+++ b/imports/ui/components/partiesList/partiesList.html
@@ -25,6 +25,11 @@
             </span>
             <span class="md-subhead">{{party.description}}</span>
           </md-card-title-text>
+          <md-card-title-media ng-if="party.images">
+            <div class="md-media-lg card-media">
+              <party-image images="party.images"></party-image>
+            </div>
+          </md-card-title-media>
         </md-card-title>
         <md-card-content>
           <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
-- 
2.7.4


From eb5580a319890f54b5431cc78d8d8facf435dd5a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Wed, 13 Apr 2016 15:34:24 +0200
Subject: [PATCH 345/412] Step 20.41: Add PartyImage to PartiesList and
 subscribe to `images`

---
 imports/ui/components/partiesList/partiesList.js | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 17996c3..9e90e1f 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -14,6 +14,7 @@ import { name as PartyRemove } from '../partyRemove/partyRemove';
 import { name as PartyCreator } from '../partyCreator/partyCreator';
 import { name as PartyRsvp } from '../partyRsvp/partyRsvp';
 import { name as PartyRsvpsList } from '../partyRsvpsList/partyRsvpsList';
+import { name as PartyImage } from '../partyImage/partyImage';
 
 class PartiesList {
   constructor($scope, $reactive) {
@@ -36,6 +37,7 @@ class PartiesList {
     ]);
 
     this.subscribe('users');
+    this.subscribe('images');
 
     this.helpers({
       parties() {
@@ -81,7 +83,8 @@ export default angular.module(name, [
   PartyRemove,
   PartyCreator,
   PartyRsvp,
-  PartyRsvpsList
+  PartyRsvpsList,
+  PartyImage
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 8eab702051616cd371a9668fc8c2c6fa73aa17f9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 20:41:02 +0200
Subject: [PATCH 346/412] Step 21.1: Add mobile platform

---
 .meteor/platforms | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/.meteor/platforms b/.meteor/platforms
index efeba1b..0b0ddcc 100644
--- a/.meteor/platforms
+++ b/.meteor/platforms
@@ -1,2 +1,3 @@
-server
+android
 browser
+server
-- 
2.7.4


From e09a8724f0a2fadc998076678b9f19c69fff4491 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 20:43:34 +0200
Subject: [PATCH 347/412] Step 21.2: Move login.html to web.html

---
 imports/ui/components/login/web.html | 70 ++++++++++++++++++++++++++++++++++++
 1 file changed, 70 insertions(+)
 create mode 100644 imports/ui/components/login/web.html

diff --git a/imports/ui/components/login/web.html b/imports/ui/components/login/web.html
new file mode 100644
index 0000000..1ac5b6f
--- /dev/null
+++ b/imports/ui/components/login/web.html
@@ -0,0 +1,70 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary md-tall" layout="column" layout-align="end" layout-fill>
+      <div layout="row" class="md-toolbar-tools md-toolbar-tools-bottom">
+        <h3 class="md-display-1">
+          Sign in
+        </h3>
+      </div>
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2">
+          Use existing account</p>
+      </div>
+
+      <div layout="row" layout-fill layout-margin layout-padding layout-wrap>
+        <md-button class="md-raised">
+          <md-icon md-svg-icon="social:ic_google_24px" style="color: #DC4A38;"></md-icon>
+          <span>Google</span>
+        </md-button>
+        <md-button class="md-raised">
+          <md-icon md-svg-icon="social:ic_facebook_24px" style="color: #3F62B4;"></md-icon>
+          <span>Facebook</span>
+        </md-button>
+        <md-button class="md-raised">
+          <md-icon md-svg-icon="social:ic_twitter_24px" style="color: #27AAE2;"></md-icon>
+          <span>Twitter</span>
+        </md-button>
+      </div>
+      <md-divider class="inset"></md-divider>
+
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2">
+          Sign in with your email</p>
+      </div>
+
+      <form name="loginForm" layout="column" layout-fill layout-padding layout-margin>
+        <md-input-container>
+          <label>
+            Email
+          </label>
+          <input type="text" ng-model="login.credentials.email" aria-label="email" required/>
+        </md-input-container>
+        <md-input-container>
+          <label>
+            Password
+          </label>
+          <input type="password" ng-model="login.credentials.password" aria-label="password" required/>
+        </md-input-container>
+        <div layout="row" layout-align="space-between center">
+          <a class="md-button" href="/password">Forgot password?</a>
+          
+          <md-button class="md-raised md-primary" ng-click="login.login()" aria-label="login" ng-disabled="login.loginForm.$invalid()">Sign In
+          </md-button>
+        </div>
+      </form>
+
+      <md-toolbar ng-show="login.error" class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+        <p class="md-body-1">{{ login.error }}</p>
+      </md-toolbar>
+
+      <md-divider></md-divider>
+
+      <div layout="row" layout-align="center">
+        <a class="md-button" href="/register">Need an account?</a>
+      </div>
+    </div>
+  </md-whiteframe>
+</md-content>
-- 
2.7.4


From d9dd7606a593a760c5fac41660214fb582474847 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 20:45:56 +0200
Subject: [PATCH 348/412] Step 21.3: Add mobile view

---
 imports/ui/components/login/mobile.html | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)
 create mode 100644 imports/ui/components/login/mobile.html

diff --git a/imports/ui/components/login/mobile.html b/imports/ui/components/login/mobile.html
new file mode 100644
index 0000000..112ba9e
--- /dev/null
+++ b/imports/ui/components/login/mobile.html
@@ -0,0 +1,27 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <!-- header -->
+    <md-toolbar class="md-primary md-tall" layout="column" layout-align="end" layout-fill>
+      <div layout="row" class="md-toolbar-tools md-toolbar-tools-bottom">
+        <h3 class="md-display-1">
+          Login
+        </h3>
+      </div>
+    </md-toolbar>
+
+    <!-- content -->
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <!-- display an error -->
+      <md-toolbar ng-show="login.error" class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+        <p class="md-body-1">{{ login.error }}</p>
+      </md-toolbar>
+
+      <md-divider></md-divider>
+
+      <!-- other actions -->
+      <div layout="row" layout-align="center">
+        <a class="md-button" href="/password">Forgot password?</a>
+      </div>
+    </div>
+  </md-whiteframe>
+</md-content>
-- 
2.7.4


From 8cd2fd1f68715a02d47d37076438f2b82443a0ed Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 20:47:15 +0200
Subject: [PATCH 349/412] Step 21.4: Move Login class to web.js

---
 imports/ui/components/login/web.js | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)
 create mode 100644 imports/ui/components/login/web.js

diff --git a/imports/ui/components/login/web.js b/imports/ui/components/login/web.js
new file mode 100644
index 0000000..bc7b752
--- /dev/null
+++ b/imports/ui/components/login/web.js
@@ -0,0 +1,30 @@
+import { Meteor } from 'meteor/meteor';
+
+export class Login {
+  constructor($scope, $reactive, $state) {
+    'ngInject';
+
+    this.$state = $state;
+
+    $reactive(this).attach($scope);
+
+    this.credentials = {
+      email: '',
+      password: ''
+    };
+
+    this.error = '';
+  }
+
+  login() {
+    Meteor.loginWithPassword(this.credentials.email, this.credentials.password,
+      this.$bindToContext((err) => {
+        if (err) {
+          this.error = err;
+        } else {
+          this.$state.go('parties');
+        }
+      })
+    );
+  }
+}
-- 
2.7.4


From 7b72a02ea9f9d1efb94e76e0f5106bdc2b84a4ca Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 20:48:39 +0200
Subject: [PATCH 350/412] Step 21.5: Create controller for mobile

---
 imports/ui/components/login/mobile.js | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 imports/ui/components/login/mobile.js

diff --git a/imports/ui/components/login/mobile.js b/imports/ui/components/login/mobile.js
new file mode 100644
index 0000000..792f38c
--- /dev/null
+++ b/imports/ui/components/login/mobile.js
@@ -0,0 +1 @@
+export class Login {}
-- 
2.7.4


From 9d893c50d5863a8b884ad45bea6e865942647eb0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 20:49:48 +0200
Subject: [PATCH 351/412] Step 21.6: Refactor login.js

---
 imports/ui/components/login/login.js | 42 +++++++-----------------------------
 1 file changed, 8 insertions(+), 34 deletions(-)

diff --git a/imports/ui/components/login/login.js b/imports/ui/components/login/login.js
index 4ae9c9e..376fcaf 100644
--- a/imports/ui/components/login/login.js
+++ b/imports/ui/components/login/login.js
@@ -4,40 +4,14 @@ import uiRouter from 'angular-ui-router';
 
 import { Meteor } from 'meteor/meteor';
 
-import template from './login.html';
-
-import { name as Register } from '../register/register';
-
-class Login {
-  constructor($scope, $reactive, $state) {
-    'ngInject';
-
-    this.$state = $state;
-
-    $reactive(this).attach($scope);
-
-    this.credentials = {
-      email: '',
-      password: ''
-    };
-
-    this.error = '';
-  }
-
-  login() {
-    Meteor.loginWithPassword(this.credentials.email, this.credentials.password,
-      this.$bindToContext((err) => {
-        if (err) {
-          this.error = err;
-        } else {
-          this.$state.go('parties');
-        }
-      })
-    );
-  }
-}
+import webTemplate from './web.html';
+import { Login as LoginWeb } from './web';
+import mobileTemplate from './mobile.html';
+import { Login as LoginMobile } from './mobile';
 
 const name = 'login';
+const template = Meteor.isCordova ? mobileTemplate : webTemplate;
+const controller = Meteor.isCordova ? LoginMobile : LoginWeb;
 
 // create a module
 export default angular.module(name, [
@@ -46,8 +20,8 @@ export default angular.module(name, [
 ])
   .component(name, {
     template,
-    controllerAs: name,
-    controller: Login
+    controller,
+    controllerAs: name
   })
   .config(config);
 
-- 
2.7.4


From ea74b853bc4e77298fd7b6ab2fff54fba1db9b2b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 20:50:03 +0200
Subject: [PATCH 352/412] Step 21.7: Remove login.html

---
 imports/ui/components/login/login.html | 72 ----------------------------------
 imports/ui/components/login/web.html   |  6 +--
 2 files changed, 3 insertions(+), 75 deletions(-)
 delete mode 100644 imports/ui/components/login/login.html

diff --git a/imports/ui/components/login/login.html b/imports/ui/components/login/login.html
deleted file mode 100644
index feb3443..0000000
--- a/imports/ui/components/login/login.html
+++ /dev/null
@@ -1,72 +0,0 @@
-<md-content layout="row" layout-align="center start" layout-fill layout-margin>
-
-  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
-
-    <md-toolbar class="md-primary md-tall" layout="column" layout-align="end" layout-fill>
-      <div layout="row" class="md-toolbar-tools md-toolbar-tools-bottom">
-        <h3 class="md-display-1">
-          Sign in
-        </h3>
-      </div>
-    </md-toolbar>
-
-    <div layout="column" layout-fill layout-margin layout-padding>
-      <div layout="row" layout-fill layout-margin>
-        <p class="md-body-2">
-          Use existing account</p>
-      </div>
-      <div layout="row" layout-fill layout-margin layout-padding layout-wrap>
-        <md-button class="md-raised">
-          <i class="icon ion-social-google" style="color: #DC4A38; font-size: 24px;"></i>
-          <span>
-            Google</span>
-        </md-button>
-        <md-button class="md-raised">
-          <i class="icon ion-social-facebook" style="color: #3F62B4; font-size: 24px;"></i>
-          <span>Facebook
-          </span>
-        </md-button>
-        <md-button class="md-raised">
-          <i class="icon ion-social-twitter" style="color: #27AAE2; font-size: 24px;"></i>
-          <span>Twitter
-          </span>
-        </md-button>
-      </div>
-      <md-divider class="inset"></md-divider>
-
-      <div layout="row" layout-fill layout-margin>
-        <p class="md-body-2">
-          Sign in with your email</p>
-      </div>
-
-      <form name="loginForm" layout="column" layout-fill layout-padding layout-margin>
-        <md-input-container>
-          <label>
-            Email
-          </label>
-          <input type="text" ng-model="login.credentials.email" aria-label="email" required/>
-        </md-input-container>
-        <md-input-container>
-          <label>
-            Password
-          </label>
-          <input type="password" ng-model="login.credentials.password" aria-label="password" required/>
-        </md-input-container>
-        <div layout="row" layout-align="space-between center">
-          <a class="md-button" href="/password">Forgot password?</a>
-          <md-button class="md-raised md-primary" ng-click="login.login()" aria-label="login" ng-disabled="login.loginForm.$invalid()">Sign In
-          </md-button>
-        </div>
-      </form>
-      <md-toolbar ng-show="login.error" class="md-warn" layout="row" layout-fill layout-padding layout-margin>
-        <p class="md-body-1">{{ login.error }}</p>
-      </md-toolbar>
-      <md-divider></md-divider>
-      <div layout="row" layout-align="center">
-        <a class="md-button" href="/register">Need an account?</a>
-      </div>
-
-    </div>
-
-  </md-whiteframe>
-</md-content>
diff --git a/imports/ui/components/login/web.html b/imports/ui/components/login/web.html
index 1ac5b6f..af84461 100644
--- a/imports/ui/components/login/web.html
+++ b/imports/ui/components/login/web.html
@@ -16,15 +16,15 @@
 
       <div layout="row" layout-fill layout-margin layout-padding layout-wrap>
         <md-button class="md-raised">
-          <md-icon md-svg-icon="social:ic_google_24px" style="color: #DC4A38;"></md-icon>
+          <i class="icon ion-social-google" style="color: #DC4A38; font-size: 24px;"></i>
           <span>Google</span>
         </md-button>
         <md-button class="md-raised">
-          <md-icon md-svg-icon="social:ic_facebook_24px" style="color: #3F62B4;"></md-icon>
+          <i class="icon ion-social-facebook" style="color: #3F62B4; font-size: 24px;"></i>
           <span>Facebook</span>
         </md-button>
         <md-button class="md-raised">
-          <md-icon md-svg-icon="social:ic_twitter_24px" style="color: #27AAE2;"></md-icon>
+          <i class="icon ion-social-twitter" style="color: #27AAE2; font-size: 24px;"></i>
           <span>Twitter</span>
         </md-button>
       </div>
-- 
2.7.4


From e6bd86d851cb3bcac2616a170e40db49d1e44488 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 20:52:54 +0200
Subject: [PATCH 353/412] Step 21.8: Add `okland:accounts-phone`

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index dab7905..2f0738e 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -32,3 +32,4 @@ planettraining:material-design-icons
 pagebakers:ionicons
 jalik:ufs
 jalik:ufs-gridfs
+mys:accounts-phone
diff --git a/.meteor/versions b/.meteor/versions
index a60ade0..c58233f 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -61,6 +61,7 @@ modules@0.7.6_1
 modules-runtime@0.7.6_1
 mongo@1.1.12_5
 mongo-id@1.0.5
+mys:accounts-phone@0.0.21
 npm-bcrypt@0.9.1_1
 npm-mongo@2.2.10_1
 oauth@1.1.11
-- 
2.7.4


From 5c9f0e6312d1944df7fff319f2eb3fd81f79afbd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 20:56:24 +0200
Subject: [PATCH 354/412] Step 21.9: Add phone verification method

---
 imports/ui/components/login/mobile.js | 28 +++++++++++++++++++++++++++-
 1 file changed, 27 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/login/mobile.js b/imports/ui/components/login/mobile.js
index 792f38c..c201eb2 100644
--- a/imports/ui/components/login/mobile.js
+++ b/imports/ui/components/login/mobile.js
@@ -1 +1,27 @@
-export class Login {}
+import { Accounts } from 'meteor/accounts-base';
+
+export class Login {
+  constructor($scope, $reactive) {
+    'ngInject';
+
+    $reactive(this).attach($scope);
+
+    this.isStepTwo = false;
+    this.phoneNumber = '';
+    this.verificationCode = '';
+    this.error = '';
+  }
+
+  verifyPhone() {
+    Accounts.requestPhoneVerification(this.phoneNumber, this.$bindToContext((err) => {
+      if (err) {
+        // display also reason of Meteor.Error
+        this.error = err.reason || err;
+      } else {
+        this.error = '';
+        // move to code verification
+        this.isStepTwo = true;
+      }
+    }));
+  }
+}
-- 
2.7.4


From 2f9866d94e1d0800fef97bc9d80feac65431f25e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 20:57:40 +0200
Subject: [PATCH 355/412] Step 21.10: Add phone verification form

---
 imports/ui/components/login/mobile.html | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/login/mobile.html b/imports/ui/components/login/mobile.html
index 112ba9e..0b889a7 100644
--- a/imports/ui/components/login/mobile.html
+++ b/imports/ui/components/login/mobile.html
@@ -4,13 +4,22 @@
     <md-toolbar class="md-primary md-tall" layout="column" layout-align="end" layout-fill>
       <div layout="row" class="md-toolbar-tools md-toolbar-tools-bottom">
         <h3 class="md-display-1">
-          Login
+          Login with SMS
         </h3>
       </div>
     </md-toolbar>
 
     <!-- content -->
     <div layout="column" layout-fill layout-margin layout-padding>
+      <!-- step 1: phone verification -->
+      <form ng-show="!login.isStepTwo" layout="column" layout-fill layout-padding layout-margin>
+        <md-input-container>
+          <input type="text" ng-model="login.phoneNumber" placeholder="phone"/>
+        </md-input-container>
+        <md-button class="md-raised md-primary" ng-click="login.verifyPhone()" aria-label="login" ng-disabled="!login.phoneNumber">Send SMS
+        </md-button>
+      </form>
+      
       <!-- display an error -->
       <md-toolbar ng-show="login.error" class="md-warn" layout="row" layout-fill layout-padding layout-margin>
         <p class="md-body-1">{{ login.error }}</p>
-- 
2.7.4


From 2c3a72de4fecea55e1537dbaaa46b45a683aa992 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 21:00:05 +0200
Subject: [PATCH 356/412] Step 21.11: Add code verification method

---
 imports/ui/components/login/mobile.js | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/login/mobile.js b/imports/ui/components/login/mobile.js
index c201eb2..798d563 100644
--- a/imports/ui/components/login/mobile.js
+++ b/imports/ui/components/login/mobile.js
@@ -1,9 +1,11 @@
 import { Accounts } from 'meteor/accounts-base';
 
 export class Login {
-  constructor($scope, $reactive) {
+  constructor($scope, $reactive, $state) {
     'ngInject';
 
+    this.$state = $state;
+
     $reactive(this).attach($scope);
 
     this.isStepTwo = false;
@@ -24,4 +26,15 @@ export class Login {
       }
     }));
   }
+
+  verifyCode() {
+    Accounts.verifyPhone(this.phoneNumber, this.verificationCode, this.$bindToContext((err) => {
+      if (err) {
+        this.error = err.reason || err;
+      } else {
+        // redirect to parties list
+        this.$state.go('parties');
+      }
+    }));
+  }
 }
-- 
2.7.4


From 1096ed6b27cdbd2c94f87edd3cb1a46b1f0c4d79 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 14 Apr 2016 21:01:13 +0200
Subject: [PATCH 357/412] Step 21.12: Add code verification form

---
 imports/ui/components/login/mobile.html | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/login/mobile.html b/imports/ui/components/login/mobile.html
index 0b889a7..e93c1d5 100644
--- a/imports/ui/components/login/mobile.html
+++ b/imports/ui/components/login/mobile.html
@@ -19,7 +19,15 @@
         <md-button class="md-raised md-primary" ng-click="login.verifyPhone()" aria-label="login" ng-disabled="!login.phoneNumber">Send SMS
         </md-button>
       </form>
-      
+      <!-- step 2: code verification -->
+      <form ng-show="login.isStepTwo" layout="column" layout-fill layout-padding layout-margin>
+        <md-input-container>
+          <input type="text" ng-model="login.verificationCode" placeholder="code"/>
+        </md-input-container>
+        <md-button class="md-raised md-primary" ng-click="login.verifyCode()" aria-label="login" ng-disabled="!login.verificationCode">Verify Code
+        </md-button>
+      </form>
+
       <!-- display an error -->
       <md-toolbar ng-show="login.error" class="md-warn" layout="row" layout-fill layout-padding layout-margin>
         <p class="md-body-1">{{ login.error }}</p>
-- 
2.7.4


From 637720c8d134c465f97f4687506ca0f34d6bfd5f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 10:58:52 +0200
Subject: [PATCH 358/412] Step 22.1: Install `ionic-sdk`

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index ffe3f6d..4c15c16 100644
--- a/package.json
+++ b/package.json
@@ -18,6 +18,7 @@
     "angular-sortable-view": "0.0.15",
     "angular-utils-pagination": "^0.11.1",
     "gm": "^1.22.0",
+    "ionic-sdk": "^1.2.4",
     "meteor-node-stubs": "~0.2.0",
     "ng-file-upload": "^12.0.4",
     "ng-img-crop": "^0.2.0",
-- 
2.7.4


From 2f59b693cfd658e6c983962caa7bff2879139984 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 10:59:31 +0200
Subject: [PATCH 359/412] Step 22.2: Install `angular-sanitize`

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 4c15c16..056163e 100644
--- a/package.json
+++ b/package.json
@@ -14,6 +14,7 @@
     "angular-messages": "^1.5.3",
     "angular-meteor": "^1.3.9",
     "angular-ui-router": "^0.2.18",
+    "angular-sanitize": "^1.5.5",
     "angular-simple-logger": "^0.1.7",
     "angular-sortable-view": "0.0.15",
     "angular-utils-pagination": "^0.11.1",
-- 
2.7.4


From 1d4341e4d70486421f5e57b372161004c5edaca0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 11:08:38 +0200
Subject: [PATCH 360/412] Step 22.3: ngSanitize as a dependency

---
 imports/ui/components/socially/socially.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index 21940eb..ada6751 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -1,6 +1,7 @@
 import angular from 'angular';
 import angularMeteor from 'angular-meteor';
 import ngMaterial from 'angular-material';
+import ngSanitize from 'angular-sanitize';
 import uiRouter from 'angular-ui-router';
 
 import template from './socially.html';
@@ -17,6 +18,7 @@ const name = 'socially';
 export default angular.module(name, [
   angularMeteor,
   ngMaterial,
+  ngSanitize,
   uiRouter,
   PartiesList,
   PartyDetails,
-- 
2.7.4


From a9b30e370d7045537335e2f3358aec08be919e1c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 11:48:44 +0200
Subject: [PATCH 361/412] Step 22.4: Import ionic and add as a dependency

---
 imports/ui/components/socially/socially.js | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index ada6751..f72bc21 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -3,6 +3,8 @@ import angularMeteor from 'angular-meteor';
 import ngMaterial from 'angular-material';
 import ngSanitize from 'angular-sanitize';
 import uiRouter from 'angular-ui-router';
+import 'ionic-sdk/release/js/ionic';
+import 'ionic-sdk/release/js/ionic-angular';
 
 import template from './socially.html';
 import { name as PartiesList } from '../partiesList/partiesList';
@@ -24,7 +26,8 @@ export default angular.module(name, [
   PartyDetails,
   Navigation,
   Auth,
-  'accounts.ui'
+  'accounts.ui',
+  'ionic'
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From 9707a6f39cd2cf988b01bcc78e1a751f8f09cd0d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 11:49:08 +0200
Subject: [PATCH 362/412] Step 22.5: Import ionic styles

---
 imports/ui/components/socially/socially.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index f72bc21..ac7ac39 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -5,6 +5,7 @@ import ngSanitize from 'angular-sanitize';
 import uiRouter from 'angular-ui-router';
 import 'ionic-sdk/release/js/ionic';
 import 'ionic-sdk/release/js/ionic-angular';
+import 'ionic-sdk/release/css/ionic.css';
 
 import template from './socially.html';
 import { name as PartiesList } from '../partiesList/partiesList';
-- 
2.7.4


From fd33cb66869cf4a21a6350b2056eba85bcba8561 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 11:50:26 +0200
Subject: [PATCH 363/412] Step 22.6: Create view of Socially for web

---
 imports/ui/components/socially/web.html | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/ui/components/socially/web.html

diff --git a/imports/ui/components/socially/web.html b/imports/ui/components/socially/web.html
new file mode 100644
index 0000000..7fdb2de
--- /dev/null
+++ b/imports/ui/components/socially/web.html
@@ -0,0 +1,3 @@
+<navigation></navigation>
+
+<div ui-view=""></div>
-- 
2.7.4


From b48603ff124896ed1b231ec209765226fa4a11ee Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 11:51:02 +0200
Subject: [PATCH 364/412] Step 22.7: Create mobile view

---
 imports/ui/components/socially/mobile.html | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/ui/components/socially/mobile.html

diff --git a/imports/ui/components/socially/mobile.html b/imports/ui/components/socially/mobile.html
new file mode 100644
index 0000000..b0de4a9
--- /dev/null
+++ b/imports/ui/components/socially/mobile.html
@@ -0,0 +1,3 @@
+<ion-nav-bar class="bar-positive" align-title="center">
+</ion-nav-bar>
+<ion-nav-view></ion-nav-view>
-- 
2.7.4


From 9be59a891e5c58717f29acbfab1f8185d0761b88 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 11:53:48 +0200
Subject: [PATCH 365/412] Step 22.8: Implement web and mobile views

---
 imports/ui/components/socially/socially.js | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
index ac7ac39..ff140a5 100644
--- a/imports/ui/components/socially/socially.js
+++ b/imports/ui/components/socially/socially.js
@@ -7,7 +7,10 @@ import 'ionic-sdk/release/js/ionic';
 import 'ionic-sdk/release/js/ionic-angular';
 import 'ionic-sdk/release/css/ionic.css';
 
-import template from './socially.html';
+import { Meteor } from 'meteor/meteor';
+
+import webTemplate from './web.html';
+import mobileTemplate from './mobile.html';
 import { name as PartiesList } from '../partiesList/partiesList';
 import { name as PartyDetails } from '../partyDetails/partyDetails';
 import { name as Navigation } from '../navigation/navigation';
@@ -16,6 +19,7 @@ import { name as Auth } from '../auth/auth';
 class Socially {}
 
 const name = 'socially';
+const template = Meteor.isCordova ? mobileTemplate : webTemplate;
 
 // create a module
 export default angular.module(name, [
-- 
2.7.4


From a6eb4e473067633690382cc3ebd83e56d1a84f05 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 15:17:24 +0200
Subject: [PATCH 366/412] Step 22.9: Remove old view

---
 imports/ui/components/socially/socially.html | 3 ---
 1 file changed, 3 deletions(-)
 delete mode 100644 imports/ui/components/socially/socially.html

diff --git a/imports/ui/components/socially/socially.html b/imports/ui/components/socially/socially.html
deleted file mode 100644
index 7fdb2de..0000000
--- a/imports/ui/components/socially/socially.html
+++ /dev/null
@@ -1,3 +0,0 @@
-<navigation></navigation>
-
-<div ui-view=""></div>
-- 
2.7.4


From 0cd0de00182dda4dd3a4912abfcaa4c54553cba5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 15:18:14 +0200
Subject: [PATCH 367/412] Step 22.10: Add title

---
 imports/ui/components/socially/mobile.html | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/components/socially/mobile.html b/imports/ui/components/socially/mobile.html
index b0de4a9..7751a6f 100644
--- a/imports/ui/components/socially/mobile.html
+++ b/imports/ui/components/socially/mobile.html
@@ -1,3 +1,6 @@
 <ion-nav-bar class="bar-positive" align-title="center">
+  <ion-nav-title>
+    Socially
+  </ion-nav-title>
 </ion-nav-bar>
 <ion-nav-view></ion-nav-view>
-- 
2.7.4


From 168cc59b9e41cde85ad99283e89737f61917d986 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 15:19:33 +0200
Subject: [PATCH 368/412] Step 22.11: Create web view of PartiesList

---
 imports/ui/components/partiesList/web.html | 57 ++++++++++++++++++++++++++++++
 1 file changed, 57 insertions(+)
 create mode 100644 imports/ui/components/partiesList/web.html

diff --git a/imports/ui/components/partiesList/web.html b/imports/ui/components/partiesList/web.html
new file mode 100644
index 0000000..de5d229
--- /dev/null
+++ b/imports/ui/components/partiesList/web.html
@@ -0,0 +1,57 @@
+<div layout="column" layout-padding>
+  <party-add-button ng-show="partiesList.isLoggedIn"></party-add-button>
+
+  <div flex>
+    <h2 class="md-display-1">List of the parties:</h2>
+  </div>
+
+  <div flex layout="row" layout-padding>
+    <md-input-container>
+      <label>Search</label>
+      <input ng-model="partiesList.searchText">
+    </md-input-container>
+
+    <parties-sort on-change="partiesList.sortChanged(sort)" property="name" order="1"></parties-sort>
+  </div>
+
+  <div layout="column" layout-gt-sm="row">
+    <div flex="50">
+      <md-card dir-paginate="party in partiesList.parties | itemsPerPage: partiesList.perPage" total-items="partiesList.partiesCount">
+        <md-card-title>
+          <md-card-title-text>
+            <span class="md-headline" ui-sref="partyDetails({ partyId: party._id })">
+              {{party.name}}
+              <party-remove party="party"></party-remove>
+            </span>
+            <span class="md-subhead">{{party.description}}</span>
+          </md-card-title-text>
+          <md-card-title-media ng-if="party.images">
+            <div class="md-media-lg card-media">
+              <party-image images="party.images"></party-image>
+            </div>
+          </md-card-title-media>
+        </md-card-title>
+        <md-card-content>
+          <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
+
+          <party-unanswered party="party" ng-if="!party.public"></party-unanswered>
+          <div ng-if="party.public">
+            Everyone is invited
+          </div>
+
+          <party-creator party="party"></party-creator>
+        </md-card-content>
+        <md-card-actions>
+          <party-rsvp party="party" ng-show="partiesList.isLoggedIn"></party-rsvp>
+          <div ng-hide="partiesList.isLoggedIn">
+            <i>Sign in to RSVP for this party.</i>
+          </div>
+        </md-card-actions>
+      </md-card>
+      <dir-pagination-controls on-page-change="partiesList.pageChanged(newPageNumber)"></dir-pagination-controls>
+    </div>
+    <div flex="50">
+      <parties-map parties="partiesList.parties"></parties-map>
+    </div>
+  </div>
+</div>
-- 
2.7.4


From 70e90cbc9d4aa191b58e237c9b16b893f57feeff Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 15:20:02 +0200
Subject: [PATCH 369/412] Step 22.12: Remove old view

---
 imports/ui/components/partiesList/partiesList.html | 57 ----------------------
 1 file changed, 57 deletions(-)
 delete mode 100644 imports/ui/components/partiesList/partiesList.html

diff --git a/imports/ui/components/partiesList/partiesList.html b/imports/ui/components/partiesList/partiesList.html
deleted file mode 100644
index de5d229..0000000
--- a/imports/ui/components/partiesList/partiesList.html
+++ /dev/null
@@ -1,57 +0,0 @@
-<div layout="column" layout-padding>
-  <party-add-button ng-show="partiesList.isLoggedIn"></party-add-button>
-
-  <div flex>
-    <h2 class="md-display-1">List of the parties:</h2>
-  </div>
-
-  <div flex layout="row" layout-padding>
-    <md-input-container>
-      <label>Search</label>
-      <input ng-model="partiesList.searchText">
-    </md-input-container>
-
-    <parties-sort on-change="partiesList.sortChanged(sort)" property="name" order="1"></parties-sort>
-  </div>
-
-  <div layout="column" layout-gt-sm="row">
-    <div flex="50">
-      <md-card dir-paginate="party in partiesList.parties | itemsPerPage: partiesList.perPage" total-items="partiesList.partiesCount">
-        <md-card-title>
-          <md-card-title-text>
-            <span class="md-headline" ui-sref="partyDetails({ partyId: party._id })">
-              {{party.name}}
-              <party-remove party="party"></party-remove>
-            </span>
-            <span class="md-subhead">{{party.description}}</span>
-          </md-card-title-text>
-          <md-card-title-media ng-if="party.images">
-            <div class="md-media-lg card-media">
-              <party-image images="party.images"></party-image>
-            </div>
-          </md-card-title-media>
-        </md-card-title>
-        <md-card-content>
-          <party-rsvps-list rsvps="party.rsvps"></party-rsvps-list>
-
-          <party-unanswered party="party" ng-if="!party.public"></party-unanswered>
-          <div ng-if="party.public">
-            Everyone is invited
-          </div>
-
-          <party-creator party="party"></party-creator>
-        </md-card-content>
-        <md-card-actions>
-          <party-rsvp party="party" ng-show="partiesList.isLoggedIn"></party-rsvp>
-          <div ng-hide="partiesList.isLoggedIn">
-            <i>Sign in to RSVP for this party.</i>
-          </div>
-        </md-card-actions>
-      </md-card>
-      <dir-pagination-controls on-page-change="partiesList.pageChanged(newPageNumber)"></dir-pagination-controls>
-    </div>
-    <div flex="50">
-      <parties-map parties="partiesList.parties"></parties-map>
-    </div>
-  </div>
-</div>
-- 
2.7.4


From 2fea39102e7994a6ade2d77a76e5644cead4d828 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 15:20:56 +0200
Subject: [PATCH 370/412] Step 22.13: Create mobile view

---
 imports/ui/components/partiesList/mobile.html | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)
 create mode 100644 imports/ui/components/partiesList/mobile.html

diff --git a/imports/ui/components/partiesList/mobile.html b/imports/ui/components/partiesList/mobile.html
new file mode 100644
index 0000000..c2c838a
--- /dev/null
+++ b/imports/ui/components/partiesList/mobile.html
@@ -0,0 +1,22 @@
+<ion-view hide-back-button="true">
+  <ion-content padding="true" class="has-header">
+    <div class="list">
+      <div class="card" ng-repeat="party in partiesList.parties">
+        <div class="item">
+          <h2>
+            {{party.name}}
+          </h2>
+          <p>
+            {{party.description}}
+          </p>
+        </div>
+
+        <div class="item item-image">
+          <party-image images="party.images"></party-image>
+        </div>
+
+        <party-rsvps-list class="item" rsvps="party.rsvps"></party-rsvps-list>
+      </div>
+    </div>
+  </ion-content>
+</ion-view>
-- 
2.7.4


From a51ff23106fb73b8abf363b5204b2bef493ca347 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 15:21:54 +0200
Subject: [PATCH 371/412] Step 22.14: Implement new views

---
 imports/ui/components/partiesList/partiesList.js | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
index 9e90e1f..df916d9 100644
--- a/imports/ui/components/partiesList/partiesList.js
+++ b/imports/ui/components/partiesList/partiesList.js
@@ -4,8 +4,10 @@ import uiRouter from 'angular-ui-router';
 import utilsPagination from 'angular-utils-pagination';
 
 import { Counts } from 'meteor/tmeasday:publish-counts';
+import { Meteor } from 'meteor/meteor';
 
-import template from './partiesList.html';
+import webTemplate from './web.html';
+import mobileTemplate from './mobile.html';
 import { Parties } from '../../../api/parties';
 import { name as PartiesSort } from '../partiesSort/partiesSort';
 import { name as PartiesMap } from '../partiesMap/partiesMap';
@@ -71,6 +73,7 @@ class PartiesList {
 }
 
 const name = 'partiesList';
+const template = Meteor.isCordova ? mobileTemplate : webTemplate;
 
 // create a module
 export default angular.module(name, [
-- 
2.7.4


From e251f748844feea27ee5d21c3ae7dea5b85a30b0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 15:22:45 +0200
Subject: [PATCH 372/412] Step 22.15: Remove top margin of the first card

---
 imports/ui/components/partiesList/partiesList.less | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/imports/ui/components/partiesList/partiesList.less b/imports/ui/components/partiesList/partiesList.less
index b0bc5dc..08e59d6 100644
--- a/imports/ui/components/partiesList/partiesList.less
+++ b/imports/ui/components/partiesList/partiesList.less
@@ -2,6 +2,10 @@ parties-list {
   [ui-sref] {
     cursor: pointer;
   }
+
+  .list > .card:first-child {
+    margin-top: 0;
+  }
 }
 
 @import "../partiesMap/partiesMap.less";
-- 
2.7.4


From 5d389b8468dd85b780949d836a79a2dc7da51f7d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 15:25:39 +0200
Subject: [PATCH 373/412] Step 22.16: Create DisplayImageFilter

---
 imports/ui/filters/displayImageFilter.js | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)
 create mode 100644 imports/ui/filters/displayImageFilter.js

diff --git a/imports/ui/filters/displayImageFilter.js b/imports/ui/filters/displayImageFilter.js
new file mode 100644
index 0000000..aa2dfda
--- /dev/null
+++ b/imports/ui/filters/displayImageFilter.js
@@ -0,0 +1,26 @@
+import angular from 'angular';
+
+import { Meteor } from 'meteor/meteor';
+
+const name = 'displayImageFilter';
+
+function DisplayImageFilter(image) {
+  if (!image) {
+    return image;
+  }
+
+  // leave it as it is for the web view
+  if (!Meteor.isCordova) {
+    return image.url;
+  }
+
+  // create new path of an image
+  const path = `ufs/${image.store}/${image._id}/${image.name}`;
+  return Meteor.absoluteUrl(path);
+}
+
+// create a module
+export default angular.module(name, [])
+  .filter(name, () => {
+    return DisplayImageFilter;
+  });
-- 
2.7.4


From d0a1c710cdb6a3c58678332f9d4693f6fad3dd2e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 15:26:55 +0200
Subject: [PATCH 374/412] Step 22.17: Add new filter to PartyImage

---
 imports/ui/components/partyImage/partyImage.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyImage/partyImage.js b/imports/ui/components/partyImage/partyImage.js
index 5b636b8..64384c0 100644
--- a/imports/ui/components/partyImage/partyImage.js
+++ b/imports/ui/components/partyImage/partyImage.js
@@ -3,6 +3,7 @@ import angularMeteor from 'angular-meteor';
 
 import template from './partyImage.html';
 import { Images } from '../../../api/images';
+import { name as DisplayImageFilter } from '../../filters/displayImageFilter';
 
 class PartyImage {
   constructor($scope, $reactive) {
@@ -26,7 +27,8 @@ const name = 'partyImage';
 
 // create a module
 export default angular.module(name, [
-  angularMeteor
+  angularMeteor,
+  DisplayImageFilter
 ]).component(name, {
   template,
   bindings: {
-- 
2.7.4


From 1bd35e9533c88b3b160c47a79e6686b36475b159 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 25 Apr 2016 15:27:28 +0200
Subject: [PATCH 375/412] Step 22.18: Implement DisplayImageFilter

---
 imports/ui/components/partyImage/partyImage.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyImage/partyImage.html b/imports/ui/components/partyImage/partyImage.html
index 719c4a3..04693e3 100644
--- a/imports/ui/components/partyImage/partyImage.html
+++ b/imports/ui/components/partyImage/partyImage.html
@@ -1 +1 @@
-<img ng-src="{{partyImage.mainImage.url}}"/>
+<img ng-src="{{partyImage.mainImage | displayImageFilter}}"/>
-- 
2.7.4


From 309b2a61933543bbf615596d5d1b48e9b3ed4f36 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 17:43:49 +0200
Subject: [PATCH 376/412] Step 23.1: Remove pbastowski:angular-babel

---
 .meteor/packages | 1 -
 .meteor/versions | 1 -
 2 files changed, 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 2f0738e..e74e33e 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -15,7 +15,6 @@ standard-minifier-css   # CSS minifier run for production mode
 standard-minifier-js    # JS minifier run for production mode
 es5-shim                # ECMAScript 5 compatibility for older browsers.
 
-pbastowski:angular-babel
 urigo:static-templates
 sanjo:jasmine
 velocity:html-reporter
diff --git a/.meteor/versions b/.meteor/versions
index c58233f..4a91d22 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -70,7 +70,6 @@ oauth2@1.1.10
 observe-sequence@1.0.13
 ordered-dict@1.0.8
 pagebakers:ionicons@2.0.1_1
-pbastowski:angular-babel@1.3.6
 planettraining:material-design-icons@2.2.3
 promise@0.8.7
 random@1.0.10
-- 
2.7.4


From f21e3fdf331f9fb2fde65dbfa38b8d541387f489 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 17:44:49 +0200
Subject: [PATCH 377/412] Step 23.2: Add mys:typescript-ng-annotate

---
 .meteor/packages | 1 +
 .meteor/versions | 3 +++
 2 files changed, 4 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index e74e33e..ca3dfbd 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -32,3 +32,4 @@ pagebakers:ionicons
 jalik:ufs
 jalik:ufs-gridfs
 mys:accounts-phone
+mys:typescript-ng-annotate
diff --git a/.meteor/versions b/.meteor/versions
index 4a91d22..9877888 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -10,6 +10,8 @@ amplify@1.0.0
 autoupdate@1.2.11
 babel-compiler@6.9.1_1
 babel-runtime@0.1.11_1
+barbatus:typescript-compiler@0.7.1_1
+barbatus:typescript-runtime@0.1.2
 base64@1.0.9
 binary-heap@1.0.9
 blaze@2.1.9
@@ -62,6 +64,7 @@ modules-runtime@0.7.6_1
 mongo@1.1.12_5
 mongo-id@1.0.5
 mys:accounts-phone@0.0.21
+mys:typescript-ng-annotate@0.0.2
 npm-bcrypt@0.9.1_1
 npm-mongo@2.2.10_1
 oauth@1.1.11
-- 
2.7.4


From 3e90bf29ac9bff2e6567380f6d259bbf74be49e1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 17:46:33 +0200
Subject: [PATCH 378/412] Step 23.3: Rename main file and make few changes to
 support typescript

---
 client/main.js | 19 -------------------
 client/main.ts | 19 +++++++++++++++++++
 2 files changed, 19 insertions(+), 19 deletions(-)
 delete mode 100644 client/main.js
 create mode 100644 client/main.ts

diff --git a/client/main.js b/client/main.js
deleted file mode 100644
index 06731e1..0000000
--- a/client/main.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import angular from 'angular';
-
-import { Meteor } from 'meteor/meteor';
-
-import { name as Socially } from '../imports/ui/components/socially/socially';
-
-function onReady() {
-  angular.bootstrap(document, [
-    Socially
-  ], {
-    strictDi: true
-  });
-}
-
-if (Meteor.isCordova) {
-  angular.element(document).on('deviceready', onReady);
-} else {
-  angular.element(document).ready(onReady);
-}
diff --git a/client/main.ts b/client/main.ts
new file mode 100644
index 0000000..1b2a4c5
--- /dev/null
+++ b/client/main.ts
@@ -0,0 +1,19 @@
+import * as angular from 'angular';
+
+import { Meteor } from 'meteor/meteor';
+
+import Socially from '../imports/ui/components/socially/socially';
+
+function onReady() {
+  angular.bootstrap(document, [
+    Socially.name
+  ], {
+    strictDi: true
+  });
+}
+
+if (Meteor.isCordova) {
+  angular.element(document).on('deviceready', onReady);
+} else {
+  angular.element(document).ready(onReady);
+}
-- 
2.7.4


From c50efaa64e381167cffae75957fff7e01a0423f2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 17:49:27 +0200
Subject: [PATCH 379/412] Step 23.4: Default imports of libraries inside
 Socially component

---
 imports/ui/components/socially/socially.js | 80 ------------------------------
 imports/ui/components/socially/socially.ts | 80 ++++++++++++++++++++++++++++++
 2 files changed, 80 insertions(+), 80 deletions(-)
 delete mode 100644 imports/ui/components/socially/socially.js
 create mode 100644 imports/ui/components/socially/socially.ts

diff --git a/imports/ui/components/socially/socially.js b/imports/ui/components/socially/socially.js
deleted file mode 100644
index ff140a5..0000000
--- a/imports/ui/components/socially/socially.js
+++ /dev/null
@@ -1,80 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import ngMaterial from 'angular-material';
-import ngSanitize from 'angular-sanitize';
-import uiRouter from 'angular-ui-router';
-import 'ionic-sdk/release/js/ionic';
-import 'ionic-sdk/release/js/ionic-angular';
-import 'ionic-sdk/release/css/ionic.css';
-
-import { Meteor } from 'meteor/meteor';
-
-import webTemplate from './web.html';
-import mobileTemplate from './mobile.html';
-import { name as PartiesList } from '../partiesList/partiesList';
-import { name as PartyDetails } from '../partyDetails/partyDetails';
-import { name as Navigation } from '../navigation/navigation';
-import { name as Auth } from '../auth/auth';
-
-class Socially {}
-
-const name = 'socially';
-const template = Meteor.isCordova ? mobileTemplate : webTemplate;
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  ngMaterial,
-  ngSanitize,
-  uiRouter,
-  PartiesList,
-  PartyDetails,
-  Navigation,
-  Auth,
-  'accounts.ui',
-  'ionic'
-]).component(name, {
-  template,
-  controllerAs: name,
-  controller: Socially
-})
-  .config(config)
-  .run(run);
-
-function config($locationProvider, $urlRouterProvider, $mdIconProvider) {
-  'ngInject';
-
-  $locationProvider.html5Mode(true);
-
-  $urlRouterProvider.otherwise('/parties');
-
-  const iconPath =  '/packages/planettraining_material-design-icons/bower_components/material-design-icons/sprites/svg-sprite/';
-
-  $mdIconProvider
-    .iconSet('social',
-      iconPath + 'svg-sprite-social.svg')
-    .iconSet('action',
-      iconPath + 'svg-sprite-action.svg')
-    .iconSet('communication',
-      iconPath + 'svg-sprite-communication.svg')
-    .iconSet('content',
-      iconPath + 'svg-sprite-content.svg')
-    .iconSet('toggle',
-      iconPath + 'svg-sprite-toggle.svg')
-    .iconSet('navigation',
-      iconPath + 'svg-sprite-navigation.svg')
-    .iconSet('image',
-      iconPath + 'svg-sprite-image.svg');
-}
-
-function run($rootScope, $state) {
-  'ngInject';
-
-  $rootScope.$on('$stateChangeError',
-    (event, toState, toParams, fromState, fromParams, error) => {
-      if (error === 'AUTH_REQUIRED') {
-        $state.go('parties');
-      }
-    }
-  );
-}
diff --git a/imports/ui/components/socially/socially.ts b/imports/ui/components/socially/socially.ts
new file mode 100644
index 0000000..35393c3
--- /dev/null
+++ b/imports/ui/components/socially/socially.ts
@@ -0,0 +1,80 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+import * as ngMaterial from 'angular-material';
+import * as ngSanitize from 'angular-sanitize';
+import * as uiRouter from 'angular-ui-router';
+import 'ionic-sdk/release/js/ionic';
+import 'ionic-sdk/release/js/ionic-angular';
+import 'ionic-sdk/release/css/ionic.css';
+
+import { Meteor } from 'meteor/meteor';
+
+import webTemplate from './web.html';
+import mobileTemplate from './mobile.html';
+import { name as PartiesList } from '../partiesList/partiesList';
+import { name as PartyDetails } from '../partyDetails/partyDetails';
+import { name as Navigation } from '../navigation/navigation';
+import { name as Auth } from '../auth/auth';
+
+class Socially {}
+
+const name = 'socially';
+const template = Meteor.isCordova ? mobileTemplate : webTemplate;
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  ngMaterial,
+  ngSanitize,
+  uiRouter,
+  PartiesList,
+  PartyDetails,
+  Navigation,
+  Auth,
+  'accounts.ui',
+  'ionic'
+]).component(name, {
+  template,
+  controllerAs: name,
+  controller: Socially
+})
+  .config(config)
+  .run(run);
+
+function config($locationProvider, $urlRouterProvider, $mdIconProvider) {
+  'ngInject';
+
+  $locationProvider.html5Mode(true);
+
+  $urlRouterProvider.otherwise('/parties');
+
+  const iconPath =  '/packages/planettraining_material-design-icons/bower_components/material-design-icons/sprites/svg-sprite/';
+
+  $mdIconProvider
+    .iconSet('social',
+      iconPath + 'svg-sprite-social.svg')
+    .iconSet('action',
+      iconPath + 'svg-sprite-action.svg')
+    .iconSet('communication',
+      iconPath + 'svg-sprite-communication.svg')
+    .iconSet('content',
+      iconPath + 'svg-sprite-content.svg')
+    .iconSet('toggle',
+      iconPath + 'svg-sprite-toggle.svg')
+    .iconSet('navigation',
+      iconPath + 'svg-sprite-navigation.svg')
+    .iconSet('image',
+      iconPath + 'svg-sprite-image.svg');
+}
+
+function run($rootScope, $state) {
+  'ngInject';
+
+  $rootScope.$on('$stateChangeError',
+    (event, toState, toParams, fromState, fromParams, error) => {
+      if (error === 'AUTH_REQUIRED') {
+        $state.go('parties');
+      }
+    }
+  );
+}
-- 
2.7.4


From 604911f1a42804616e56461e20a5107b4773072e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 17:50:49 +0200
Subject: [PATCH 380/412] Step 23.5: Default imports of components

---
 imports/ui/components/socially/socially.ts | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/imports/ui/components/socially/socially.ts b/imports/ui/components/socially/socially.ts
index 35393c3..e982f1b 100644
--- a/imports/ui/components/socially/socially.ts
+++ b/imports/ui/components/socially/socially.ts
@@ -11,10 +11,10 @@ import { Meteor } from 'meteor/meteor';
 
 import webTemplate from './web.html';
 import mobileTemplate from './mobile.html';
-import { name as PartiesList } from '../partiesList/partiesList';
-import { name as PartyDetails } from '../partyDetails/partyDetails';
-import { name as Navigation } from '../navigation/navigation';
-import { name as Auth } from '../auth/auth';
+import PartiesList from '../partiesList/partiesList';
+import PartyDetails from '../partyDetails/partyDetails';
+import Navigation from '../navigation/navigation';
+import Auth from '../auth/auth';
 
 class Socially {}
 
@@ -27,10 +27,10 @@ export default angular.module(name, [
   ngMaterial,
   ngSanitize,
   uiRouter,
-  PartiesList,
-  PartyDetails,
-  Navigation,
-  Auth,
+  PartiesList.name,
+  PartyDetails.name,
+  Navigation.name,
+  Auth.name,
   'accounts.ui',
   'ionic'
 ]).component(name, {
-- 
2.7.4


From 4569b216998f332fc5e66b3c53ff35db613b3f64 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:19:19 +0200
Subject: [PATCH 381/412] Step 23.6: Move everything to typescript

---
 imports/api/images/collection.js                   |  21 ---
 imports/api/images/collection.ts                   |  21 +++
 imports/api/images/helpers.js                      |  54 -------
 imports/api/images/helpers.ts                      |  54 +++++++
 imports/api/images/index.js                        |   4 -
 imports/api/images/index.ts                        |   4 +
 imports/api/images/methods.js                      |  33 ----
 imports/api/images/methods.ts                      |  33 ++++
 imports/api/images/publish.js                      |  17 --
 imports/api/images/publish.ts                      |  17 ++
 imports/api/images/store.js                        |  30 ----
 imports/api/images/store.ts                        |  30 ++++
 imports/api/parties/collection.js                  |  15 --
 imports/api/parties/collection.ts                  |  15 ++
 imports/api/parties/index.js                       |   4 -
 imports/api/parties/index.ts                       |   4 +
 imports/api/parties/methods.js                     | 144 -----------------
 imports/api/parties/methods.tests.js               | 178 ---------------------
 imports/api/parties/methods.tests.ts               | 178 +++++++++++++++++++++
 imports/api/parties/methods.ts                     | 144 +++++++++++++++++
 imports/api/parties/publish.js                     |  52 ------
 imports/api/parties/publish.ts                     |  52 ++++++
 imports/api/users.js                               |  12 --
 imports/api/users.ts                               |  12 ++
 imports/startup/fixtures.js                        |  21 ---
 imports/startup/fixtures.ts                        |  21 +++
 imports/ui/components/auth/auth.js                 |  47 ------
 imports/ui/components/auth/auth.ts                 |  47 ++++++
 imports/ui/components/login/login.js               |  35 ----
 imports/ui/components/login/login.ts               |  35 ++++
 imports/ui/components/login/mobile.js              |  40 -----
 imports/ui/components/login/mobile.ts              |  40 +++++
 imports/ui/components/login/web.js                 |  30 ----
 imports/ui/components/login/web.ts                 |  30 ++++
 imports/ui/components/navigation/navigation.js     |  14 --
 imports/ui/components/navigation/navigation.ts     |  14 ++
 .../partiesList/client/partiesList.tests.js        |  50 ------
 .../partiesList/client/partiesList.tests.ts        |  50 ++++++
 imports/ui/components/partiesList/partiesList.js   | 105 ------------
 imports/ui/components/partiesList/partiesList.ts   | 105 ++++++++++++
 imports/ui/components/partiesMap/partiesMap.js     |  37 -----
 imports/ui/components/partiesMap/partiesMap.ts     |  37 +++++
 .../partiesSort/client/partiesSort.tests.js        |  54 -------
 .../partiesSort/client/partiesSort.tests.ts        |  54 +++++++
 imports/ui/components/partiesSort/partiesSort.js   |  34 ----
 imports/ui/components/partiesSort/partiesSort.ts   |  34 ++++
 .../components/partyAdd/client/partyAdd.tests.js   |  65 --------
 .../components/partyAdd/client/partyAdd.tests.ts   |  65 ++++++++
 imports/ui/components/partyAdd/partyAdd.js         |  44 -----
 imports/ui/components/partyAdd/partyAdd.ts         |  44 +++++
 .../ui/components/partyAddButton/partyAddButton.js |  45 ------
 .../ui/components/partyAddButton/partyAddButton.ts |  45 ++++++
 .../partyCreator/client/partyCreator.tests.js      |  81 ----------
 .../partyCreator/client/partyCreator.tests.ts      |  81 ++++++++++
 imports/ui/components/partyCreator/partyCreator.js |  49 ------
 imports/ui/components/partyCreator/partyCreator.ts |  49 ++++++
 .../partyDetails/client/partyDetails.tests.js      |  51 ------
 .../partyDetails/client/partyDetails.tests.ts      |  51 ++++++
 imports/ui/components/partyDetails/partyDetails.js |  97 -----------
 imports/ui/components/partyDetails/partyDetails.ts |  97 +++++++++++
 imports/ui/components/partyImage/partyImage.js     |  39 -----
 imports/ui/components/partyImage/partyImage.ts     |  39 +++++
 imports/ui/components/partyMap/partyMap.js         |  61 -------
 imports/ui/components/partyMap/partyMap.ts         |  61 +++++++
 .../partyRemove/client/partyRemove.tests.js        |  37 -----
 .../partyRemove/client/partyRemove.tests.ts        |  37 +++++
 imports/ui/components/partyRemove/partyRemove.js   |  27 ----
 imports/ui/components/partyRemove/partyRemove.ts   |  27 ++++
 imports/ui/components/partyRsvp/partyRsvp.js       |  62 -------
 imports/ui/components/partyRsvp/partyRsvp.ts       |  62 +++++++
 .../ui/components/partyRsvpUsers/partyRsvpUsers.js |  29 ----
 .../ui/components/partyRsvpUsers/partyRsvpUsers.ts |  29 ++++
 .../ui/components/partyRsvpsList/partyRsvpsList.js |  20 ---
 .../ui/components/partyRsvpsList/partyRsvpsList.ts |  20 +++
 .../ui/components/partyUninvited/partyUninvited.js |  50 ------
 .../ui/components/partyUninvited/partyUninvited.ts |  50 ++++++
 imports/ui/components/partyUpload/partyUpload.js   |  91 -----------
 imports/ui/components/partyUpload/partyUpload.ts   |  91 +++++++++++
 imports/ui/components/password/password.js         |  56 -------
 imports/ui/components/password/password.ts         |  56 +++++++
 imports/ui/components/register/register.js         |  58 -------
 imports/ui/components/register/register.ts         |  58 +++++++
 imports/ui/filters/displayImageFilter.js           |  26 ---
 imports/ui/filters/displayImageFilter.ts           |  26 +++
 imports/ui/filters/displayNameFilter.js            |  25 ---
 imports/ui/filters/displayNameFilter.ts            |  25 +++
 imports/ui/filters/uninvitedFilter.js              |  21 ---
 imports/ui/filters/uninvitedFilter.ts              |  21 +++
 server/main.js                                     |   4 -
 server/main.ts                                     |   4 +
 90 files changed, 2069 insertions(+), 2069 deletions(-)
 delete mode 100644 imports/api/images/collection.js
 create mode 100644 imports/api/images/collection.ts
 delete mode 100644 imports/api/images/helpers.js
 create mode 100644 imports/api/images/helpers.ts
 delete mode 100644 imports/api/images/index.js
 create mode 100644 imports/api/images/index.ts
 delete mode 100644 imports/api/images/methods.js
 create mode 100644 imports/api/images/methods.ts
 delete mode 100644 imports/api/images/publish.js
 create mode 100644 imports/api/images/publish.ts
 delete mode 100644 imports/api/images/store.js
 create mode 100644 imports/api/images/store.ts
 delete mode 100644 imports/api/parties/collection.js
 create mode 100644 imports/api/parties/collection.ts
 delete mode 100644 imports/api/parties/index.js
 create mode 100644 imports/api/parties/index.ts
 delete mode 100644 imports/api/parties/methods.js
 delete mode 100644 imports/api/parties/methods.tests.js
 create mode 100644 imports/api/parties/methods.tests.ts
 create mode 100644 imports/api/parties/methods.ts
 delete mode 100644 imports/api/parties/publish.js
 create mode 100644 imports/api/parties/publish.ts
 delete mode 100644 imports/api/users.js
 create mode 100644 imports/api/users.ts
 delete mode 100644 imports/startup/fixtures.js
 create mode 100644 imports/startup/fixtures.ts
 delete mode 100644 imports/ui/components/auth/auth.js
 create mode 100644 imports/ui/components/auth/auth.ts
 delete mode 100644 imports/ui/components/login/login.js
 create mode 100644 imports/ui/components/login/login.ts
 delete mode 100644 imports/ui/components/login/mobile.js
 create mode 100644 imports/ui/components/login/mobile.ts
 delete mode 100644 imports/ui/components/login/web.js
 create mode 100644 imports/ui/components/login/web.ts
 delete mode 100644 imports/ui/components/navigation/navigation.js
 create mode 100644 imports/ui/components/navigation/navigation.ts
 delete mode 100644 imports/ui/components/partiesList/client/partiesList.tests.js
 create mode 100644 imports/ui/components/partiesList/client/partiesList.tests.ts
 delete mode 100644 imports/ui/components/partiesList/partiesList.js
 create mode 100644 imports/ui/components/partiesList/partiesList.ts
 delete mode 100644 imports/ui/components/partiesMap/partiesMap.js
 create mode 100644 imports/ui/components/partiesMap/partiesMap.ts
 delete mode 100644 imports/ui/components/partiesSort/client/partiesSort.tests.js
 create mode 100644 imports/ui/components/partiesSort/client/partiesSort.tests.ts
 delete mode 100644 imports/ui/components/partiesSort/partiesSort.js
 create mode 100644 imports/ui/components/partiesSort/partiesSort.ts
 delete mode 100644 imports/ui/components/partyAdd/client/partyAdd.tests.js
 create mode 100644 imports/ui/components/partyAdd/client/partyAdd.tests.ts
 delete mode 100644 imports/ui/components/partyAdd/partyAdd.js
 create mode 100644 imports/ui/components/partyAdd/partyAdd.ts
 delete mode 100644 imports/ui/components/partyAddButton/partyAddButton.js
 create mode 100644 imports/ui/components/partyAddButton/partyAddButton.ts
 delete mode 100644 imports/ui/components/partyCreator/client/partyCreator.tests.js
 create mode 100644 imports/ui/components/partyCreator/client/partyCreator.tests.ts
 delete mode 100644 imports/ui/components/partyCreator/partyCreator.js
 create mode 100644 imports/ui/components/partyCreator/partyCreator.ts
 delete mode 100644 imports/ui/components/partyDetails/client/partyDetails.tests.js
 create mode 100644 imports/ui/components/partyDetails/client/partyDetails.tests.ts
 delete mode 100644 imports/ui/components/partyDetails/partyDetails.js
 create mode 100644 imports/ui/components/partyDetails/partyDetails.ts
 delete mode 100644 imports/ui/components/partyImage/partyImage.js
 create mode 100644 imports/ui/components/partyImage/partyImage.ts
 delete mode 100644 imports/ui/components/partyMap/partyMap.js
 create mode 100644 imports/ui/components/partyMap/partyMap.ts
 delete mode 100644 imports/ui/components/partyRemove/client/partyRemove.tests.js
 create mode 100644 imports/ui/components/partyRemove/client/partyRemove.tests.ts
 delete mode 100644 imports/ui/components/partyRemove/partyRemove.js
 create mode 100644 imports/ui/components/partyRemove/partyRemove.ts
 delete mode 100644 imports/ui/components/partyRsvp/partyRsvp.js
 create mode 100644 imports/ui/components/partyRsvp/partyRsvp.ts
 delete mode 100644 imports/ui/components/partyRsvpUsers/partyRsvpUsers.js
 create mode 100644 imports/ui/components/partyRsvpUsers/partyRsvpUsers.ts
 delete mode 100644 imports/ui/components/partyRsvpsList/partyRsvpsList.js
 create mode 100644 imports/ui/components/partyRsvpsList/partyRsvpsList.ts
 delete mode 100644 imports/ui/components/partyUninvited/partyUninvited.js
 create mode 100644 imports/ui/components/partyUninvited/partyUninvited.ts
 delete mode 100644 imports/ui/components/partyUpload/partyUpload.js
 create mode 100644 imports/ui/components/partyUpload/partyUpload.ts
 delete mode 100644 imports/ui/components/password/password.js
 create mode 100644 imports/ui/components/password/password.ts
 delete mode 100644 imports/ui/components/register/register.js
 create mode 100644 imports/ui/components/register/register.ts
 delete mode 100644 imports/ui/filters/displayImageFilter.js
 create mode 100644 imports/ui/filters/displayImageFilter.ts
 delete mode 100644 imports/ui/filters/displayNameFilter.js
 create mode 100644 imports/ui/filters/displayNameFilter.ts
 delete mode 100644 imports/ui/filters/uninvitedFilter.js
 create mode 100644 imports/ui/filters/uninvitedFilter.ts
 delete mode 100644 server/main.js
 create mode 100644 server/main.ts

diff --git a/imports/api/images/collection.js b/imports/api/images/collection.js
deleted file mode 100644
index a522111..0000000
--- a/imports/api/images/collection.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-import { Mongo } from 'meteor/mongo';
-
-export const Images = new Mongo.Collection('images');
-export const Thumbs = new Mongo.Collection('thumbs');
-
-function loggedIn(userId) {
-  return !!userId;
-}
-
-Thumbs.allow({
-  insert: loggedIn,
-  update: loggedIn,
-  remove: loggedIn
-});
-
-Images.allow({
-  insert: loggedIn,
-  update: loggedIn,
-  remove: loggedIn
-});
diff --git a/imports/api/images/collection.ts b/imports/api/images/collection.ts
new file mode 100644
index 0000000..a522111
--- /dev/null
+++ b/imports/api/images/collection.ts
@@ -0,0 +1,21 @@
+import { Meteor } from 'meteor/meteor';
+import { Mongo } from 'meteor/mongo';
+
+export const Images = new Mongo.Collection('images');
+export const Thumbs = new Mongo.Collection('thumbs');
+
+function loggedIn(userId) {
+  return !!userId;
+}
+
+Thumbs.allow({
+  insert: loggedIn,
+  update: loggedIn,
+  remove: loggedIn
+});
+
+Images.allow({
+  insert: loggedIn,
+  update: loggedIn,
+  remove: loggedIn
+});
diff --git a/imports/api/images/helpers.js b/imports/api/images/helpers.js
deleted file mode 100644
index 448f932..0000000
--- a/imports/api/images/helpers.js
+++ /dev/null
@@ -1,54 +0,0 @@
-/**
- * Converts DataURL to Blob object
- *
- * https://github.com/ebidel/filer.js/blob/master/src/filer.js#L137
- *
- * @param  {String} dataURL
- * @return {Blob}
- */
-export function dataURLToBlob(dataURL) {
-    const BASE64_MARKER = ';base64,';
-
-    if (dataURL.indexOf(BASE64_MARKER) === -1) {
-      const parts = dataURL.split(',');
-      const contentType = parts[0].split(':')[1];
-      const raw = decodeURIComponent(parts[1]);
-
-      return new Blob([raw], {type: contentType});
-    }
-
-    const parts = dataURL.split(BASE64_MARKER);
-    const contentType = parts[0].split(':')[1];
-    const raw = window.atob(parts[1]);
-    const rawLength = raw.length;
-    const uInt8Array = new Uint8Array(rawLength);
-
-    for (let i = 0; i < rawLength; ++i) {
-      uInt8Array[i] = raw.charCodeAt(i);
-    }
-
-    return new Blob([uInt8Array], {type: contentType});
-}
-
-/**
- * Converts Blob object to ArrayBuffer
- *
- * @param  {Blob}       blob          Source file
- * @param  {Function}   callback      Success callback with converted object as a first argument
- * @param  {Function}   errorCallback Error callback with error as a first argument
- */
-export function blobToArrayBuffer(blob, callback, errorCallback) {
-  const reader = new FileReader();
-
-  reader.onload = (e) => {
-    callback(e.target.result);
-  };
-
-  reader.onerror = (e) => {
-    if (errorCallback) {
-      errorCallback(e);
-    }
-  };
-
-  reader.readAsArrayBuffer(blob);
-}
diff --git a/imports/api/images/helpers.ts b/imports/api/images/helpers.ts
new file mode 100644
index 0000000..448f932
--- /dev/null
+++ b/imports/api/images/helpers.ts
@@ -0,0 +1,54 @@
+/**
+ * Converts DataURL to Blob object
+ *
+ * https://github.com/ebidel/filer.js/blob/master/src/filer.js#L137
+ *
+ * @param  {String} dataURL
+ * @return {Blob}
+ */
+export function dataURLToBlob(dataURL) {
+    const BASE64_MARKER = ';base64,';
+
+    if (dataURL.indexOf(BASE64_MARKER) === -1) {
+      const parts = dataURL.split(',');
+      const contentType = parts[0].split(':')[1];
+      const raw = decodeURIComponent(parts[1]);
+
+      return new Blob([raw], {type: contentType});
+    }
+
+    const parts = dataURL.split(BASE64_MARKER);
+    const contentType = parts[0].split(':')[1];
+    const raw = window.atob(parts[1]);
+    const rawLength = raw.length;
+    const uInt8Array = new Uint8Array(rawLength);
+
+    for (let i = 0; i < rawLength; ++i) {
+      uInt8Array[i] = raw.charCodeAt(i);
+    }
+
+    return new Blob([uInt8Array], {type: contentType});
+}
+
+/**
+ * Converts Blob object to ArrayBuffer
+ *
+ * @param  {Blob}       blob          Source file
+ * @param  {Function}   callback      Success callback with converted object as a first argument
+ * @param  {Function}   errorCallback Error callback with error as a first argument
+ */
+export function blobToArrayBuffer(blob, callback, errorCallback) {
+  const reader = new FileReader();
+
+  reader.onload = (e) => {
+    callback(e.target.result);
+  };
+
+  reader.onerror = (e) => {
+    if (errorCallback) {
+      errorCallback(e);
+    }
+  };
+
+  reader.readAsArrayBuffer(blob);
+}
diff --git a/imports/api/images/index.js b/imports/api/images/index.js
deleted file mode 100644
index 57692b3..0000000
--- a/imports/api/images/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import './publish';
-export * from './collection';
-export * from './store';
-export * from './methods';
diff --git a/imports/api/images/index.ts b/imports/api/images/index.ts
new file mode 100644
index 0000000..57692b3
--- /dev/null
+++ b/imports/api/images/index.ts
@@ -0,0 +1,4 @@
+import './publish';
+export * from './collection';
+export * from './store';
+export * from './methods';
diff --git a/imports/api/images/methods.js b/imports/api/images/methods.js
deleted file mode 100644
index e634901..0000000
--- a/imports/api/images/methods.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import { UploadFS } from 'meteor/jalik:ufs';
-import { ImagesStore } from './store';
-import { dataURLToBlob, blobToArrayBuffer } from './helpers';
-
-/**
- * Uploads a new file
- *
- * @param  {String}   dataUrl [description]
- * @param  {String}   name    [description]
- * @param  {Function} resolve [description]
- * @param  {Function} reject  [description]
- */
-export function upload(dataUrl, name, resolve, reject) {
-  // convert to Blob
-  const blob = dataURLToBlob(dataUrl);
-  blob.name = name;
-
-  // pick from an object only: name, type and size
-  const file = _.pick(blob, 'name', 'type', 'size');
-
-  // convert to ArrayBuffer
-  blobToArrayBuffer(blob, (data) => {
-    const upload = new UploadFS.Uploader({
-      data,
-      file,
-      store: ImagesStore,
-      onError: reject,
-      onComplete: resolve
-    });
-
-    upload.start();
-  }, reject);
-}
diff --git a/imports/api/images/methods.ts b/imports/api/images/methods.ts
new file mode 100644
index 0000000..e634901
--- /dev/null
+++ b/imports/api/images/methods.ts
@@ -0,0 +1,33 @@
+import { UploadFS } from 'meteor/jalik:ufs';
+import { ImagesStore } from './store';
+import { dataURLToBlob, blobToArrayBuffer } from './helpers';
+
+/**
+ * Uploads a new file
+ *
+ * @param  {String}   dataUrl [description]
+ * @param  {String}   name    [description]
+ * @param  {Function} resolve [description]
+ * @param  {Function} reject  [description]
+ */
+export function upload(dataUrl, name, resolve, reject) {
+  // convert to Blob
+  const blob = dataURLToBlob(dataUrl);
+  blob.name = name;
+
+  // pick from an object only: name, type and size
+  const file = _.pick(blob, 'name', 'type', 'size');
+
+  // convert to ArrayBuffer
+  blobToArrayBuffer(blob, (data) => {
+    const upload = new UploadFS.Uploader({
+      data,
+      file,
+      store: ImagesStore,
+      onError: reject,
+      onComplete: resolve
+    });
+
+    upload.start();
+  }, reject);
+}
diff --git a/imports/api/images/publish.js b/imports/api/images/publish.js
deleted file mode 100644
index 5949c72..0000000
--- a/imports/api/images/publish.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-import { Thumbs, Images } from './collection';
-
-if (Meteor.isServer) {
-  Meteor.publish('thumbs', function(ids) {
-    return Thumbs.find({
-      originalStore: 'images',
-      originalId: {
-        $in: ids
-      }
-    });
-  });
-
-  Meteor.publish('images', function() {
-    return Images.find({});
-  });
-}
diff --git a/imports/api/images/publish.ts b/imports/api/images/publish.ts
new file mode 100644
index 0000000..5949c72
--- /dev/null
+++ b/imports/api/images/publish.ts
@@ -0,0 +1,17 @@
+import { Meteor } from 'meteor/meteor';
+import { Thumbs, Images } from './collection';
+
+if (Meteor.isServer) {
+  Meteor.publish('thumbs', function(ids) {
+    return Thumbs.find({
+      originalStore: 'images',
+      originalId: {
+        $in: ids
+      }
+    });
+  });
+
+  Meteor.publish('images', function() {
+    return Images.find({});
+  });
+}
diff --git a/imports/api/images/store.js b/imports/api/images/store.js
deleted file mode 100644
index a0fa6d6..0000000
--- a/imports/api/images/store.js
+++ /dev/null
@@ -1,30 +0,0 @@
-import { UploadFS } from 'meteor/jalik:ufs';
-import { Images, Thumbs } from './collection';
-
-export const ThumbsStore = new UploadFS.store.GridFS({
-  collection: Thumbs,
-  name: 'thumbs',
-  transformWrite(from, to, fileId, file) {
-    // Resize to 32x32
-    const gm = require('gm');
-
-    gm(from, file.name)
-      .resize(32, 32)
-      .gravity('Center')
-      .extent(32, 32)
-      .quality(75)
-      .stream()
-      .pipe(to);
-  }
-});
-
-export const ImagesStore = new UploadFS.store.GridFS({
-  collection: Images,
-  name: 'images',
-  filter: new UploadFS.Filter({
-    contentTypes: ['image/*']
-  }),
-  copyTo: [
-    ThumbsStore
-  ]
-});
diff --git a/imports/api/images/store.ts b/imports/api/images/store.ts
new file mode 100644
index 0000000..a0fa6d6
--- /dev/null
+++ b/imports/api/images/store.ts
@@ -0,0 +1,30 @@
+import { UploadFS } from 'meteor/jalik:ufs';
+import { Images, Thumbs } from './collection';
+
+export const ThumbsStore = new UploadFS.store.GridFS({
+  collection: Thumbs,
+  name: 'thumbs',
+  transformWrite(from, to, fileId, file) {
+    // Resize to 32x32
+    const gm = require('gm');
+
+    gm(from, file.name)
+      .resize(32, 32)
+      .gravity('Center')
+      .extent(32, 32)
+      .quality(75)
+      .stream()
+      .pipe(to);
+  }
+});
+
+export const ImagesStore = new UploadFS.store.GridFS({
+  collection: Images,
+  name: 'images',
+  filter: new UploadFS.Filter({
+    contentTypes: ['image/*']
+  }),
+  copyTo: [
+    ThumbsStore
+  ]
+});
diff --git a/imports/api/parties/collection.js b/imports/api/parties/collection.js
deleted file mode 100644
index 3e283c1..0000000
--- a/imports/api/parties/collection.js
+++ /dev/null
@@ -1,15 +0,0 @@
-import { Mongo } from 'meteor/mongo';
-
-export const Parties = new Mongo.Collection('parties');
-
-Parties.allow({
-  insert(userId, party) {
-    return userId && party.owner === userId;
-  },
-  update(userId, party, fields, modifier) {
-    return userId && party.owner === userId;
-  },
-  remove(userId, party) {
-    return userId && party.owner === userId;
-  }
-});
diff --git a/imports/api/parties/collection.ts b/imports/api/parties/collection.ts
new file mode 100644
index 0000000..3e283c1
--- /dev/null
+++ b/imports/api/parties/collection.ts
@@ -0,0 +1,15 @@
+import { Mongo } from 'meteor/mongo';
+
+export const Parties = new Mongo.Collection('parties');
+
+Parties.allow({
+  insert(userId, party) {
+    return userId && party.owner === userId;
+  },
+  update(userId, party, fields, modifier) {
+    return userId && party.owner === userId;
+  },
+  remove(userId, party) {
+    return userId && party.owner === userId;
+  }
+});
diff --git a/imports/api/parties/index.js b/imports/api/parties/index.js
deleted file mode 100644
index 96b72b2..0000000
--- a/imports/api/parties/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import './publish';
-import './methods';
-
-export * from './collection';
diff --git a/imports/api/parties/index.ts b/imports/api/parties/index.ts
new file mode 100644
index 0000000..96b72b2
--- /dev/null
+++ b/imports/api/parties/index.ts
@@ -0,0 +1,4 @@
+import './publish';
+import './methods';
+
+export * from './collection';
diff --git a/imports/api/parties/methods.js b/imports/api/parties/methods.js
deleted file mode 100644
index e8aa1ad..0000000
--- a/imports/api/parties/methods.js
+++ /dev/null
@@ -1,144 +0,0 @@
-import _ from 'underscore';
-import { Meteor } from 'meteor/meteor';
-import { check } from 'meteor/check';
-import { Email } from 'meteor/email';
-
-import { Parties } from './collection';
-
-function getContactEmail(user) {
-  if (user.emails && user.emails.length)
-    return user.emails[0].address;
-
-  if (user.services && user.services.facebook && user.services.facebook.email)
-    return user.services.facebook.email;
-
-  return null;
-}
-
-export function invite(partyId, userId) {
-  check(partyId, String);
-  check(userId, String);
-
-  if (!this.userId) {
-    throw new Meteor.Error(400, 'You have to be logged in!');
-  }
-
-  const party = Parties.findOne(partyId);
-
-  if (!party) {
-    throw new Meteor.Error(404, 'No such party!');
-  }
-
-  if (party.owner !== this.userId) {
-    throw new Meteor.Error(404, 'No permissions!');
-  }
-
-  if (party.public) {
-    throw new Meteor.Error(400, 'That party is public. No need to invite people.');
-  }
-
-  if (userId !== party.owner && ! _.contains(party.invited, userId)) {
-    Parties.update(partyId, {
-      $addToSet: {
-        invited: userId
-      }
-    });
-
-    const replyTo = getContactEmail(Meteor.users.findOne(this.userId));
-    const to = getContactEmail(Meteor.users.findOne(userId));
-
-    if (Meteor.isServer && to) {
-      Email.send({
-        to,
-        replyTo,
-        from: 'noreply@socially.com',
-        subject: `PARTY: ${party.title}`,
-        text: `
-          Hey, I just invited you to ${party.title} on Socially.
-          Come check it out: ${Meteor.absoluteUrl()}
-        `
-      });
-    }
-  }
-}
-
-export function rsvp(partyId, rsvp) {
-  check(partyId, String);
-  check(rsvp, String);
-
-  if (!this.userId) {
-    throw new Meteor.Error(403, 'You must be logged in to RSVP');
-  }
-
-  if (!_.contains(['yes', 'no', 'maybe'], rsvp)) {
-    throw new Meteor.Error(400, 'Invalid RSVP');
-  }
-
-  const party = Parties.findOne({
-    _id: partyId,
-    $or: [{
-      // is public
-      $and: [{
-        public: true
-      }, {
-        public: {
-          $exists: true
-        }
-      }]
-    },{
-      // is owner
-      $and: [{
-        owner: this.userId
-      }, {
-        owner: {
-          $exists: true
-        }
-      }]
-    }, {
-      // is invited
-      $and: [{
-        invited: this.userId
-      }, {
-        invited: {
-          $exists: true
-        }
-      }]
-    }]
-  });
-
-  if (!party) {
-    throw new Meteor.Error(404, 'No such party');
-  }
-
-  const hasUserRsvp = _.findWhere(party.rsvps, {
-    user: this.userId
-  });
-
-  if (!hasUserRsvp) {
-    // add new rsvp entry
-    Parties.update(partyId, {
-      $push: {
-        rsvps: {
-          rsvp,
-          user: this.userId
-        }
-      }
-    });
-  } else {
-    // update rsvp entry
-    const userId = this.userId;
-    Parties.update({
-      _id: partyId,
-      'rsvps.user': userId
-    }, {
-      $set: {
-        'rsvps.$.rsvp': rsvp
-      }
-    });
-  }
-}
-
-Meteor.methods({
-  invite,
-  rsvp
-});
diff --git a/imports/api/parties/methods.tests.js b/imports/api/parties/methods.tests.js
deleted file mode 100644
index 536a2b0..0000000
--- a/imports/api/parties/methods.tests.js
+++ /dev/null
@@ -1,178 +0,0 @@
-import { invite, rsvp } from './methods';
-import { Parties } from './collection';
-
-import { Meteor } from 'meteor/meteor';
-
-if (Meteor.isServer) {
-  describe('Parties / Methods', () => {
-    describe('invite', () => {
-      function loggedIn(userId = 'userId') {
-        return {
-          userId
-        };
-      }
-
-      it('should be called from Method', () => {
-        spyOn(invite, 'apply');
-
-        try {
-          Meteor.call('invite');
-        } catch (e) {}
-
-        expect(invite.apply).toHaveBeenCalled();
-      });
-
-      it('should fail on missing partyId', () => {
-        expect(() => {
-          invite.call({});
-        }).toThrowError();
-      });
-
-      it('should fail on missing userId', () => {
-        expect(() => {
-          invite.call({}, 'partyId');
-        }).toThrowError();
-      });
-
-      it('should fail on not logged in', () => {
-        expect(() => {
-          invite.call({}, 'partyId', 'userId');
-        }).toThrowError(/logged in/i);
-      });
-
-      it('should look for a party', () => {
-        const partyId = 'partyId';
-        spyOn(Parties, 'findOne');
-
-        try {
-          invite.call(loggedIn(), partyId, 'userId');
-        } catch (e) {}
-
-        expect(Parties.findOne).toHaveBeenCalledWith(partyId);
-      });
-
-      it('should fail if party does not exist', () => {
-        spyOn(Parties, 'findOne').and.returnValue(undefined);
-
-        expect(() => {
-          invite.call(loggedIn(), 'partyId', 'userId');
-        }).toThrowError(/404/);
-      });
-
-      it('should fail if logged in user is not the owner', () => {
-        spyOn(Parties, 'findOne').and.returnValue({
-          owner: 'notUserId'
-        });
-
-        expect(() => {
-          invite.call(loggedIn(), 'partyId', 'userId');
-        }).toThrowError(/404/);
-      });
-
-      it('should fail on public party', () => {
-        spyOn(Parties, 'findOne').and.returnValue({
-          owner: 'userId',
-          public: true
-        });
-
-        expect(() => {
-          invite.call(loggedIn(), 'partyId', 'userId');
-        }).toThrowError(/400/);
-      });
-
-      it('should NOT invite user who is the owner', () => {
-        spyOn(Parties, 'findOne').and.returnValue({
-          owner: 'userId'
-        });
-        spyOn(Parties, 'update');
-
-        invite.call(loggedIn(), 'partyId', 'userId');
-
-        expect(Parties.update).not.toHaveBeenCalled();
-      });
-
-      it('should NOT invite user who has been already invited', () => {
-        spyOn(Parties, 'findOne').and.returnValue({
-          owner: 'userId',
-          invited: ['invitedId']
-        });
-        spyOn(Parties, 'update');
-
-        invite.call(loggedIn(), 'partyId', 'invitedId');
-
-        expect(Parties.update).not.toHaveBeenCalled();
-      });
-
-      it('should invite user who has not been invited and is not the owner', () => {
-        const partyId = 'partyId';
-        const userId = 'notInvitedId';
-        spyOn(Parties, 'findOne').and.returnValue({
-          owner: 'userId',
-          invited: ['invitedId']
-        });
-        spyOn(Parties, 'update');
-        spyOn(Meteor.users, 'findOne').and.returnValue({});
-
-        invite.call(loggedIn(), partyId, userId);
-
-        expect(Parties.update).toHaveBeenCalledWith(partyId, {
-          $addToSet: {
-            invited: userId
-          }
-        });
-      });
-    });
-
-    describe('rsvp', () => {
-      function loggedIn(userId = 'userId') {
-        return {
-          userId
-        };
-      }
-
-      it('should be called from Method', () => {
-        spyOn(rsvp, 'apply');
-
-        try {
-          Meteor.call('rsvp');
-        } catch (e) {}
-
-        expect(rsvp.apply).toHaveBeenCalled();
-      });
-
-      it('should fail on missing partyId', () => {
-        expect(() => {
-          rsvp.call({});
-        }).toThrowError();
-      });
-
-      it('should fail on missing rsvp', () => {
-        expect(() => {
-          rsvp.call({}, 'partyId');
-        }).toThrowError();
-      });
-
-      it('should fail if not logged in', () => {
-        expect(() => {
-          rsvp.call({}, 'partyId', 'rsvp');
-        }).toThrowError(/403/);
-      });
-
-      it('should fail on wrong answer', () => {
-        expect(() => {
-          rsvp.call(loggedIn(), 'partyId', 'wrong');
-        }).toThrowError(/400/);
-      });
-
-      ['yes', 'maybe', 'no'].forEach((answer) => {
-        it(`should pass on '${answer}'`, () => {
-          expect(() => {
-            rsvp.call(loggedIn(), 'partyId', answer);
-          }).not.toThrowError(/400/);
-        });
-      });
-
-      // TODO: more tests  
-    });
-  });
-}
diff --git a/imports/api/parties/methods.tests.ts b/imports/api/parties/methods.tests.ts
new file mode 100644
index 0000000..536a2b0
--- /dev/null
+++ b/imports/api/parties/methods.tests.ts
@@ -0,0 +1,178 @@
+import { invite, rsvp } from './methods';
+import { Parties } from './collection';
+
+import { Meteor } from 'meteor/meteor';
+
+if (Meteor.isServer) {
+  describe('Parties / Methods', () => {
+    describe('invite', () => {
+      function loggedIn(userId = 'userId') {
+        return {
+          userId
+        };
+      }
+
+      it('should be called from Method', () => {
+        spyOn(invite, 'apply');
+
+        try {
+          Meteor.call('invite');
+        } catch (e) {}
+
+        expect(invite.apply).toHaveBeenCalled();
+      });
+
+      it('should fail on missing partyId', () => {
+        expect(() => {
+          invite.call({});
+        }).toThrowError();
+      });
+
+      it('should fail on missing userId', () => {
+        expect(() => {
+          invite.call({}, 'partyId');
+        }).toThrowError();
+      });
+
+      it('should fail on not logged in', () => {
+        expect(() => {
+          invite.call({}, 'partyId', 'userId');
+        }).toThrowError(/logged in/i);
+      });
+
+      it('should look for a party', () => {
+        const partyId = 'partyId';
+        spyOn(Parties, 'findOne');
+
+        try {
+          invite.call(loggedIn(), partyId, 'userId');
+        } catch (e) {}
+
+        expect(Parties.findOne).toHaveBeenCalledWith(partyId);
+      });
+
+      it('should fail if party does not exist', () => {
+        spyOn(Parties, 'findOne').and.returnValue(undefined);
+
+        expect(() => {
+          invite.call(loggedIn(), 'partyId', 'userId');
+        }).toThrowError(/404/);
+      });
+
+      it('should fail if logged in user is not the owner', () => {
+        spyOn(Parties, 'findOne').and.returnValue({
+          owner: 'notUserId'
+        });
+
+        expect(() => {
+          invite.call(loggedIn(), 'partyId', 'userId');
+        }).toThrowError(/404/);
+      });
+
+      it('should fail on public party', () => {
+        spyOn(Parties, 'findOne').and.returnValue({
+          owner: 'userId',
+          public: true
+        });
+
+        expect(() => {
+          invite.call(loggedIn(), 'partyId', 'userId');
+        }).toThrowError(/400/);
+      });
+
+      it('should NOT invite user who is the owner', () => {
+        spyOn(Parties, 'findOne').and.returnValue({
+          owner: 'userId'
+        });
+        spyOn(Parties, 'update');
+
+        invite.call(loggedIn(), 'partyId', 'userId');
+
+        expect(Parties.update).not.toHaveBeenCalled();
+      });
+
+      it('should NOT invite user who has been already invited', () => {
+        spyOn(Parties, 'findOne').and.returnValue({
+          owner: 'userId',
+          invited: ['invitedId']
+        });
+        spyOn(Parties, 'update');
+
+        invite.call(loggedIn(), 'partyId', 'invitedId');
+
+        expect(Parties.update).not.toHaveBeenCalled();
+      });
+
+      it('should invite user who has not been invited and is not the owner', () => {
+        const partyId = 'partyId';
+        const userId = 'notInvitedId';
+        spyOn(Parties, 'findOne').and.returnValue({
+          owner: 'userId',
+          invited: ['invitedId']
+        });
+        spyOn(Parties, 'update');
+        spyOn(Meteor.users, 'findOne').and.returnValue({});
+
+        invite.call(loggedIn(), partyId, userId);
+
+        expect(Parties.update).toHaveBeenCalledWith(partyId, {
+          $addToSet: {
+            invited: userId
+          }
+        });
+      });
+    });
+
+    describe('rsvp', () => {
+      function loggedIn(userId = 'userId') {
+        return {
+          userId
+        };
+      }
+
+      it('should be called from Method', () => {
+        spyOn(rsvp, 'apply');
+
+        try {
+          Meteor.call('rsvp');
+        } catch (e) {}
+
+        expect(rsvp.apply).toHaveBeenCalled();
+      });
+
+      it('should fail on missing partyId', () => {
+        expect(() => {
+          rsvp.call({});
+        }).toThrowError();
+      });
+
+      it('should fail on missing rsvp', () => {
+        expect(() => {
+          rsvp.call({}, 'partyId');
+        }).toThrowError();
+      });
+
+      it('should fail if not logged in', () => {
+        expect(() => {
+          rsvp.call({}, 'partyId', 'rsvp');
+        }).toThrowError(/403/);
+      });
+
+      it('should fail on wrong answer', () => {
+        expect(() => {
+          rsvp.call(loggedIn(), 'partyId', 'wrong');
+        }).toThrowError(/400/);
+      });
+
+      ['yes', 'maybe', 'no'].forEach((answer) => {
+        it(`should pass on '${answer}'`, () => {
+          expect(() => {
+            rsvp.call(loggedIn(), 'partyId', answer);
+          }).not.toThrowError(/400/);
+        });
+      });
+
+      // TODO: more tests  
+    });
+  });
+}
diff --git a/imports/api/parties/methods.ts b/imports/api/parties/methods.ts
new file mode 100644
index 0000000..e8aa1ad
--- /dev/null
+++ b/imports/api/parties/methods.ts
@@ -0,0 +1,144 @@
+import _ from 'underscore';
+import { Meteor } from 'meteor/meteor';
+import { check } from 'meteor/check';
+import { Email } from 'meteor/email';
+
+import { Parties } from './collection';
+
+function getContactEmail(user) {
+  if (user.emails && user.emails.length)
+    return user.emails[0].address;
+
+  if (user.services && user.services.facebook && user.services.facebook.email)
+    return user.services.facebook.email;
+
+  return null;
+}
+
+export function invite(partyId, userId) {
+  check(partyId, String);
+  check(userId, String);
+
+  if (!this.userId) {
+    throw new Meteor.Error(400, 'You have to be logged in!');
+  }
+
+  const party = Parties.findOne(partyId);
+
+  if (!party) {
+    throw new Meteor.Error(404, 'No such party!');
+  }
+
+  if (party.owner !== this.userId) {
+    throw new Meteor.Error(404, 'No permissions!');
+  }
+
+  if (party.public) {
+    throw new Meteor.Error(400, 'That party is public. No need to invite people.');
+  }
+
+  if (userId !== party.owner && ! _.contains(party.invited, userId)) {
+    Parties.update(partyId, {
+      $addToSet: {
+        invited: userId
+      }
+    });
+
+    const replyTo = getContactEmail(Meteor.users.findOne(this.userId));
+    const to = getContactEmail(Meteor.users.findOne(userId));
+
+    if (Meteor.isServer && to) {
+      Email.send({
+        to,
+        replyTo,
+        from: 'noreply@socially.com',
+        subject: `PARTY: ${party.title}`,
+        text: `
+          Hey, I just invited you to ${party.title} on Socially.
+          Come check it out: ${Meteor.absoluteUrl()}
+        `
+      });
+    }
+  }
+}
+
+export function rsvp(partyId, rsvp) {
+  check(partyId, String);
+  check(rsvp, String);
+
+  if (!this.userId) {
+    throw new Meteor.Error(403, 'You must be logged in to RSVP');
+  }
+
+  if (!_.contains(['yes', 'no', 'maybe'], rsvp)) {
+    throw new Meteor.Error(400, 'Invalid RSVP');
+  }
+
+  const party = Parties.findOne({
+    _id: partyId,
+    $or: [{
+      // is public
+      $and: [{
+        public: true
+      }, {
+        public: {
+          $exists: true
+        }
+      }]
+    },{
+      // is owner
+      $and: [{
+        owner: this.userId
+      }, {
+        owner: {
+          $exists: true
+        }
+      }]
+    }, {
+      // is invited
+      $and: [{
+        invited: this.userId
+      }, {
+        invited: {
+          $exists: true
+        }
+      }]
+    }]
+  });
+
+  if (!party) {
+    throw new Meteor.Error(404, 'No such party');
+  }
+
+  const hasUserRsvp = _.findWhere(party.rsvps, {
+    user: this.userId
+  });
+
+  if (!hasUserRsvp) {
+    // add new rsvp entry
+    Parties.update(partyId, {
+      $push: {
+        rsvps: {
+          rsvp,
+          user: this.userId
+        }
+      }
+    });
+  } else {
+    // update rsvp entry
+    const userId = this.userId;
+    Parties.update({
+      _id: partyId,
+      'rsvps.user': userId
+    }, {
+      $set: {
+        'rsvps.$.rsvp': rsvp
+      }
+    });
+  }
+}
+
+Meteor.methods({
+  invite,
+  rsvp
+});
diff --git a/imports/api/parties/publish.js b/imports/api/parties/publish.js
deleted file mode 100644
index 0d4d340..0000000
--- a/imports/api/parties/publish.js
+++ /dev/null
@@ -1,52 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-import { Counts } from 'meteor/tmeasday:publish-counts';
-
-import { Parties } from './collection';
-
-if (Meteor.isServer) {
-  Meteor.publish('parties', function(options, searchString) {
-    const selector = {
-      $or: [{
-        // the public parties
-        $and: [{
-          public: true
-        }, {
-          public: {
-            $exists: true
-          }
-        }]
-      }, {
-        // when logged in user is the owner
-        $and: [{
-          owner: this.userId
-        }, {
-          owner: {
-            $exists: true
-          }
-        }]
-      }, {
-        // when logged in user is one of invited
-        $and: [{
-          invited: this.userId
-        }, {
-          invited: {
-            $exists: true
-          }
-        }]
-      }]
-    };
-
-    if (typeof searchString === 'string' && searchString.length) {
-      selector.name = {
-        $regex: `.*${searchString}.*`,
-        $options : 'i'
-      };
-    }
-
-    Counts.publish(this, 'numberOfParties', Parties.find(selector), {
-      noReady: true
-    });
-
-    return Parties.find(selector, options);
-  });
-}
diff --git a/imports/api/parties/publish.ts b/imports/api/parties/publish.ts
new file mode 100644
index 0000000..0d4d340
--- /dev/null
+++ b/imports/api/parties/publish.ts
@@ -0,0 +1,52 @@
+import { Meteor } from 'meteor/meteor';
+import { Counts } from 'meteor/tmeasday:publish-counts';
+
+import { Parties } from './collection';
+
+if (Meteor.isServer) {
+  Meteor.publish('parties', function(options, searchString) {
+    const selector = {
+      $or: [{
+        // the public parties
+        $and: [{
+          public: true
+        }, {
+          public: {
+            $exists: true
+          }
+        }]
+      }, {
+        // when logged in user is the owner
+        $and: [{
+          owner: this.userId
+        }, {
+          owner: {
+            $exists: true
+          }
+        }]
+      }, {
+        // when logged in user is one of invited
+        $and: [{
+          invited: this.userId
+        }, {
+          invited: {
+            $exists: true
+          }
+        }]
+      }]
+    };
+
+    if (typeof searchString === 'string' && searchString.length) {
+      selector.name = {
+        $regex: `.*${searchString}.*`,
+        $options : 'i'
+      };
+    }
+
+    Counts.publish(this, 'numberOfParties', Parties.find(selector), {
+      noReady: true
+    });
+
+    return Parties.find(selector, options);
+  });
+}
diff --git a/imports/api/users.js b/imports/api/users.js
deleted file mode 100644
index 4c9fee9..0000000
--- a/imports/api/users.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-
-if (Meteor.isServer) {
-  Meteor.publish('users', function() {
-    return Meteor.users.find({}, {
-      fields: {
-        emails: 1,
-        profile: 1
-      }
-    });
-  });
-}
diff --git a/imports/api/users.ts b/imports/api/users.ts
new file mode 100644
index 0000000..4c9fee9
--- /dev/null
+++ b/imports/api/users.ts
@@ -0,0 +1,12 @@
+import { Meteor } from 'meteor/meteor';
+
+if (Meteor.isServer) {
+  Meteor.publish('users', function() {
+    return Meteor.users.find({}, {
+      fields: {
+        emails: 1,
+        profile: 1
+      }
+    });
+  });
+}
diff --git a/imports/startup/fixtures.js b/imports/startup/fixtures.js
deleted file mode 100644
index d92fb48..0000000
--- a/imports/startup/fixtures.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-import { Parties } from '../api/parties';
-
-Meteor.startup(() => {
-  if (Parties.find().count() === 0) {
-    const parties = [{
-      'name': 'Dubstep-Free Zone',
-      'description': 'Fast just got faster with Nexus S.'
-    }, {
-      'name': 'All dubstep all the time',
-      'description': 'Get it on!'
-    }, {
-      'name': 'Savage lounging',
-      'description': 'Leisure suit required. And only fiercest manners.'
-    }];
-
-    parties.forEach((party) => {
-      Parties.insert(party)
-    });
-  }
-});
diff --git a/imports/startup/fixtures.ts b/imports/startup/fixtures.ts
new file mode 100644
index 0000000..d92fb48
--- /dev/null
+++ b/imports/startup/fixtures.ts
@@ -0,0 +1,21 @@
+import { Meteor } from 'meteor/meteor';
+import { Parties } from '../api/parties';
+
+Meteor.startup(() => {
+  if (Parties.find().count() === 0) {
+    const parties = [{
+      'name': 'Dubstep-Free Zone',
+      'description': 'Fast just got faster with Nexus S.'
+    }, {
+      'name': 'All dubstep all the time',
+      'description': 'Get it on!'
+    }, {
+      'name': 'Savage lounging',
+      'description': 'Leisure suit required. And only fiercest manners.'
+    }];
+
+    parties.forEach((party) => {
+      Parties.insert(party)
+    });
+  }
+});
diff --git a/imports/ui/components/auth/auth.js b/imports/ui/components/auth/auth.js
deleted file mode 100644
index a87dd5e..0000000
--- a/imports/ui/components/auth/auth.js
+++ /dev/null
@@ -1,47 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import { Meteor } from 'meteor/meteor';
-import { Accounts } from 'meteor/accounts-base';
-
-import template from './auth.html';
-import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
-import { name as Login } from '../login/login';
-import { name as Register } from '../register/register';
-import { name as Password } from '../password/password';
-
-const name = 'auth';
-
-class Auth {
-  constructor($scope, $reactive) {
-    'ngInject';
-
-    $reactive(this).attach($scope);
-
-    this.helpers({
-      isLoggedIn() {
-        return !!Meteor.userId();
-      },
-      currentUser() {
-        return Meteor.user();
-      }
-    });
-  }
-
-  logout() {
-    Accounts.logout();
-  }
-}
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  DisplayNameFilter,
-  Login,
-  Register,
-  Password
-]).component(name, {
-  template,
-  controllerAs: name,
-  controller: Auth
-});
diff --git a/imports/ui/components/auth/auth.ts b/imports/ui/components/auth/auth.ts
new file mode 100644
index 0000000..80c54d0
--- /dev/null
+++ b/imports/ui/components/auth/auth.ts
@@ -0,0 +1,47 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+import { Accounts } from 'meteor/accounts-base';
+
+import template from './auth.html';
+import DisplayNameFilter from '../../filters/displayNameFilter';
+import Login from '../login/login';
+import Register from '../register/register';
+import Password from '../password/password';
+
+const name = 'auth';
+
+class Auth {
+  constructor($scope, $reactive) {
+    'ngInject';
+
+    $reactive(this).attach($scope);
+
+    this.helpers({
+      isLoggedIn() {
+        return !!Meteor.userId();
+      },
+      currentUser() {
+        return Meteor.user();
+      }
+    });
+  }
+
+  logout() {
+    Accounts.logout();
+  }
+}
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  DisplayNameFilter.name,
+  Login.name,
+  Register.name,
+  Password.name
+]).component(name, {
+  template,
+  controllerAs: name,
+  controller: Auth
+});
diff --git a/imports/ui/components/login/login.js b/imports/ui/components/login/login.js
deleted file mode 100644
index 376fcaf..0000000
--- a/imports/ui/components/login/login.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import uiRouter from 'angular-ui-router';
-
-import { Meteor } from 'meteor/meteor';
-
-import webTemplate from './web.html';
-import { Login as LoginWeb } from './web';
-import mobileTemplate from './mobile.html';
-import { Login as LoginMobile } from './mobile';
-
-const name = 'login';
-const template = Meteor.isCordova ? mobileTemplate : webTemplate;
-const controller = Meteor.isCordova ? LoginMobile : LoginWeb;
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  uiRouter
-])
-  .component(name, {
-    template,
-    controller,
-    controllerAs: name
-  })
-  .config(config);
-
-function config($stateProvider) {
-  'ngInject';
-
-  $stateProvider.state('login', {
-    url: '/login',
-    template: '<login></login>'
-  });
-}
diff --git a/imports/ui/components/login/login.ts b/imports/ui/components/login/login.ts
new file mode 100644
index 0000000..975d64f
--- /dev/null
+++ b/imports/ui/components/login/login.ts
@@ -0,0 +1,35 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+import * as uiRouter from 'angular-ui-router';
+
+import { Meteor } from 'meteor/meteor';
+
+import webTemplate from './web.html';
+import LoginWeb from './web';
+import mobileTemplate from './mobile.html';
+import LoginMobile from './mobile';
+
+const name = 'login';
+const template = Meteor.isCordova ? mobileTemplate : webTemplate;
+const controller = Meteor.isCordova ? LoginMobile : LoginWeb;
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  uiRouter
+])
+  .component(name, {
+    template,
+    controller,
+    controllerAs: name
+  })
+  .config(config);
+
+function config($stateProvider) {
+  'ngInject';
+
+  $stateProvider.state('login', {
+    url: '/login',
+    template: '<login></login>'
+  });
+}
diff --git a/imports/ui/components/login/mobile.js b/imports/ui/components/login/mobile.js
deleted file mode 100644
index 798d563..0000000
--- a/imports/ui/components/login/mobile.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import { Accounts } from 'meteor/accounts-base';
-
-export class Login {
-  constructor($scope, $reactive, $state) {
-    'ngInject';
-
-    this.$state = $state;
-
-    $reactive(this).attach($scope);
-
-    this.isStepTwo = false;
-    this.phoneNumber = '';
-    this.verificationCode = '';
-    this.error = '';
-  }
-
-  verifyPhone() {
-    Accounts.requestPhoneVerification(this.phoneNumber, this.$bindToContext((err) => {
-      if (err) {
-        // display also reason of Meteor.Error
-        this.error = err.reason || err;
-      } else {
-        this.error = '';
-        // move to code verification
-        this.isStepTwo = true;
-      }
-    }));
-  }
-
-  verifyCode() {
-    Accounts.verifyPhone(this.phoneNumber, this.verificationCode, this.$bindToContext((err) => {
-      if (err) {
-        this.error = err.reason || err;
-      } else {
-        // redirect to parties list
-        this.$state.go('parties');
-      }
-    }));
-  }
-}
diff --git a/imports/ui/components/login/mobile.ts b/imports/ui/components/login/mobile.ts
new file mode 100644
index 0000000..798d563
--- /dev/null
+++ b/imports/ui/components/login/mobile.ts
@@ -0,0 +1,40 @@
+import { Accounts } from 'meteor/accounts-base';
+
+export class Login {
+  constructor($scope, $reactive, $state) {
+    'ngInject';
+
+    this.$state = $state;
+
+    $reactive(this).attach($scope);
+
+    this.isStepTwo = false;
+    this.phoneNumber = '';
+    this.verificationCode = '';
+    this.error = '';
+  }
+
+  verifyPhone() {
+    Accounts.requestPhoneVerification(this.phoneNumber, this.$bindToContext((err) => {
+      if (err) {
+        // display also reason of Meteor.Error
+        this.error = err.reason || err;
+      } else {
+        this.error = '';
+        // move to code verification
+        this.isStepTwo = true;
+      }
+    }));
+  }
+
+  verifyCode() {
+    Accounts.verifyPhone(this.phoneNumber, this.verificationCode, this.$bindToContext((err) => {
+      if (err) {
+        this.error = err.reason || err;
+      } else {
+        // redirect to parties list
+        this.$state.go('parties');
+      }
+    }));
+  }
+}
diff --git a/imports/ui/components/login/web.js b/imports/ui/components/login/web.js
deleted file mode 100644
index bc7b752..0000000
--- a/imports/ui/components/login/web.js
+++ /dev/null
@@ -1,30 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-
-export class Login {
-  constructor($scope, $reactive, $state) {
-    'ngInject';
-
-    this.$state = $state;
-
-    $reactive(this).attach($scope);
-
-    this.credentials = {
-      email: '',
-      password: ''
-    };
-
-    this.error = '';
-  }
-
-  login() {
-    Meteor.loginWithPassword(this.credentials.email, this.credentials.password,
-      this.$bindToContext((err) => {
-        if (err) {
-          this.error = err;
-        } else {
-          this.$state.go('parties');
-        }
-      })
-    );
-  }
-}
diff --git a/imports/ui/components/login/web.ts b/imports/ui/components/login/web.ts
new file mode 100644
index 0000000..bc7b752
--- /dev/null
+++ b/imports/ui/components/login/web.ts
@@ -0,0 +1,30 @@
+import { Meteor } from 'meteor/meteor';
+
+export class Login {
+  constructor($scope, $reactive, $state) {
+    'ngInject';
+
+    this.$state = $state;
+
+    $reactive(this).attach($scope);
+
+    this.credentials = {
+      email: '',
+      password: ''
+    };
+
+    this.error = '';
+  }
+
+  login() {
+    Meteor.loginWithPassword(this.credentials.email, this.credentials.password,
+      this.$bindToContext((err) => {
+        if (err) {
+          this.error = err;
+        } else {
+          this.$state.go('parties');
+        }
+      })
+    );
+  }
+}
diff --git a/imports/ui/components/navigation/navigation.js b/imports/ui/components/navigation/navigation.js
deleted file mode 100644
index 5e33f59..0000000
--- a/imports/ui/components/navigation/navigation.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import template from './navigation.html';
-
-const name = 'navigation';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor
-]).component(name, {
-  template,
-  controllerAs: name
-});
diff --git a/imports/ui/components/navigation/navigation.ts b/imports/ui/components/navigation/navigation.ts
new file mode 100644
index 0000000..e391793
--- /dev/null
+++ b/imports/ui/components/navigation/navigation.ts
@@ -0,0 +1,14 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import template from './navigation.html';
+
+const name = 'navigation';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name
+});
diff --git a/imports/ui/components/partiesList/client/partiesList.tests.js b/imports/ui/components/partiesList/client/partiesList.tests.js
deleted file mode 100644
index 176da85..0000000
--- a/imports/ui/components/partiesList/client/partiesList.tests.js
+++ /dev/null
@@ -1,50 +0,0 @@
-import { name as PartiesList } from '../partiesList';
-import 'angular-mocks';
-
-describe('PartiesList', () => {
-  beforeEach(() => {
-    window.module(PartiesList);
-  });
-
-  describe('controller', () => {
-    let controller;
-
-    beforeEach(() => {
-      inject(($rootScope, $componentController) => {
-        controller = $componentController(PartiesList, {
-          $scope: $rootScope.$new(true)
-        });
-      });
-    });
-
-    it('should have perPage that equals 3 by default', () => {
-      expect(controller.perPage).toEqual(3);
-    });
-
-    it('should have page that equals 1 by default', () => {
-      expect(controller.page).toEqual(1);
-    });
-
-    it('should sort by name - ASC', () => {
-      expect(controller.sort).toEqual({
-        name: 1
-      });
-    });
-
-    it('should be able to change sorting', () => {
-      controller.sortChanged({
-        name: -1
-      });
-
-      expect(controller.sort).toEqual({
-        name: -1
-      });
-    });
-
-    it('should be able to change page', () => {
-      controller.pageChanged(2);
-
-      expect(controller.page).toEqual(2);
-    });
-  });
-});
diff --git a/imports/ui/components/partiesList/client/partiesList.tests.ts b/imports/ui/components/partiesList/client/partiesList.tests.ts
new file mode 100644
index 0000000..3bee850
--- /dev/null
+++ b/imports/ui/components/partiesList/client/partiesList.tests.ts
@@ -0,0 +1,50 @@
+import PartiesList from '../partiesList';
+import 'angular-mocks';
+
+describe('PartiesList', () => {
+  beforeEach(() => {
+    window.module(PartiesList.name);
+  });
+
+  describe('controller', () => {
+    let controller;
+
+    beforeEach(() => {
+      inject(($rootScope, $componentController) => {
+        controller = $componentController(PartiesList.name, {
+          $scope: $rootScope.$new(true)
+        });
+      });
+    });
+
+    it('should have perPage that equals 3 by default', () => {
+      expect(controller.perPage).toEqual(3);
+    });
+
+    it('should have page that equals 1 by default', () => {
+      expect(controller.page).toEqual(1);
+    });
+
+    it('should sort by name - ASC', () => {
+      expect(controller.sort).toEqual({
+        name: 1
+      });
+    });
+
+    it('should be able to change sorting', () => {
+      controller.sortChanged({
+        name: -1
+      });
+
+      expect(controller.sort).toEqual({
+        name: -1
+      });
+    });
+
+    it('should be able to change page', () => {
+      controller.pageChanged(2);
+
+      expect(controller.page).toEqual(2);
+    });
+  });
+});
diff --git a/imports/ui/components/partiesList/partiesList.js b/imports/ui/components/partiesList/partiesList.js
deleted file mode 100644
index df916d9..0000000
--- a/imports/ui/components/partiesList/partiesList.js
+++ /dev/null
@@ -1,105 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import uiRouter from 'angular-ui-router';
-import utilsPagination from 'angular-utils-pagination';
-
-import { Counts } from 'meteor/tmeasday:publish-counts';
-import { Meteor } from 'meteor/meteor';
-
-import webTemplate from './web.html';
-import mobileTemplate from './mobile.html';
-import { Parties } from '../../../api/parties';
-import { name as PartiesSort } from '../partiesSort/partiesSort';
-import { name as PartiesMap } from '../partiesMap/partiesMap';
-import { name as PartyAddButton } from '../partyAddButton/partyAddButton';
-import { name as PartyRemove } from '../partyRemove/partyRemove';
-import { name as PartyCreator } from '../partyCreator/partyCreator';
-import { name as PartyRsvp } from '../partyRsvp/partyRsvp';
-import { name as PartyRsvpsList } from '../partyRsvpsList/partyRsvpsList';
-import { name as PartyImage } from '../partyImage/partyImage';
-
-class PartiesList {
-  constructor($scope, $reactive) {
-    'ngInject';
-
-    $reactive(this).attach($scope);
-
-    this.perPage = 3;
-    this.page = 1;
-    this.sort = {
-      name: 1
-    };
-    this.searchText = '';
-
-    this.subscribe('parties', () => [{
-        limit: parseInt(this.perPage),
-        skip: parseInt((this.getReactively('page') - 1) * this.perPage),
-        sort: this.getReactively('sort')
-      }, this.getReactively('searchText')
-    ]);
-
-    this.subscribe('users');
-    this.subscribe('images');
-
-    this.helpers({
-      parties() {
-        return Parties.find({}, {
-          sort : this.getReactively('sort')
-        });
-      },
-      partiesCount() {
-        return Counts.get('numberOfParties');
-      },
-      isLoggedIn() {
-        return !!Meteor.userId();
-      },
-      currentUserId() {
-        return Meteor.userId();
-      }
-    });
-  }
-
-  isOwner(party) {
-    return this.isLoggedIn && party.owner === this.currentUserId;
-  }
-
-  pageChanged(newPage) {
-    this.page = newPage;
-  }
-
-  sortChanged(sort) {
-    this.sort = sort;
-  }
-}
-
-const name = 'partiesList';
-const template = Meteor.isCordova ? mobileTemplate : webTemplate;
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  uiRouter,
-  utilsPagination,
-  PartiesSort,
-  PartiesMap,
-  PartyAddButton,
-  PartyRemove,
-  PartyCreator,
-  PartyRsvp,
-  PartyRsvpsList,
-  PartyImage
-]).component(name, {
-  template,
-  controllerAs: name,
-  controller: PartiesList
-})
-  .config(config);
-
-function config($stateProvider) {
-  'ngInject';
-  $stateProvider
-    .state('parties', {
-      url: '/parties',
-      template: '<parties-list></parties-list>'
-    });
-}
diff --git a/imports/ui/components/partiesList/partiesList.ts b/imports/ui/components/partiesList/partiesList.ts
new file mode 100644
index 0000000..a2dfa94
--- /dev/null
+++ b/imports/ui/components/partiesList/partiesList.ts
@@ -0,0 +1,105 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+import * as uiRouter from 'angular-ui-router';
+import * as utilsPagination from 'angular-utils-pagination';
+
+import { Counts } from 'meteor/tmeasday:publish-counts';
+import { Meteor } from 'meteor/meteor';
+
+import webTemplate from './web.html';
+import mobileTemplate from './mobile.html';
+import { Parties } from '../../../api/parties';
+import PartiesSort from '../partiesSort/partiesSort';
+import PartiesMap from '../partiesMap/partiesMap';
+import PartyAddButton from '../partyAddButton/partyAddButton';
+import PartyRemove from '../partyRemove/partyRemove';
+import PartyCreator from '../partyCreator/partyCreator';
+import PartyRsvp from '../partyRsvp/partyRsvp';
+import PartyRsvpsList from '../partyRsvpsList/partyRsvpsList';
+import PartyImage from '../partyImage/partyImage';
+
+class PartiesList {
+  constructor($scope, $reactive) {
+    'ngInject';
+
+    $reactive(this).attach($scope);
+
+    this.perPage = 3;
+    this.page = 1;
+    this.sort = {
+      name: 1
+    };
+    this.searchText = '';
+
+    this.subscribe('parties', () => [{
+        limit: parseInt(this.perPage),
+        skip: parseInt((this.getReactively('page') - 1) * this.perPage),
+        sort: this.getReactively('sort')
+      }, this.getReactively('searchText')
+    ]);
+
+    this.subscribe('users');
+    this.subscribe('images');
+
+    this.helpers({
+      parties() {
+        return Parties.find({}, {
+          sort : this.getReactively('sort')
+        });
+      },
+      partiesCount() {
+        return Counts.get('numberOfParties');
+      },
+      isLoggedIn() {
+        return !!Meteor.userId();
+      },
+      currentUserId() {
+        return Meteor.userId();
+      }
+    });
+  }
+
+  isOwner(party) {
+    return this.isLoggedIn && party.owner === this.currentUserId;
+  }
+
+  pageChanged(newPage) {
+    this.page = newPage;
+  }
+
+  sortChanged(sort) {
+    this.sort = sort;
+  }
+}
+
+const name = 'partiesList';
+const template = Meteor.isCordova ? mobileTemplate : webTemplate;
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  uiRouter,
+  utilsPagination,
+  PartiesSort.name,
+  PartiesMap.name,
+  PartyAddButton.name,
+  PartyRemove.name,
+  PartyCreator.name,
+  PartyRsvp.name,
+  PartyRsvpsList.name,
+  PartyImage.name
+]).component(name, {
+  template,
+  controllerAs: name,
+  controller: PartiesList
+})
+  .config(config);
+
+function config($stateProvider) {
+  'ngInject';
+  $stateProvider
+    .state('parties', {
+      url: '/parties',
+      template: '<parties-list></parties-list>'
+    });
+}
diff --git a/imports/ui/components/partiesMap/partiesMap.js b/imports/ui/components/partiesMap/partiesMap.js
deleted file mode 100644
index 1c94faf..0000000
--- a/imports/ui/components/partiesMap/partiesMap.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import 'angular-simple-logger';
-import 'angular-google-maps';
-
-import template from './partiesMap.html';
-
-/**
- * PartiesMap component
- */
-class PartiesMap {
-  constructor() {
-    this.map = {
-      center: {
-        latitude: 45,
-        longitude: -73
-      },
-      zoom: 8
-    };
-  }
-}
-
-const name = 'partiesMap';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  'nemLogging', // https://github.com/angular-ui/angular-google-maps/issues/1633
-  'uiGmapgoogle-maps'
-]).component(name, {
-  template,
-  controllerAs: name,
-  bindings: {
-    parties: '='
-  },
-  controller: PartiesMap
-});
diff --git a/imports/ui/components/partiesMap/partiesMap.ts b/imports/ui/components/partiesMap/partiesMap.ts
new file mode 100644
index 0000000..8c819e1
--- /dev/null
+++ b/imports/ui/components/partiesMap/partiesMap.ts
@@ -0,0 +1,37 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+import 'angular-simple-logger';
+import 'angular-google-maps';
+
+import template from './partiesMap.html';
+
+/**
+ * PartiesMap component
+ */
+class PartiesMap {
+  constructor() {
+    this.map = {
+      center: {
+        latitude: 45,
+        longitude: -73
+      },
+      zoom: 8
+    };
+  }
+}
+
+const name = 'partiesMap';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  'nemLogging', // https://github.com/angular-ui/angular-google-maps/issues/1633
+  'uiGmapgoogle-maps'
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    parties: '='
+  },
+  controller: PartiesMap
+});
diff --git a/imports/ui/components/partiesSort/client/partiesSort.tests.js b/imports/ui/components/partiesSort/client/partiesSort.tests.js
deleted file mode 100644
index 09d81b4..0000000
--- a/imports/ui/components/partiesSort/client/partiesSort.tests.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import { name as PartiesSort } from '../partiesSort';
-import 'angular-mocks';
-
-describe('PartiesSort', () => {
-  beforeEach(() => {
-    window.module(PartiesSort);
-  });
-
-  describe('controller', () => {
-    let controller;
-    const onChange = function() {};
-    const property = 'name';
-    const order = -1;
-
-
-    beforeEach(() => {
-      inject(($rootScope, $componentController) => {
-        controller = $componentController(PartiesSort, {
-          $scope: $rootScope.$new(true)
-        }, {
-          onChange,
-          property,
-          order
-        });
-      });
-    });
-
-    it('should set property', () => {
-      expect(controller.property).toEqual(property);
-    });
-
-    it('should set order', () => {
-      expect(controller.order).toEqual(order);
-    });
-
-    it('should set onChange', () => {
-      expect(controller.onChange).toBe(onChange);
-    });
-
-    describe('changed()', () => {
-      it('should call onChange expression', () => {
-        spyOn(controller, 'onChange');
-
-        controller.changed();
-
-        expect(controller.onChange).toHaveBeenCalledWith({
-          sort: {
-            [property]: order
-          }
-        });
-      });
-    });
-  });
-});
diff --git a/imports/ui/components/partiesSort/client/partiesSort.tests.ts b/imports/ui/components/partiesSort/client/partiesSort.tests.ts
new file mode 100644
index 0000000..09d81b4
--- /dev/null
+++ b/imports/ui/components/partiesSort/client/partiesSort.tests.ts
@@ -0,0 +1,54 @@
+import { name as PartiesSort } from '../partiesSort';
+import 'angular-mocks';
+
+describe('PartiesSort', () => {
+  beforeEach(() => {
+    window.module(PartiesSort);
+  });
+
+  describe('controller', () => {
+    let controller;
+    const onChange = function() {};
+    const property = 'name';
+    const order = -1;
+
+
+    beforeEach(() => {
+      inject(($rootScope, $componentController) => {
+        controller = $componentController(PartiesSort, {
+          $scope: $rootScope.$new(true)
+        }, {
+          onChange,
+          property,
+          order
+        });
+      });
+    });
+
+    it('should set property', () => {
+      expect(controller.property).toEqual(property);
+    });
+
+    it('should set order', () => {
+      expect(controller.order).toEqual(order);
+    });
+
+    it('should set onChange', () => {
+      expect(controller.onChange).toBe(onChange);
+    });
+
+    describe('changed()', () => {
+      it('should call onChange expression', () => {
+        spyOn(controller, 'onChange');
+
+        controller.changed();
+
+        expect(controller.onChange).toHaveBeenCalledWith({
+          sort: {
+            [property]: order
+          }
+        });
+      });
+    });
+  });
+});
diff --git a/imports/ui/components/partiesSort/partiesSort.js b/imports/ui/components/partiesSort/partiesSort.js
deleted file mode 100644
index d5ff3fb..0000000
--- a/imports/ui/components/partiesSort/partiesSort.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import template from './partiesSort.html';
-
-class PartiesSort {
-  constructor() {
-    this.changed();
-  }
-
-  changed() {
-    this.onChange({
-      sort: {
-        [this.property]: parseInt(this.order)
-      }
-    });
-  }
-}
-
-const name = 'partiesSort';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor
-]).component(name, {
-  template,
-  bindings: {
-    onChange: '&',
-    property: '@',
-    order: '@'
-  },
-  controllerAs: name,
-  controller: PartiesSort
-});
diff --git a/imports/ui/components/partiesSort/partiesSort.ts b/imports/ui/components/partiesSort/partiesSort.ts
new file mode 100644
index 0000000..7eb5212
--- /dev/null
+++ b/imports/ui/components/partiesSort/partiesSort.ts
@@ -0,0 +1,34 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import template from './partiesSort.html';
+
+class PartiesSort {
+  constructor() {
+    this.changed();
+  }
+
+  changed() {
+    this.onChange({
+      sort: {
+        [this.property]: parseInt(this.order)
+      }
+    });
+  }
+}
+
+const name = 'partiesSort';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  bindings: {
+    onChange: '&',
+    property: '@',
+    order: '@'
+  },
+  controllerAs: name,
+  controller: PartiesSort
+});
diff --git a/imports/ui/components/partyAdd/client/partyAdd.tests.js b/imports/ui/components/partyAdd/client/partyAdd.tests.js
deleted file mode 100644
index 3d27875..0000000
--- a/imports/ui/components/partyAdd/client/partyAdd.tests.js
+++ /dev/null
@@ -1,65 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-import { name as PartyAdd } from '../partyAdd';
-import { Parties } from '../../../../api/parties';
-import 'angular-mocks';
-
-describe('PartyAdd', () => {
-  beforeEach(() => {
-    window.module(PartyAdd);
-  });
-
-  describe('controller', () => {
-    let controller;
-    const party = {
-      name: 'Foo',
-      description: 'Birthday of Foo',
-      public: true
-    };
-    const user = {
-      _id: 'userId'
-    };
-
-    beforeEach(() => {
-      inject(($rootScope, $componentController) => {
-        controller = $componentController(PartyAdd, {
-          $scope: $rootScope.$new(true)
-        });
-      });
-
-      spyOn(Meteor, 'user').and.returnValue(user);
-    });
-
-    describe('reset()', () => {
-      it('should clean up party object', () => {
-        controller.party = party;
-        controller.reset();
-
-        expect(controller.party).toEqual({});
-      });
-    });
-
-    describe('submit()', () => {
-      beforeEach(() => {
-        spyOn(Parties, 'insert');
-        spyOn(controller, 'reset').and.callThrough();
-
-        controller.party = party;
-
-        controller.submit();
-      });
-
-      it('should insert a new party', () => {
-        expect(Parties.insert).toHaveBeenCalledWith({
-          name: party.name,
-          description: party.description,
-          public: party.public,
-          owner: user._id
-        });
-      });
-
-      it('should call reset()', () => {
-        expect(controller.reset).toHaveBeenCalled();
-      });
-    });
-  });
-});
diff --git a/imports/ui/components/partyAdd/client/partyAdd.tests.ts b/imports/ui/components/partyAdd/client/partyAdd.tests.ts
new file mode 100644
index 0000000..3d27875
--- /dev/null
+++ b/imports/ui/components/partyAdd/client/partyAdd.tests.ts
@@ -0,0 +1,65 @@
+import { Meteor } from 'meteor/meteor';
+import { name as PartyAdd } from '../partyAdd';
+import { Parties } from '../../../../api/parties';
+import 'angular-mocks';
+
+describe('PartyAdd', () => {
+  beforeEach(() => {
+    window.module(PartyAdd);
+  });
+
+  describe('controller', () => {
+    let controller;
+    const party = {
+      name: 'Foo',
+      description: 'Birthday of Foo',
+      public: true
+    };
+    const user = {
+      _id: 'userId'
+    };
+
+    beforeEach(() => {
+      inject(($rootScope, $componentController) => {
+        controller = $componentController(PartyAdd, {
+          $scope: $rootScope.$new(true)
+        });
+      });
+
+      spyOn(Meteor, 'user').and.returnValue(user);
+    });
+
+    describe('reset()', () => {
+      it('should clean up party object', () => {
+        controller.party = party;
+        controller.reset();
+
+        expect(controller.party).toEqual({});
+      });
+    });
+
+    describe('submit()', () => {
+      beforeEach(() => {
+        spyOn(Parties, 'insert');
+        spyOn(controller, 'reset').and.callThrough();
+
+        controller.party = party;
+
+        controller.submit();
+      });
+
+      it('should insert a new party', () => {
+        expect(Parties.insert).toHaveBeenCalledWith({
+          name: party.name,
+          description: party.description,
+          public: party.public,
+          owner: user._id
+        });
+      });
+
+      it('should call reset()', () => {
+        expect(controller.reset).toHaveBeenCalled();
+      });
+    });
+  });
+});
diff --git a/imports/ui/components/partyAdd/partyAdd.js b/imports/ui/components/partyAdd/partyAdd.js
deleted file mode 100644
index 47f09fe..0000000
--- a/imports/ui/components/partyAdd/partyAdd.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import { Meteor } from 'meteor/meteor';
-
-import template from './partyAdd.html';
-import { Parties } from '../../../api/parties';
-import { name as PartyUpload } from '../partyUpload/partyUpload';
-
-class PartyAdd {
-  constructor() {
-    this.party = {};
-  }
-
-  submit() {
-    this.party.owner = Meteor.user()._id;
-    Parties.insert(this.party);
-
-    if(this.done) {
-      this.done();
-    }
-
-    this.reset();
-  }
-
-  reset() {
-    this.party = {};
-  }
-}
-
-const name = 'partyAdd';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  PartyUpload
-]).component(name, {
-  template,
-  bindings: {
-    done: '&?'
-  },
-  controllerAs: name,
-  controller: PartyAdd
-});
diff --git a/imports/ui/components/partyAdd/partyAdd.ts b/imports/ui/components/partyAdd/partyAdd.ts
new file mode 100644
index 0000000..7f47e79
--- /dev/null
+++ b/imports/ui/components/partyAdd/partyAdd.ts
@@ -0,0 +1,44 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyAdd.html';
+import { Parties } from '../../../api/parties';
+import PartyUpload from '../partyUpload/partyUpload';
+
+class PartyAdd {
+  constructor() {
+    this.party = {};
+  }
+
+  submit() {
+    this.party.owner = Meteor.user()._id;
+    Parties.insert(this.party);
+
+    if(this.done) {
+      this.done();
+    }
+
+    this.reset();
+  }
+
+  reset() {
+    this.party = {};
+  }
+}
+
+const name = 'partyAdd';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  PartyUpload.name
+]).component(name, {
+  template,
+  bindings: {
+    done: '&?'
+  },
+  controllerAs: name,
+  controller: PartyAdd
+});
diff --git a/imports/ui/components/partyAddButton/partyAddButton.js b/imports/ui/components/partyAddButton/partyAddButton.js
deleted file mode 100644
index cadd70c..0000000
--- a/imports/ui/components/partyAddButton/partyAddButton.js
+++ /dev/null
@@ -1,45 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import buttonTemplate from './partyAddButton.html';
-import modalTemplate from './partyAddModal.html';
-import { name as PartyAdd } from '../partyAdd/partyAdd';
-
-class PartyAddButton {
-  constructor($mdDialog, $mdMedia) {
-    'ngInject';
-
-    this.$mdDialog = $mdDialog;
-    this.$mdMedia = $mdMedia
-  }
-
-  open(event) {
-    this.$mdDialog.show({
-      controller($mdDialog) {
-        'ngInject';
-
-        this.close = () => {
-          $mdDialog.hide();
-        }
-      },
-      controllerAs: 'partyAddModal',
-      template: modalTemplate,
-      targetEvent: event,
-      parent: angular.element(document.body),
-      clickOutsideToClose: true,
-      fullscreen: this.$mdMedia('sm') || this.$mdMedia('xs')
-    });
-  }
-}
-
-const name = 'partyAddButton';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  PartyAdd
-]).component(name, {
-  template: buttonTemplate,
-  controllerAs: name,
-  controller: PartyAddButton
-});
diff --git a/imports/ui/components/partyAddButton/partyAddButton.ts b/imports/ui/components/partyAddButton/partyAddButton.ts
new file mode 100644
index 0000000..e46f825
--- /dev/null
+++ b/imports/ui/components/partyAddButton/partyAddButton.ts
@@ -0,0 +1,45 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import * as buttonTemplate from './partyAddButton.html';
+import * as modalTemplate from './partyAddModal.html';
+import PartyAdd from '../partyAdd/partyAdd';
+
+class PartyAddButton {
+  constructor($mdDialog, $mdMedia) {
+    'ngInject';
+
+    this.$mdDialog = $mdDialog;
+    this.$mdMedia = $mdMedia
+  }
+
+  open(event) {
+    this.$mdDialog.show({
+      controller($mdDialog) {
+        'ngInject';
+
+        this.close = () => {
+          $mdDialog.hide();
+        }
+      },
+      controllerAs: 'partyAddModal',
+      template: modalTemplate,
+      targetEvent: event,
+      parent: angular.element(document.body),
+      clickOutsideToClose: true,
+      fullscreen: this.$mdMedia('sm') || this.$mdMedia('xs')
+    });
+  }
+}
+
+const name = 'partyAddButton';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  PartyAdd.name
+]).component(name, {
+  template: buttonTemplate,
+  controllerAs: name,
+  controller: PartyAddButton
+});
diff --git a/imports/ui/components/partyCreator/client/partyCreator.tests.js b/imports/ui/components/partyCreator/client/partyCreator.tests.js
deleted file mode 100644
index dabb0b5..0000000
--- a/imports/ui/components/partyCreator/client/partyCreator.tests.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import { name as PartyCreator } from '../partyCreator';
-import { Meteor } from 'meteor/meteor';
-import 'angular-mocks';
-
-describe('PartyCreator', () => {
-  beforeEach(() => {
-    window.module(PartyCreator);
-  });
-
-  describe('controller', () => {
-    let $rootScope;
-    let $componentController;
-    const party = {
-      _id: 'partyId'
-    };
-
-    beforeEach(() => {
-      inject((_$rootScope_, _$componentController_) => {
-        $rootScope = _$rootScope_;
-        $componentController = _$componentController_;
-      });
-    });
-
-    function component(bindings) {
-      return $componentController(PartyCreator, {
-        $scope: $rootScope.$new(true)
-      }, bindings);
-    }
-
-    it('should return an empty string if there is no party', () => {
-      const controller = component({
-        party: undefined
-      });
-
-      expect(controller.creator).toEqual('');
-    });
-
-    it('should say `me` if logged in is the owner', () => {
-      const owner = 'userId';
-      // logged in
-      spyOn(Meteor, 'userId').and.returnValue(owner);
-      const controller = component({
-        party: {
-          owner
-        }
-      });
-
-      expect(controller.creator).toEqual('me');
-    });
-
-    it('should say `nobody` if user does not exist', () => {
-      const owner = 'userId';
-      // not logged in
-      spyOn(Meteor, 'userId').and.returnValue(null);
-      // no user found
-      spyOn(Meteor.users, 'findOne').and.returnValue(undefined);
-      const controller = component({
-        party: {
-          owner
-        }
-      });
-
-      expect(controller.creator).toEqual('nobody');
-    });
-
-    it('should return user data if user exists and it is not logged one', () => {
-      const owner = 'userId';
-      // not logged in
-      spyOn(Meteor, 'userId').and.returnValue(null);
-      // user found
-      spyOn(Meteor.users, 'findOne').and.returnValue('found');
-      const controller = component({
-        party: {
-          owner
-        }
-      });
-
-      expect(controller.creator).toEqual('found');
-    });
-  });
-});
diff --git a/imports/ui/components/partyCreator/client/partyCreator.tests.ts b/imports/ui/components/partyCreator/client/partyCreator.tests.ts
new file mode 100644
index 0000000..dabb0b5
--- /dev/null
+++ b/imports/ui/components/partyCreator/client/partyCreator.tests.ts
@@ -0,0 +1,81 @@
+import { name as PartyCreator } from '../partyCreator';
+import { Meteor } from 'meteor/meteor';
+import 'angular-mocks';
+
+describe('PartyCreator', () => {
+  beforeEach(() => {
+    window.module(PartyCreator);
+  });
+
+  describe('controller', () => {
+    let $rootScope;
+    let $componentController;
+    const party = {
+      _id: 'partyId'
+    };
+
+    beforeEach(() => {
+      inject((_$rootScope_, _$componentController_) => {
+        $rootScope = _$rootScope_;
+        $componentController = _$componentController_;
+      });
+    });
+
+    function component(bindings) {
+      return $componentController(PartyCreator, {
+        $scope: $rootScope.$new(true)
+      }, bindings);
+    }
+
+    it('should return an empty string if there is no party', () => {
+      const controller = component({
+        party: undefined
+      });
+
+      expect(controller.creator).toEqual('');
+    });
+
+    it('should say `me` if logged in is the owner', () => {
+      const owner = 'userId';
+      // logged in
+      spyOn(Meteor, 'userId').and.returnValue(owner);
+      const controller = component({
+        party: {
+          owner
+        }
+      });
+
+      expect(controller.creator).toEqual('me');
+    });
+
+    it('should say `nobody` if user does not exist', () => {
+      const owner = 'userId';
+      // not logged in
+      spyOn(Meteor, 'userId').and.returnValue(null);
+      // no user found
+      spyOn(Meteor.users, 'findOne').and.returnValue(undefined);
+      const controller = component({
+        party: {
+          owner
+        }
+      });
+
+      expect(controller.creator).toEqual('nobody');
+    });
+
+    it('should return user data if user exists and it is not logged one', () => {
+      const owner = 'userId';
+      // not logged in
+      spyOn(Meteor, 'userId').and.returnValue(null);
+      // user found
+      spyOn(Meteor.users, 'findOne').and.returnValue('found');
+      const controller = component({
+        party: {
+          owner
+        }
+      });
+
+      expect(controller.creator).toEqual('found');
+    });
+  });
+});
diff --git a/imports/ui/components/partyCreator/partyCreator.js b/imports/ui/components/partyCreator/partyCreator.js
deleted file mode 100644
index 416d637..0000000
--- a/imports/ui/components/partyCreator/partyCreator.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import { Meteor } from 'meteor/meteor';
-
-import template from './partyCreator.html';
-import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
-
-/**
- * PartyCreator component
- */
-class PartyCreator {
-  constructor($scope) {
-    'ngInject';
-
-    $scope.viewModel(this);
-
-    this.helpers({
-      creator() {
-        if (!this.party) {
-          return '';
-        }
-
-        const owner = this.party.owner;
-
-        if (Meteor.userId() !== null && owner === Meteor.userId()) {
-          return 'me';
-        }
-
-        return Meteor.users.findOne(owner) || 'nobody';
-      }
-    });
-  }
-}
-
-const name = 'partyCreator';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  DisplayNameFilter
-]).component(name, {
-  template,
-  controllerAs: name,
-  bindings: {
-    party: '<'
-  },
-  controller: PartyCreator
-});
diff --git a/imports/ui/components/partyCreator/partyCreator.ts b/imports/ui/components/partyCreator/partyCreator.ts
new file mode 100644
index 0000000..dd52d6a
--- /dev/null
+++ b/imports/ui/components/partyCreator/partyCreator.ts
@@ -0,0 +1,49 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyCreator.html';
+import DisplayNameFilter from '../../filters/displayNameFilter';
+
+/**
+ * PartyCreator component
+ */
+class PartyCreator {
+  constructor($scope) {
+    'ngInject';
+
+    $scope.viewModel(this);
+
+    this.helpers({
+      creator() {
+        if (!this.party) {
+          return '';
+        }
+
+        const owner = this.party.owner;
+
+        if (Meteor.userId() !== null && owner === Meteor.userId()) {
+          return 'me';
+        }
+
+        return Meteor.users.findOne(owner) || 'nobody';
+      }
+    });
+  }
+}
+
+const name = 'partyCreator';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  DisplayNameFilter.name
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    party: '<'
+  },
+  controller: PartyCreator
+});
diff --git a/imports/ui/components/partyDetails/client/partyDetails.tests.js b/imports/ui/components/partyDetails/client/partyDetails.tests.js
deleted file mode 100644
index 0f3aa3b..0000000
--- a/imports/ui/components/partyDetails/client/partyDetails.tests.js
+++ /dev/null
@@ -1,51 +0,0 @@
-import { name as PartyDetails } from '../partyDetails';
-import { Parties } from '../../../../api/parties';
-import 'angular-mocks';
-
-describe('PartyDetails', () => {
-  beforeEach(() => {
-    window.module(PartyDetails);
-  });
-
-  describe('controller', () => {
-    let controller;
-    const party = {
-      _id: 'partyId',
-      name: 'Foo',
-      description: 'Birthday of Foo',
-      public: true
-    };
-
-    beforeEach(() => {
-      inject(($rootScope, $componentController) => {
-        controller = $componentController(PartyDetails, {
-          $scope: $rootScope.$new(true)
-        });
-      });
-    });
-
-    describe('save()', () => {
-      beforeEach(() => {
-        spyOn(Parties, 'update');
-        controller.party = party;
-        controller.save();
-      });
-
-      it('should update a proper party', () => {
-        expect(Parties.update.calls.mostRecent().args[0]).toEqual({
-          _id: party._id
-        });
-      });
-
-      it('should update with proper modifier', () => {
-        expect(Parties.update.calls.mostRecent().args[1]).toEqual({
-          $set: {
-            name: party.name,
-            description: party.description,
-            public: party.public
-          }
-        });
-      });
-    });
-  });
-});
diff --git a/imports/ui/components/partyDetails/client/partyDetails.tests.ts b/imports/ui/components/partyDetails/client/partyDetails.tests.ts
new file mode 100644
index 0000000..0f3aa3b
--- /dev/null
+++ b/imports/ui/components/partyDetails/client/partyDetails.tests.ts
@@ -0,0 +1,51 @@
+import { name as PartyDetails } from '../partyDetails';
+import { Parties } from '../../../../api/parties';
+import 'angular-mocks';
+
+describe('PartyDetails', () => {
+  beforeEach(() => {
+    window.module(PartyDetails);
+  });
+
+  describe('controller', () => {
+    let controller;
+    const party = {
+      _id: 'partyId',
+      name: 'Foo',
+      description: 'Birthday of Foo',
+      public: true
+    };
+
+    beforeEach(() => {
+      inject(($rootScope, $componentController) => {
+        controller = $componentController(PartyDetails, {
+          $scope: $rootScope.$new(true)
+        });
+      });
+    });
+
+    describe('save()', () => {
+      beforeEach(() => {
+        spyOn(Parties, 'update');
+        controller.party = party;
+        controller.save();
+      });
+
+      it('should update a proper party', () => {
+        expect(Parties.update.calls.mostRecent().args[0]).toEqual({
+          _id: party._id
+        });
+      });
+
+      it('should update with proper modifier', () => {
+        expect(Parties.update.calls.mostRecent().args[1]).toEqual({
+          $set: {
+            name: party.name,
+            description: party.description,
+            public: party.public
+          }
+        });
+      });
+    });
+  });
+});
diff --git a/imports/ui/components/partyDetails/partyDetails.js b/imports/ui/components/partyDetails/partyDetails.js
deleted file mode 100644
index 471edc1..0000000
--- a/imports/ui/components/partyDetails/partyDetails.js
+++ /dev/null
@@ -1,97 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import uiRouter from 'angular-ui-router';
-
-import { Meteor } from 'meteor/meteor';
-
-import template from './partyDetails.html';
-import { Parties } from '../../../api/parties';
-import { name as PartyUninvited } from '../partyUninvited/partyUninvited';
-import { name as PartyMap } from '../partyMap/partyMap';
-
-class PartyDetails {
-  constructor($stateParams, $scope, $reactive) {
-    'ngInject';
-
-    $reactive(this).attach($scope);
-
-    this.partyId = $stateParams.partyId;
-
-    this.subscribe('parties');
-    this.subscribe('users');
-
-    this.helpers({
-      party() {
-        return Parties.findOne({
-          _id: $stateParams.partyId
-        });
-      },
-      users() {
-        return Meteor.users.find({});
-      },
-      isLoggedIn() {
-        return !!Meteor.userId();
-      }
-    });
-  }
-
-  canInvite() {
-    if (!this.party) {
-      return false;
-    }
-
-    return !this.party.public && this.party.owner === Meteor.userId();
-  }
-
-  save() {
-    Parties.update({
-      _id: this.party._id
-    }, {
-      $set: {
-        name: this.party.name,
-        description: this.party.description,
-        public: this.party.public,
-        location: this.party.location
-      }
-    }, (error) => {
-      if (error) {
-        console.log('Oops, unable to update the party...');
-      } else {
-        console.log('Done!');
-      }
-    });
-  }
-}
-
-const name = 'partyDetails';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  uiRouter,
-  PartyUninvited,
-  PartyMap
-]).component(name, {
-  template,
-  controllerAs: name,
-  controller: PartyDetails
-})
-  .config(config);
-
-function config($stateProvider) {
-  'ngInject';
-
-  $stateProvider.state('partyDetails', {
-    url: '/parties/:partyId',
-    template: '<party-details></party-details>',
-    resolve: {
-      currentUser($q) {
-        if (Meteor.userId() === null) {
-          return $q.reject('AUTH_REQUIRED');
-        } else {
-          return $q.resolve();
-        }
-      }
-    }
-  });
-}
diff --git a/imports/ui/components/partyDetails/partyDetails.ts b/imports/ui/components/partyDetails/partyDetails.ts
new file mode 100644
index 0000000..f8f5565
--- /dev/null
+++ b/imports/ui/components/partyDetails/partyDetails.ts
@@ -0,0 +1,97 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+import * as uiRouter from 'angular-ui-router';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyDetails.html';
+import { Parties } from '../../../api/parties';
+import PartyUninvited from '../partyUninvited/partyUninvited';
+import PartyMap from '../partyMap/partyMap';
+
+class PartyDetails {
+  constructor($stateParams, $scope, $reactive) {
+    'ngInject';
+
+    $reactive(this).attach($scope);
+
+    this.partyId = $stateParams.partyId;
+
+    this.subscribe('parties');
+    this.subscribe('users');
+
+    this.helpers({
+      party() {
+        return Parties.findOne({
+          _id: $stateParams.partyId
+        });
+      },
+      users() {
+        return Meteor.users.find({});
+      },
+      isLoggedIn() {
+        return !!Meteor.userId();
+      }
+    });
+  }
+
+  canInvite() {
+    if (!this.party) {
+      return false;
+    }
+
+    return !this.party.public && this.party.owner === Meteor.userId();
+  }
+
+  save() {
+    Parties.update({
+      _id: this.party._id
+    }, {
+      $set: {
+        name: this.party.name,
+        description: this.party.description,
+        public: this.party.public,
+        location: this.party.location
+      }
+    }, (error) => {
+      if (error) {
+        console.log('Oops, unable to update the party...');
+      } else {
+        console.log('Done!');
+      }
+    });
+  }
+}
+
+const name = 'partyDetails';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  uiRouter,
+  PartyUninvited.name,
+  PartyMap.name
+]).component(name, {
+  template,
+  controllerAs: name,
+  controller: PartyDetails
+})
+  .config(config);
+
+function config($stateProvider) {
+  'ngInject';
+
+  $stateProvider.state('partyDetails', {
+    url: '/parties/:partyId',
+    template: '<party-details></party-details>',
+    resolve: {
+      currentUser($q) {
+        if (Meteor.userId() === null) {
+          return $q.reject('AUTH_REQUIRED');
+        } else {
+          return $q.resolve();
+        }
+      }
+    }
+  });
+}
diff --git a/imports/ui/components/partyImage/partyImage.js b/imports/ui/components/partyImage/partyImage.js
deleted file mode 100644
index 64384c0..0000000
--- a/imports/ui/components/partyImage/partyImage.js
+++ /dev/null
@@ -1,39 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import template from './partyImage.html';
-import { Images } from '../../../api/images';
-import { name as DisplayImageFilter } from '../../filters/displayImageFilter';
-
-class PartyImage {
-  constructor($scope, $reactive) {
-    'ngInject';
-    $reactive(this).attach($scope);
-
-    this.helpers({
-      mainImage() {
-        const images = this.getReactively('images', true);
-        if (images) {
-          return Images.findOne({
-            _id: images[0]
-          });
-        }
-      }
-    });
-  }
-}
-
-const name = 'partyImage';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  DisplayImageFilter
-]).component(name, {
-  template,
-  bindings: {
-    images: '<'
-  },
-  controllerAs: name,
-  controller: PartyImage
-});
diff --git a/imports/ui/components/partyImage/partyImage.ts b/imports/ui/components/partyImage/partyImage.ts
new file mode 100644
index 0000000..b3ff95b
--- /dev/null
+++ b/imports/ui/components/partyImage/partyImage.ts
@@ -0,0 +1,39 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import template from './partyImage.html';
+import { Images } from '../../../api/images';
+import DisplayImageFilter from '../../filters/displayImageFilter';
+
+class PartyImage {
+  constructor($scope, $reactive) {
+    'ngInject';
+    $reactive(this).attach($scope);
+
+    this.helpers({
+      mainImage() {
+        const images = this.getReactively('images', true);
+        if (images) {
+          return Images.findOne({
+            _id: images[0]
+          });
+        }
+      }
+    });
+  }
+}
+
+const name = 'partyImage';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  DisplayImageFilter.name
+]).component(name, {
+  template,
+  bindings: {
+    images: '<'
+  },
+  controllerAs: name,
+  controller: PartyImage
+});
diff --git a/imports/ui/components/partyMap/partyMap.js b/imports/ui/components/partyMap/partyMap.js
deleted file mode 100644
index c062d30..0000000
--- a/imports/ui/components/partyMap/partyMap.js
+++ /dev/null
@@ -1,61 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import 'angular-simple-logger';
-import 'angular-google-maps';
-
-import template from './partyMap.html';
-
-class PartyMap {
-  constructor($scope) {
-    'ngInject';
-
-    this.map = {
-      center: {
-        latitude: 45,
-        longitude: -73
-      },
-      zoom: 8,
-      events: {
-        click: (mapModel, eventName, originalEventArgs) => {
-          this.setLocation(originalEventArgs[0].latLng.lat(), originalEventArgs[0].latLng.lng());
-          $scope.$apply();
-        }
-      }
-    };
-
-    this.marker = {
-      options: {
-        draggable: true
-      },
-      events: {
-        dragend: (marker, eventName, args) => {
-          this.setLocation(marker.getPosition().lat(), marker.getPosition().lng());
-          $scope.$apply();
-        }
-      }
-    };
-  }
-
-  setLocation(latitude, longitude) {
-    this.location = {
-      latitude,
-      longitude
-    };
-  }
-}
-
-const name = 'partyMap';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  'nemLogging', // https://github.com/angular-ui/angular-google-maps/issues/1633
-  'uiGmapgoogle-maps'
-]).component(name, {
-  template,
-  controllerAs: name,
-  bindings: {
-    location: '='
-  },
-  controller: PartyMap
-});
diff --git a/imports/ui/components/partyMap/partyMap.ts b/imports/ui/components/partyMap/partyMap.ts
new file mode 100644
index 0000000..56f6b99
--- /dev/null
+++ b/imports/ui/components/partyMap/partyMap.ts
@@ -0,0 +1,61 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+import 'angular-simple-logger';
+import 'angular-google-maps';
+
+import template from './partyMap.html';
+
+class PartyMap {
+  constructor($scope) {
+    'ngInject';
+
+    this.map = {
+      center: {
+        latitude: 45,
+        longitude: -73
+      },
+      zoom: 8,
+      events: {
+        click: (mapModel, eventName, originalEventArgs) => {
+          this.setLocation(originalEventArgs[0].latLng.lat(), originalEventArgs[0].latLng.lng());
+          $scope.$apply();
+        }
+      }
+    };
+
+    this.marker = {
+      options: {
+        draggable: true
+      },
+      events: {
+        dragend: (marker, eventName, args) => {
+          this.setLocation(marker.getPosition().lat(), marker.getPosition().lng());
+          $scope.$apply();
+        }
+      }
+    };
+  }
+
+  setLocation(latitude, longitude) {
+    this.location = {
+      latitude,
+      longitude
+    };
+  }
+}
+
+const name = 'partyMap';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  'nemLogging', // https://github.com/angular-ui/angular-google-maps/issues/1633
+  'uiGmapgoogle-maps'
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    location: '='
+  },
+  controller: PartyMap
+});
diff --git a/imports/ui/components/partyRemove/client/partyRemove.tests.js b/imports/ui/components/partyRemove/client/partyRemove.tests.js
deleted file mode 100644
index e8b6e97..0000000
--- a/imports/ui/components/partyRemove/client/partyRemove.tests.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import { name as PartyRemove } from '../partyRemove';
-import { Parties } from '../../../../api/parties';
-import 'angular-mocks';
-
-describe('PartyRemove', () => {
-  beforeEach(() => {
-    window.module(PartyRemove);
-  });
-
-  describe('controller', () => {
-    let controller;
-    const party = {
-      _id: 'partyId'
-    };
-
-    beforeEach(() => {
-      inject(($rootScope, $componentController) => {
-        controller = $componentController(PartyRemove, {
-          $scope: $rootScope.$new(true)
-        }, {
-          party
-        });
-      });
-    });
-
-    describe('remove()', () => {
-      beforeEach(() => {
-        spyOn(Parties, 'remove');
-        controller.remove();
-      });
-
-      it('should remove a party', () => {
-        expect(Parties.remove).toHaveBeenCalledWith(party._id);
-      });
-    });
-  });
-});
diff --git a/imports/ui/components/partyRemove/client/partyRemove.tests.ts b/imports/ui/components/partyRemove/client/partyRemove.tests.ts
new file mode 100644
index 0000000..e8b6e97
--- /dev/null
+++ b/imports/ui/components/partyRemove/client/partyRemove.tests.ts
@@ -0,0 +1,37 @@
+import { name as PartyRemove } from '../partyRemove';
+import { Parties } from '../../../../api/parties';
+import 'angular-mocks';
+
+describe('PartyRemove', () => {
+  beforeEach(() => {
+    window.module(PartyRemove);
+  });
+
+  describe('controller', () => {
+    let controller;
+    const party = {
+      _id: 'partyId'
+    };
+
+    beforeEach(() => {
+      inject(($rootScope, $componentController) => {
+        controller = $componentController(PartyRemove, {
+          $scope: $rootScope.$new(true)
+        }, {
+          party
+        });
+      });
+    });
+
+    describe('remove()', () => {
+      beforeEach(() => {
+        spyOn(Parties, 'remove');
+        controller.remove();
+      });
+
+      it('should remove a party', () => {
+        expect(Parties.remove).toHaveBeenCalledWith(party._id);
+      });
+    });
+  });
+});
diff --git a/imports/ui/components/partyRemove/partyRemove.js b/imports/ui/components/partyRemove/partyRemove.js
deleted file mode 100644
index ab73562..0000000
--- a/imports/ui/components/partyRemove/partyRemove.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import template from './partyRemove.html';
-import { Parties } from '../../../api/parties';
-
-class PartyRemove {
-  remove() {
-    if (this.party) {
-      Parties.remove(this.party._id);
-    }
-  }
-}
-
-const name = 'partyRemove';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor
-]).component(name, {
-  template,
-  bindings: {
-    party: '<'
-  },
-  controllerAs: name,
-  controller: PartyRemove
-});
diff --git a/imports/ui/components/partyRemove/partyRemove.ts b/imports/ui/components/partyRemove/partyRemove.ts
new file mode 100644
index 0000000..8c991f1
--- /dev/null
+++ b/imports/ui/components/partyRemove/partyRemove.ts
@@ -0,0 +1,27 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import template from './partyRemove.html';
+import { Parties } from '../../../api/parties';
+
+class PartyRemove {
+  remove() {
+    if (this.party) {
+      Parties.remove(this.party._id);
+    }
+  }
+}
+
+const name = 'partyRemove';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  bindings: {
+    party: '<'
+  },
+  controllerAs: name,
+  controller: PartyRemove
+});
diff --git a/imports/ui/components/partyRsvp/partyRsvp.js b/imports/ui/components/partyRsvp/partyRsvp.js
deleted file mode 100644
index 522cc38..0000000
--- a/imports/ui/components/partyRsvp/partyRsvp.js
+++ /dev/null
@@ -1,62 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import _ from 'underscore';
-
-import { Meteor } from 'meteor/meteor';
-
-import template from './partyRsvp.html';
-
-class PartyRsvp {
-  yes() {
-    this.answer('yes');
-  }
-  isYes() {
-    return this.isAnswer('yes');
-  }
-
-  maybe() {
-    this.answer('maybe');
-  }
-  isMaybe() {
-    return this.isAnswer('maybe');
-  }
-
-  no() {
-    this.answer('no');
-  }
-  isNo() {
-    return this.isAnswer('no');
-  }
-
-  answer(answer) {
-    Meteor.call('rsvp', this.party._id, answer, (error) => {
-      if (error) {
-        console.error('Oops, unable to rsvp!');
-      } else {
-        console.log('RSVP done!')
-      }
-    });
-  }
-  isAnswer(answer) {
-    if(this.party) {
-      return !!_.findWhere(this.party.rsvps, {
-        user: Meteor.userId(),
-        rsvp: answer
-      });
-    }
-  }
-}
-
-const name = 'partyRsvp';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor
-]).component(name, {
-  template,
-  controllerAs: name,
-  bindings: {
-    party: '<'
-  },
-  controller: PartyRsvp
-});
diff --git a/imports/ui/components/partyRsvp/partyRsvp.ts b/imports/ui/components/partyRsvp/partyRsvp.ts
new file mode 100644
index 0000000..258fdf4
--- /dev/null
+++ b/imports/ui/components/partyRsvp/partyRsvp.ts
@@ -0,0 +1,62 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+import * as _ from 'underscore';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyRsvp.html';
+
+class PartyRsvp {
+  yes() {
+    this.answer('yes');
+  }
+  isYes() {
+    return this.isAnswer('yes');
+  }
+
+  maybe() {
+    this.answer('maybe');
+  }
+  isMaybe() {
+    return this.isAnswer('maybe');
+  }
+
+  no() {
+    this.answer('no');
+  }
+  isNo() {
+    return this.isAnswer('no');
+  }
+
+  answer(answer) {
+    Meteor.call('rsvp', this.party._id, answer, (error) => {
+      if (error) {
+        console.error('Oops, unable to rsvp!');
+      } else {
+        console.log('RSVP done!')
+      }
+    });
+  }
+  isAnswer(answer) {
+    if(this.party) {
+      return !!_.findWhere(this.party.rsvps, {
+        user: Meteor.userId(),
+        rsvp: answer
+      });
+    }
+  }
+}
+
+const name = 'partyRsvp';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    party: '<'
+  },
+  controller: PartyRsvp
+});
diff --git a/imports/ui/components/partyRsvpUsers/partyRsvpUsers.js b/imports/ui/components/partyRsvpUsers/partyRsvpUsers.js
deleted file mode 100644
index 1b4f1fa..0000000
--- a/imports/ui/components/partyRsvpUsers/partyRsvpUsers.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import { Meteor } from 'meteor/meteor';
-
-import template from './partyRsvpUsers.html';
-import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
-
-class PartyRsvpUsers {
-  getUserById(userId) {
-    return Meteor.users.findOne(userId);
-  }
-}
-
-const name = 'partyRsvpUsers';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  DisplayNameFilter
-]).component(name, {
-  template,
-  controllerAs: name,
-  bindings: {
-    rsvps: '<',
-    type: '@'
-  },
-  controller: PartyRsvpUsers
-});
diff --git a/imports/ui/components/partyRsvpUsers/partyRsvpUsers.ts b/imports/ui/components/partyRsvpUsers/partyRsvpUsers.ts
new file mode 100644
index 0000000..fa2190b
--- /dev/null
+++ b/imports/ui/components/partyRsvpUsers/partyRsvpUsers.ts
@@ -0,0 +1,29 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyRsvpUsers.html';
+import DisplayNameFilter from '../../filters/displayNameFilter';
+
+class PartyRsvpUsers {
+  getUserById(userId) {
+    return Meteor.users.findOne(userId);
+  }
+}
+
+const name = 'partyRsvpUsers';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  DisplayNameFilter.name
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    rsvps: '<',
+    type: '@'
+  },
+  controller: PartyRsvpUsers
+});
diff --git a/imports/ui/components/partyRsvpsList/partyRsvpsList.js b/imports/ui/components/partyRsvpsList/partyRsvpsList.js
deleted file mode 100644
index 755c9f9..0000000
--- a/imports/ui/components/partyRsvpsList/partyRsvpsList.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import template from './partyRsvpsList.html';
-
-class PartyRsvpsList { }
-
-const name = 'partyRsvpsList';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor
-]).component(name, {
-  template,
-  controllerAs: name,
-  bindings: {
-    rsvps: '<'
-  },
-  controller: PartyRsvpsList
-});
diff --git a/imports/ui/components/partyRsvpsList/partyRsvpsList.ts b/imports/ui/components/partyRsvpsList/partyRsvpsList.ts
new file mode 100644
index 0000000..8f29705
--- /dev/null
+++ b/imports/ui/components/partyRsvpsList/partyRsvpsList.ts
@@ -0,0 +1,20 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import template from './partyRsvpsList.html';
+
+class PartyRsvpsList { }
+
+const name = 'partyRsvpsList';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    rsvps: '<'
+  },
+  controller: PartyRsvpsList
+});
diff --git a/imports/ui/components/partyUninvited/partyUninvited.js b/imports/ui/components/partyUninvited/partyUninvited.js
deleted file mode 100644
index 7958f5a..0000000
--- a/imports/ui/components/partyUninvited/partyUninvited.js
+++ /dev/null
@@ -1,50 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-
-import { Meteor } from 'meteor/meteor';
-
-import template from './partyUninvited.html';
-import { name as UninvitedFilter } from '../../filters/uninvitedFilter';
-import { name as DisplayNameFilter } from '../../filters/displayNameFilter';
-
-class PartyUninvited {
-  constructor($scope) {
-    'ngInject';
-
-    $scope.viewModel(this);
-
-    this.helpers({
-      users() {
-        return Meteor.users.find({});
-      }
-    });
-  }
-
-  invite(user) {
-    Meteor.call('invite', this.party._id, user._id,
-      (error) => {
-        if (error) {
-          console.log('Oops, unable to invite!');
-        } else {
-          console.log('Invited!');
-        }
-      }
-    );
-  }
-}
-
-const name = 'partyUninvited';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  UninvitedFilter,
-  DisplayNameFilter
-]).component(name, {
-  template,
-  controllerAs: name,
-  bindings: {
-    party: '<'
-  },
-  controller: PartyUninvited
-});
diff --git a/imports/ui/components/partyUninvited/partyUninvited.ts b/imports/ui/components/partyUninvited/partyUninvited.ts
new file mode 100644
index 0000000..7b9d39f
--- /dev/null
+++ b/imports/ui/components/partyUninvited/partyUninvited.ts
@@ -0,0 +1,50 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyUninvited.html';
+import UninvitedFilter from '../../filters/uninvitedFilter';
+import DisplayNameFilter from '../../filters/displayNameFilter';
+
+class PartyUninvited {
+  constructor($scope) {
+    'ngInject';
+
+    $scope.viewModel(this);
+
+    this.helpers({
+      users() {
+        return Meteor.users.find({});
+      }
+    });
+  }
+
+  invite(user) {
+    Meteor.call('invite', this.party._id, user._id,
+      (error) => {
+        if (error) {
+          console.log('Oops, unable to invite!');
+        } else {
+          console.log('Invited!');
+        }
+      }
+    );
+  }
+}
+
+const name = 'partyUninvited';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  UninvitedFilter.name,
+  DisplayNameFilter.name
+]).component(name, {
+  template,
+  controllerAs: name,
+  bindings: {
+    party: '<'
+  },
+  controller: PartyUninvited
+});
diff --git a/imports/ui/components/partyUpload/partyUpload.js b/imports/ui/components/partyUpload/partyUpload.js
deleted file mode 100644
index 400368e..0000000
--- a/imports/ui/components/partyUpload/partyUpload.js
+++ /dev/null
@@ -1,91 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import ngFileUpload from 'ng-file-upload';
-import 'angular-sortable-view';
-import 'ng-img-crop/compile/minified/ng-img-crop';
-import 'ng-img-crop/compile/minified/ng-img-crop.css';
-
-
-import { Meteor } from 'meteor/meteor';
-
-import template from './partyUpload.html';
-import { Thumbs, upload } from '../../../api/images';
-
-class PartyUpload {
-  constructor($scope, $reactive) {
-    'ngInject';
-
-    $reactive(this).attach($scope);
-
-    this.uploaded = [];
-
-    this.subscribe('thumbs', () => [
-      this.getReactively('files', true) || []
-    ]);
-
-    this.helpers({
-      thumbs() {
-        return Thumbs.find({
-          originalStore: 'images',
-          originalId: {
-            $in: this.getReactively('files', true) || []
-          }
-        });
-      }
-    });
-  }
-
-  addImages(files) {
-    if (files.length) {
-      this.currentFile = files[0];
-
-      const reader = new FileReader;
-
-      reader.onload = this.$bindToContext((e) => {
-        this.cropImgSrc = e.target.result;
-        this.myCroppedImage = '';
-      });
-
-      reader.readAsDataURL(files[0]);
-    } else {
-      this.cropImgSrc = undefined;
-    }
-  }
-
-  save() {
-    upload(this.myCroppedImage, this.currentFile.name, this.$bindToContext((file) => {
-      this.uploaded.push(file);
-
-      if (!this.files || !this.files.length) {
-        this.files = [];
-      }
-      this.files.push(file._id);
-
-      this.reset();
-    }), (e) => {
-      console.log('Oops, something went wrong', e);
-    });
-  }
-
-  reset() {
-    this.cropImgSrc = undefined;
-    this.myCroppedImage = '';
-  }
-}
-
-const name = 'partyUpload';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  ngFileUpload,
-  'ngImgCrop',
-  'angular-sortable-view'
-]).component(name, {
-  template,
-  bindings: {
-    files: '=?'
-  },
-  controllerAs: name,
-  controller: PartyUpload
-});
diff --git a/imports/ui/components/partyUpload/partyUpload.ts b/imports/ui/components/partyUpload/partyUpload.ts
new file mode 100644
index 0000000..9323324
--- /dev/null
+++ b/imports/ui/components/partyUpload/partyUpload.ts
@@ -0,0 +1,91 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+import * as ngFileUpload from 'ng-file-upload';
+import 'angular-sortable-view';
+import 'ng-img-crop/compile/minified/ng-img-crop';
+import 'ng-img-crop/compile/minified/ng-img-crop.css';
+
+
+import { Meteor } from 'meteor/meteor';
+
+import template from './partyUpload.html';
+import { Thumbs, upload } from '../../../api/images';
+
+class PartyUpload {
+  constructor($scope, $reactive) {
+    'ngInject';
+
+    $reactive(this).attach($scope);
+
+    this.uploaded = [];
+
+    this.subscribe('thumbs', () => [
+      this.getReactively('files', true) || []
+    ]);
+
+    this.helpers({
+      thumbs() {
+        return Thumbs.find({
+          originalStore: 'images',
+          originalId: {
+            $in: this.getReactively('files', true) || []
+          }
+        });
+      }
+    });
+  }
+
+  addImages(files) {
+    if (files.length) {
+      this.currentFile = files[0];
+
+      const reader = new FileReader;
+
+      reader.onload = this.$bindToContext((e) => {
+        this.cropImgSrc = e.target.result;
+        this.myCroppedImage = '';
+      });
+
+      reader.readAsDataURL(files[0]);
+    } else {
+      this.cropImgSrc = undefined;
+    }
+  }
+
+  save() {
+    upload(this.myCroppedImage, this.currentFile.name, this.$bindToContext((file) => {
+      this.uploaded.push(file);
+
+      if (!this.files || !this.files.length) {
+        this.files = [];
+      }
+      this.files.push(file._id);
+
+      this.reset();
+    }), (e) => {
+      console.log('Oops, something went wrong', e);
+    });
+  }
+
+  reset() {
+    this.cropImgSrc = undefined;
+    this.myCroppedImage = '';
+  }
+}
+
+const name = 'partyUpload';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  ngFileUpload,
+  'ngImgCrop',
+  'angular-sortable-view'
+]).component(name, {
+  template,
+  bindings: {
+    files: '=?'
+  },
+  controllerAs: name,
+  controller: PartyUpload
+});
diff --git a/imports/ui/components/password/password.js b/imports/ui/components/password/password.js
deleted file mode 100644
index c417f95..0000000
--- a/imports/ui/components/password/password.js
+++ /dev/null
@@ -1,56 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import uiRouter from 'angular-ui-router';
-
-import { Accounts } from 'meteor/accounts-base';
-
-import template from './password.html';
-
-class Register {
-  constructor($scope, $reactive, $state) {
-    'ngInject';
-
-    this.$state = $state;
-
-    $reactive(this).attach($scope);
-
-    this.credentials = {
-      email: ''
-    };
-
-    this.error = '';
-  }
-
-  reset() {
-    Accounts.forgotPassword(this.credentials, this.$bindToContext((err) => {
-      if (err) {
-        this.error = err;
-      } else {
-        this.$state.go('parties');
-      }
-    }));
-  }
-}
-
-const name = 'password';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  uiRouter
-])
-  .component(name, {
-    template,
-    controllerAs: name,
-    controller: Register
-  })
-  .config(config);
-
-function config($stateProvider) {
-  'ngInject';
-
-  $stateProvider.state('password', {
-    url: '/password',
-    template: '<password></password>'
-  });
-}
diff --git a/imports/ui/components/password/password.ts b/imports/ui/components/password/password.ts
new file mode 100644
index 0000000..40aed57
--- /dev/null
+++ b/imports/ui/components/password/password.ts
@@ -0,0 +1,56 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+import * as uiRouter from 'angular-ui-router';
+
+import { Accounts } from 'meteor/accounts-base';
+
+import template from './password.html';
+
+class Register {
+  constructor($scope, $reactive, $state) {
+    'ngInject';
+
+    this.$state = $state;
+
+    $reactive(this).attach($scope);
+
+    this.credentials = {
+      email: ''
+    };
+
+    this.error = '';
+  }
+
+  reset() {
+    Accounts.forgotPassword(this.credentials, this.$bindToContext((err) => {
+      if (err) {
+        this.error = err;
+      } else {
+        this.$state.go('parties');
+      }
+    }));
+  }
+}
+
+const name = 'password';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  uiRouter
+])
+  .component(name, {
+    template,
+    controllerAs: name,
+    controller: Register
+  })
+  .config(config);
+
+function config($stateProvider) {
+  'ngInject';
+
+  $stateProvider.state('password', {
+    url: '/password',
+    template: '<password></password>'
+  });
+}
diff --git a/imports/ui/components/register/register.js b/imports/ui/components/register/register.js
deleted file mode 100644
index ab4ae94..0000000
--- a/imports/ui/components/register/register.js
+++ /dev/null
@@ -1,58 +0,0 @@
-import angular from 'angular';
-import angularMeteor from 'angular-meteor';
-import uiRouter from 'angular-ui-router';
-
-import { Accounts } from 'meteor/accounts-base';
-
-import template from './register.html';
-
-class Register {
-  constructor($scope, $reactive, $state) {
-    'ngInject';
-
-    this.$state = $state;
-
-    $reactive(this).attach($scope);
-
-    this.credentials = {
-      email: '',
-      password: ''
-    };
-
-    this.error = '';
-  }
-
-  register() {
-    Accounts.createUser(this.credentials,
-      this.$bindToContext((err) => {
-        if (err) {
-          this.error = err;
-        } else {
-          this.$state.go('parties');
-        }
-      })
-    );
-  }
-}
-
-const name = 'register';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor,
-  uiRouter
-])
-  .component(name, {
-    template,
-    controllerAs: name,
-    controller: Register
-  })
-  .config(config);
-
-function config($stateProvider) {
-  'ngInject';
-  $stateProvider.state('register', {
-    url: '/register',
-    template: '<register></register>'
-  });
-}
diff --git a/imports/ui/components/register/register.ts b/imports/ui/components/register/register.ts
new file mode 100644
index 0000000..eb0fa26
--- /dev/null
+++ b/imports/ui/components/register/register.ts
@@ -0,0 +1,58 @@
+import * as angular from 'angular';
+import * as angularMeteor from 'angular-meteor';
+import * as uiRouter from 'angular-ui-router';
+
+import { Accounts } from 'meteor/accounts-base';
+
+import template from './register.html';
+
+class Register {
+  constructor($scope, $reactive, $state) {
+    'ngInject';
+
+    this.$state = $state;
+
+    $reactive(this).attach($scope);
+
+    this.credentials = {
+      email: '',
+      password: ''
+    };
+
+    this.error = '';
+  }
+
+  register() {
+    Accounts.createUser(this.credentials,
+      this.$bindToContext((err) => {
+        if (err) {
+          this.error = err;
+        } else {
+          this.$state.go('parties');
+        }
+      })
+    );
+  }
+}
+
+const name = 'register';
+
+// create a module
+export default angular.module(name, [
+  angularMeteor,
+  uiRouter
+])
+  .component(name, {
+    template,
+    controllerAs: name,
+    controller: Register
+  })
+  .config(config);
+
+function config($stateProvider) {
+  'ngInject';
+  $stateProvider.state('register', {
+    url: '/register',
+    template: '<register></register>'
+  });
+}
diff --git a/imports/ui/filters/displayImageFilter.js b/imports/ui/filters/displayImageFilter.js
deleted file mode 100644
index aa2dfda..0000000
--- a/imports/ui/filters/displayImageFilter.js
+++ /dev/null
@@ -1,26 +0,0 @@
-import angular from 'angular';
-
-import { Meteor } from 'meteor/meteor';
-
-const name = 'displayImageFilter';
-
-function DisplayImageFilter(image) {
-  if (!image) {
-    return image;
-  }
-
-  // leave it as it is for the web view
-  if (!Meteor.isCordova) {
-    return image.url;
-  }
-
-  // create new path of an image
-  const path = `ufs/${image.store}/${image._id}/${image.name}`;
-  return Meteor.absoluteUrl(path);
-}
-
-// create a module
-export default angular.module(name, [])
-  .filter(name, () => {
-    return DisplayImageFilter;
-  });
diff --git a/imports/ui/filters/displayImageFilter.ts b/imports/ui/filters/displayImageFilter.ts
new file mode 100644
index 0000000..2cd8c9c
--- /dev/null
+++ b/imports/ui/filters/displayImageFilter.ts
@@ -0,0 +1,26 @@
+import * as angular from 'angular';
+
+import { Meteor } from 'meteor/meteor';
+
+const name = 'displayImageFilter';
+
+function DisplayImageFilter(image) {
+  if (!image) {
+    return image;
+  }
+
+  // leave it as it is for the web view
+  if (!Meteor.isCordova) {
+    return image.url;
+  }
+
+  // create new path of an image
+  const path = `ufs/${image.store}/${image._id}/${image.name}`;
+  return Meteor.absoluteUrl(path);
+}
+
+// create a module
+export default angular.module(name, [])
+  .filter(name, () => {
+    return DisplayImageFilter;
+  });
diff --git a/imports/ui/filters/displayNameFilter.js b/imports/ui/filters/displayNameFilter.js
deleted file mode 100644
index 57d9250..0000000
--- a/imports/ui/filters/displayNameFilter.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import angular from 'angular';
-
-const name = 'displayNameFilter';
-
-function DisplayNameFilter(user) {
-  if (!user) {
-    return '';
-  }
-
-  if (user.profile && user.profile.name) {
-    return user.profile.name;
-  }
-
-  if (user.emails) {
-    return user.emails[0].address;
-  }
-
-  return user;
-}
-
-// create a module
-export default angular.module(name, [])
-  .filter(name, () => {
-    return DisplayNameFilter;
-  });
diff --git a/imports/ui/filters/displayNameFilter.ts b/imports/ui/filters/displayNameFilter.ts
new file mode 100644
index 0000000..05c4059
--- /dev/null
+++ b/imports/ui/filters/displayNameFilter.ts
@@ -0,0 +1,25 @@
+import * as angular from 'angular';
+
+const name = 'displayNameFilter';
+
+function DisplayNameFilter(user) {
+  if (!user) {
+    return '';
+  }
+
+  if (user.profile && user.profile.name) {
+    return user.profile.name;
+  }
+
+  if (user.emails) {
+    return user.emails[0].address;
+  }
+
+  return user;
+}
+
+// create a module
+export default angular.module(name, [])
+  .filter(name, () => {
+    return DisplayNameFilter;
+  });
diff --git a/imports/ui/filters/uninvitedFilter.js b/imports/ui/filters/uninvitedFilter.js
deleted file mode 100644
index cfe8d2d..0000000
--- a/imports/ui/filters/uninvitedFilter.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import angular from 'angular';
-import _ from 'underscore';
-
-const name = 'uninvitedFilter';
-
-function UninvitedFilter(users, party) {
-  if (!party) {
-    return false;
-  }
-
-  return users.filter((user) => {
-    // if not the owner and not invited
-    return user._id !== party.owner && !_.contains(party.invited, user._id);
-  });
-}
-
-// create a module
-export default angular.module(name, [])
-  .filter(name, () => {
-    return UninvitedFilter;
-  });
diff --git a/imports/ui/filters/uninvitedFilter.ts b/imports/ui/filters/uninvitedFilter.ts
new file mode 100644
index 0000000..260bd05
--- /dev/null
+++ b/imports/ui/filters/uninvitedFilter.ts
@@ -0,0 +1,21 @@
+import * as angular from 'angular';
+import * as _ from 'underscore';
+
+const name = 'uninvitedFilter';
+
+function UninvitedFilter(users, party) {
+  if (!party) {
+    return false;
+  }
+
+  return users.filter((user) => {
+    // if not the owner and not invited
+    return user._id !== party.owner && !_.contains(party.invited, user._id);
+  });
+}
+
+// create a module
+export default angular.module(name, [])
+  .filter(name, () => {
+    return UninvitedFilter;
+  });
diff --git a/server/main.js b/server/main.js
deleted file mode 100644
index 2b47936..0000000
--- a/server/main.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import '../imports/startup/fixtures';
-import '../imports/api/parties';
-import '../imports/api/users';
-import '../imports/api/images';
diff --git a/server/main.ts b/server/main.ts
new file mode 100644
index 0000000..2b47936
--- /dev/null
+++ b/server/main.ts
@@ -0,0 +1,4 @@
+import '../imports/startup/fixtures';
+import '../imports/api/parties';
+import '../imports/api/users';
+import '../imports/api/images';
-- 
2.7.4


From a9b39ddf547e9887568749b5786f45e139e7c01b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:20:56 +0200
Subject: [PATCH 382/412] Step 23.7: Import underscore correctly inside Parties
 Methods

---
 imports/api/parties/methods.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/api/parties/methods.ts b/imports/api/parties/methods.ts
index e8aa1ad..b6c7ff9 100644
--- a/imports/api/parties/methods.ts
+++ b/imports/api/parties/methods.ts
@@ -1,4 +1,4 @@
-import _ from 'underscore';
+import * as _ from 'underscore';
 import { Meteor } from 'meteor/meteor';
 import { check } from 'meteor/check';
 import { Email } from 'meteor/email';
-- 
2.7.4


From 76c138075c303529380bb9ce999f33e899f590e9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:28:32 +0200
Subject: [PATCH 383/412] Step 23.8: Install angular2 modules

---
 package.json | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/package.json b/package.json
index 056163e..191802a 100644
--- a/package.json
+++ b/package.json
@@ -6,6 +6,13 @@
     "test:watch": "meteor test --driver-package sanjo:jasmine"
   },
   "dependencies": {
+    "@angular/common": "^2.1.0",
+    "@angular/compiler": "^2.1.0",
+    "@angular/core": "^2.1.0",
+    "@angular/forms": "^2.1.0",
+    "@angular/platform-browser": "^2.1.0",
+    "@angular/platform-browser-dynamic": "^2.1.0",
+    "@angular/upgrade": "^2.1.0",
     "angular": "^1.5.3",
     "angular-animate": "^1.5.3",
     "angular-aria": "^1.5.3",
@@ -13,17 +20,23 @@
     "angular-material": "^1.0.7",
     "angular-messages": "^1.5.3",
     "angular-meteor": "^1.3.9",
-    "angular-ui-router": "^0.2.18",
     "angular-sanitize": "^1.5.5",
     "angular-simple-logger": "^0.1.7",
     "angular-sortable-view": "0.0.15",
+    "angular-ui-router": "^0.2.18",
     "angular-utils-pagination": "^0.11.1",
+    "angular2-meteor": "^0.7.0",
+    "angular2-meteor-polyfills": "^0.1.1",
+    "es6-shim": "^0.35.1",
     "gm": "^1.22.0",
     "ionic-sdk": "^1.2.4",
     "meteor-node-stubs": "~0.2.0",
     "ng-file-upload": "^12.0.4",
     "ng-img-crop": "^0.2.0",
-    "underscore": "^1.8.3"
+    "reflect-metadata": "^0.1.8",
+    "rxjs": "^5.0.0-rc.1",
+    "underscore": "^1.8.3",
+    "zone.js": "^0.6.25"
   },
   "devDependencies": {
     "angular-mocks": "^1.5.3"
-- 
2.7.4


From 144a93714b43cb82e2a750a725aef69e71f9dce6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:29:54 +0200
Subject: [PATCH 384/412] Step 23.9: Create module with instance of
 UpgradeAdapter

---
 imports/ui/upgradeAdapter.ts | 2 ++
 1 file changed, 2 insertions(+)
 create mode 100644 imports/ui/upgradeAdapter.ts

diff --git a/imports/ui/upgradeAdapter.ts b/imports/ui/upgradeAdapter.ts
new file mode 100644
index 0000000..66add32
--- /dev/null
+++ b/imports/ui/upgradeAdapter.ts
@@ -0,0 +1,2 @@
+import { UpgradeAdapter } from '@angular/upgrade';
+export const upgradeAdapter = new UpgradeAdapter();
-- 
2.7.4


From 7eb5c10c158a1fe2e75f25b631fcb4d320e11249 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:34:01 +0200
Subject: [PATCH 385/412] Step 23.10: bootstrap using UpgradeAdapter

---
 client/main.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/main.ts b/client/main.ts
index 1b2a4c5..7da2f40 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -1,11 +1,13 @@
+import 'angular2-meteor-polyfills/browser';
 import * as angular from 'angular';
+import { upgradeAdapter } from '../imports/ui/upgradeAdapter';
 
 import { Meteor } from 'meteor/meteor';
 
 import Socially from '../imports/ui/components/socially/socially';
 
 function onReady() {
-  angular.bootstrap(document, [
+  upgradeAdapter.bootstrap(document.body, [
     Socially.name
   ], {
     strictDi: true
-- 
2.7.4


From f36732b4e4ead3212f747cd59e31deb75f6bdd6c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:36:26 +0200
Subject: [PATCH 386/412] Step 23.11: Create displayNamePipe based on
 displayNameFilter

---
 imports/ui/filters/displayNamePipe.ts | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)
 create mode 100644 imports/ui/filters/displayNamePipe.ts

diff --git a/imports/ui/filters/displayNamePipe.ts b/imports/ui/filters/displayNamePipe.ts
new file mode 100644
index 0000000..f1d9804
--- /dev/null
+++ b/imports/ui/filters/displayNamePipe.ts
@@ -0,0 +1,24 @@
+import { Pipe } from '@angular/core';
+
+const name = 'displayName';
+
+@Pipe({
+  name
+})
+export class DisplayNamePipe {
+  transform(user) {
+    if (!user) {
+      return '';
+    }
+
+    if (user.profile && user.profile.name) {
+      return user.profile.name;
+    }
+
+    if (user.emails) {
+      return user.emails[0].address;
+    }
+
+    return user;
+  }
+}
-- 
2.7.4


From eb962975b88a5101a1e907f1c757aef142c2f0f4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:37:50 +0200
Subject: [PATCH 387/412] Step 23.12: Create UninvitedPipe based on
 UninvitedFilter

---
 imports/ui/filters/uninvitedPipe.ts | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)
 create mode 100644 imports/ui/filters/uninvitedPipe.ts

diff --git a/imports/ui/filters/uninvitedPipe.ts b/imports/ui/filters/uninvitedPipe.ts
new file mode 100644
index 0000000..523c74d
--- /dev/null
+++ b/imports/ui/filters/uninvitedPipe.ts
@@ -0,0 +1,20 @@
+import { Pipe } from '@angular/core';
+import * as _ from 'underscore';
+
+const name = 'uninvited';
+
+@Pipe({
+  name
+})
+export class UninvitedPipe {
+  transform(users, party) {
+    if (!party) {
+      return false;
+    }
+
+    return users.filter((user) => {
+      // if not the owner and not invited
+      return user._id !== party.owner && !_.contains(party.invited, user._id);
+    });
+  }
+}
-- 
2.7.4


From 9796e4c08f25139110c6901dd5c53b8f7dba2f16 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:38:26 +0200
Subject: [PATCH 388/412] Step 23.13: Return an empty array instead of false

---
 imports/ui/filters/uninvitedPipe.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/filters/uninvitedPipe.ts b/imports/ui/filters/uninvitedPipe.ts
index 523c74d..b40208e 100644
--- a/imports/ui/filters/uninvitedPipe.ts
+++ b/imports/ui/filters/uninvitedPipe.ts
@@ -9,7 +9,7 @@ const name = 'uninvited';
 export class UninvitedPipe {
   transform(users, party) {
     if (!party) {
-      return false;
+      return [];
     }
 
     return users.filter((user) => {
-- 
2.7.4


From c0a7e1f023ac1f2a239f3bd678ebf912d50040d4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:41:15 +0200
Subject: [PATCH 389/412] Step 23.14: Use Component decorator

---
 imports/ui/components/partyUninvited/partyUninvited.ts | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.ts b/imports/ui/components/partyUninvited/partyUninvited.ts
index 7b9d39f..eb66e42 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.ts
+++ b/imports/ui/components/partyUninvited/partyUninvited.ts
@@ -1,5 +1,6 @@
 import * as angular from 'angular';
 import * as angularMeteor from 'angular-meteor';
+import { Component } from '@angular/core';
 
 import { Meteor } from 'meteor/meteor';
 
@@ -7,6 +8,10 @@ import template from './partyUninvited.html';
 import UninvitedFilter from '../../filters/uninvitedFilter';
 import DisplayNameFilter from '../../filters/displayNameFilter';
 
+@Component({
+  template,
+  selector: 'party-uninvited'
+})
 class PartyUninvited {
   constructor($scope) {
     'ngInject';
-- 
2.7.4


From f7f3ac447590ccfc866f96dd189ab56d2a5f598b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:42:41 +0200
Subject: [PATCH 390/412] Step 23.15: Use Pipes instead of Filters

---
 imports/ui/components/partyUninvited/partyUninvited.ts | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.ts b/imports/ui/components/partyUninvited/partyUninvited.ts
index eb66e42..8f0a56e 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.ts
+++ b/imports/ui/components/partyUninvited/partyUninvited.ts
@@ -5,12 +5,16 @@ import { Component } from '@angular/core';
 import { Meteor } from 'meteor/meteor';
 
 import template from './partyUninvited.html';
-import UninvitedFilter from '../../filters/uninvitedFilter';
-import DisplayNameFilter from '../../filters/displayNameFilter';
+import { UninvitedPipe } from '../../filters/uninvitedPipe';
+import { DisplayNamePipe } from '../../filters/displayNamePipe';
 
 @Component({
   template,
-  selector: 'party-uninvited'
+  selector: 'party-uninvited',
+  pipes: [
+    UninvitedPipe,
+    DisplayNamePipe
+  ]
 })
 class PartyUninvited {
   constructor($scope) {
@@ -42,9 +46,7 @@ const name = 'partyUninvited';
 
 // create a module
 export default angular.module(name, [
-  angularMeteor,
-  UninvitedFilter.name,
-  DisplayNameFilter.name
+  angularMeteor
 ]).component(name, {
   template,
   controllerAs: name,
-- 
2.7.4


From aa20bf0ab8c5cdd90993887c6f00647112d0a423 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:43:28 +0200
Subject: [PATCH 391/412] Step 23.16: Extend by MeteorComponent

---
 imports/ui/components/partyUninvited/partyUninvited.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.ts b/imports/ui/components/partyUninvited/partyUninvited.ts
index 8f0a56e..56de806 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.ts
+++ b/imports/ui/components/partyUninvited/partyUninvited.ts
@@ -1,6 +1,7 @@
 import * as angular from 'angular';
 import * as angularMeteor from 'angular-meteor';
 import { Component } from '@angular/core';
+import { MeteorComponent } from 'angular2-meteor';
 
 import { Meteor } from 'meteor/meteor';
 
@@ -16,9 +17,10 @@ import { DisplayNamePipe } from '../../filters/displayNamePipe';
     DisplayNamePipe
   ]
 })
-class PartyUninvited {
+class PartyUninvited extends MeteorComponent {
   constructor($scope) {
     'ngInject';
+    super();
 
     $scope.viewModel(this);
 
-- 
2.7.4


From 289032aafbbbcfcb2eec206582338e8fb3104bac Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:44:43 +0200
Subject: [PATCH 392/412] Step 23.17: Switch to MeteorComponent API

---
 imports/ui/components/partyUninvited/partyUninvited.ts | 11 +++--------
 1 file changed, 3 insertions(+), 8 deletions(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.ts b/imports/ui/components/partyUninvited/partyUninvited.ts
index 56de806..2f31a7c 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.ts
+++ b/imports/ui/components/partyUninvited/partyUninvited.ts
@@ -18,16 +18,11 @@ import { DisplayNamePipe } from '../../filters/displayNamePipe';
   ]
 })
 class PartyUninvited extends MeteorComponent {
-  constructor($scope) {
-    'ngInject';
+  constructor() {
     super();
 
-    $scope.viewModel(this);
-
-    this.helpers({
-      users() {
-        return Meteor.users.find({});
-      }
+    this.autorun(() => {
+      this.users = Meteor.users.find({}).fetch();
     });
   }
 
-- 
2.7.4


From 113deb4c9379c4eb147725bb1f4623fea1a2b396 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:46:33 +0200
Subject: [PATCH 393/412] Step 23.18: Use downgraded Ng2 Component

---
 imports/ui/components/partyUninvited/partyUninvited.ts | 10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.ts b/imports/ui/components/partyUninvited/partyUninvited.ts
index 2f31a7c..ea3094d 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.ts
+++ b/imports/ui/components/partyUninvited/partyUninvited.ts
@@ -8,6 +8,7 @@ import { Meteor } from 'meteor/meteor';
 import template from './partyUninvited.html';
 import { UninvitedPipe } from '../../filters/uninvitedPipe';
 import { DisplayNamePipe } from '../../filters/displayNamePipe';
+import { upgradeAdapter } from '../../upgradeAdapter';
 
 @Component({
   template,
@@ -44,11 +45,4 @@ const name = 'partyUninvited';
 // create a module
 export default angular.module(name, [
   angularMeteor
-]).component(name, {
-  template,
-  controllerAs: name,
-  bindings: {
-    party: '<'
-  },
-  controller: PartyUninvited
-});
+]).directive(name, upgradeAdapter.downgradeNg2Component(PartyUninvited));
-- 
2.7.4


From d839f4feff31a46cc001677eecd3cbb314cbe3f8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:47:23 +0200
Subject: [PATCH 394/412] Step 23.19: Define binding

---
 imports/ui/components/partyUninvited/partyUninvited.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.ts b/imports/ui/components/partyUninvited/partyUninvited.ts
index ea3094d..677eb55 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.ts
+++ b/imports/ui/components/partyUninvited/partyUninvited.ts
@@ -1,6 +1,6 @@
 import * as angular from 'angular';
 import * as angularMeteor from 'angular-meteor';
-import { Component } from '@angular/core';
+import { Component, Input } from '@angular/core';
 import { MeteorComponent } from 'angular2-meteor';
 
 import { Meteor } from 'meteor/meteor';
@@ -19,6 +19,8 @@ import { upgradeAdapter } from '../../upgradeAdapter';
   ]
 })
 class PartyUninvited extends MeteorComponent {
+  @Input() party: any;
+
   constructor() {
     super();
 
-- 
2.7.4


From 45c4b6caa7116bdc3cda746d1e3474330c5d4313 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:49:03 +0200
Subject: [PATCH 395/412] Step 23.20: Remove prefix in template

---
 imports/ui/components/partyUninvited/partyUninvited.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index 84b3eaf..0d7f5b3 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -3,10 +3,10 @@
 </h4>
 
 <md-list>
-  <md-list-item ng-repeat="user in partyUninvited.users | uninvitedFilter:partyUninvited.party" ng-click="partyUninvited.invite(user)">
+  <md-list-item ng-repeat="user in users | uninvitedFilter:party" ng-click="invite(user)">
     <p>{{ user | displayNameFilter }}</p>
   </md-list-item>
-  <md-list-item ng-if="(partyUninvited.users | uninvitedFilter:partyUninvited.party).length <= 0">
+  <md-list-item ng-if="(users | uninvitedFilter:party).length <= 0">
     Everyone are already invited.
   </md-list-item>
 </md-list>
-- 
2.7.4


From e1fce62fa159157abcbc47803bde5e396ee4024f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:50:26 +0200
Subject: [PATCH 396/412] Step 23.21: Switch to pipes

---
 imports/ui/components/partyUninvited/partyUninvited.html | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index 0d7f5b3..4297572 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -3,10 +3,10 @@
 </h4>
 
 <md-list>
-  <md-list-item ng-repeat="user in users | uninvitedFilter:party" ng-click="invite(user)">
-    <p>{{ user | displayNameFilter }}</p>
+  <md-list-item ng-repeat="user in users | uninvited:party" ng-click="invite(user)">
+    <p>{{ user | displayName }}</p>
   </md-list-item>
-  <md-list-item ng-if="(users | uninvitedFilter:party).length <= 0">
+  <md-list-item ng-if="(users | uninvited:party).length <= 0">
     Everyone are already invited.
   </md-list-item>
 </md-list>
-- 
2.7.4


From 3f107e5e8d64ffdd5b5a7a23d25433d13c3b011c Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:50:47 +0200
Subject: [PATCH 397/412] Step 23.22: Switch to ngFor

---
 imports/ui/components/partyUninvited/partyUninvited.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index 4297572..50de7a3 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -3,7 +3,7 @@
 </h4>
 
 <md-list>
-  <md-list-item ng-repeat="user in users | uninvited:party" ng-click="invite(user)">
+  <md-list-item *ngFor="let user of users | uninvited:party" ng-click="invite(user)">
     <p>{{ user | displayName }}</p>
   </md-list-item>
   <md-list-item ng-if="(users | uninvited:party).length <= 0">
-- 
2.7.4


From 05058f8e81b5423b2feaacb133ddc48ed9e99a1a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:51:10 +0200
Subject: [PATCH 398/412] Step 23.23: Switch to ngIf

---
 imports/ui/components/partyUninvited/partyUninvited.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index 50de7a3..ee66c5c 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -6,7 +6,7 @@
   <md-list-item *ngFor="let user of users | uninvited:party" ng-click="invite(user)">
     <p>{{ user | displayName }}</p>
   </md-list-item>
-  <md-list-item ng-if="(users | uninvited:party).length <= 0">
+  <md-list-item *ngIf="(users | uninvited:party).length <= 0">
     Everyone are already invited.
   </md-list-item>
 </md-list>
-- 
2.7.4


From 36426413c40d3445300dda34397c870269951d2f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 18:51:26 +0200
Subject: [PATCH 399/412] Step 23.24: Switch to (click)

---
 imports/ui/components/partyUninvited/partyUninvited.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.html b/imports/ui/components/partyUninvited/partyUninvited.html
index ee66c5c..86907aa 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.html
+++ b/imports/ui/components/partyUninvited/partyUninvited.html
@@ -3,7 +3,7 @@
 </h4>
 
 <md-list>
-  <md-list-item *ngFor="let user of users | uninvited:party" ng-click="invite(user)">
+  <md-list-item *ngFor="let user of users | uninvited:party" (click)="invite(user)">
     <p>{{ user | displayName }}</p>
   </md-list-item>
   <md-list-item *ngIf="(users | uninvited:party).length <= 0">
-- 
2.7.4


From 8220171e7d328d8e0a3bdc11e92b1eeebb5d760d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 19:04:45 +0200
Subject: [PATCH 400/412] Step 23.25: Use one-way binding

---
 imports/ui/components/partyDetails/partyDetails.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index 59fe896..b958299 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -24,5 +24,5 @@
     <party-map flex="50" location="partyDetails.party.location"></party-map>
   </div>
 
-  <party-uninvited flex party="partyDetails.party" ng-show="partyDetails.canInvite()"></party-uninvited>
+  <party-uninvited flex [party]="partyDetails.party" ng-show="partyDetails.canInvite()"></party-uninvited>
 </div>
-- 
2.7.4


From 0dae4247cd65d936520e101d0c1a46ce80add4d7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 19:26:15 +0200
Subject: [PATCH 401/412] Step 23.26: Implement Component decorator in
 PartyDetails

---
 imports/ui/components/partyDetails/partyDetails.ts | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.ts b/imports/ui/components/partyDetails/partyDetails.ts
index f8f5565..0795403 100644
--- a/imports/ui/components/partyDetails/partyDetails.ts
+++ b/imports/ui/components/partyDetails/partyDetails.ts
@@ -1,6 +1,7 @@
 import * as angular from 'angular';
 import * as angularMeteor from 'angular-meteor';
 import * as uiRouter from 'angular-ui-router';
+import { Component } from '@angular/core';
 
 import { Meteor } from 'meteor/meteor';
 
@@ -8,7 +9,15 @@ import template from './partyDetails.html';
 import { Parties } from '../../../api/parties';
 import PartyUninvited from '../partyUninvited/partyUninvited';
 import PartyMap from '../partyMap/partyMap';
+import { upgradeAdapter } from '../../upgradeAdapter';
 
+@Component({
+  template,
+  selector: 'party-details',
+  directives: [
+    PartyUninvited
+  ]
+})
 class PartyDetails {
   constructor($stateParams, $scope, $reactive) {
     'ngInject';
-- 
2.7.4


From 44ef173c9fc30b1f8dbccee48b25f6d65c2a83b1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 19:26:55 +0200
Subject: [PATCH 402/412] Step 23.27: upgrade PartyMap to be used inside Ng2
 Component

---
 imports/ui/components/partyDetails/partyDetails.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.ts b/imports/ui/components/partyDetails/partyDetails.ts
index 0795403..366b7b3 100644
--- a/imports/ui/components/partyDetails/partyDetails.ts
+++ b/imports/ui/components/partyDetails/partyDetails.ts
@@ -15,7 +15,8 @@ import { upgradeAdapter } from '../../upgradeAdapter';
   template,
   selector: 'party-details',
   directives: [
-    PartyUninvited
+    PartyUninvited,
+    upgradeAdapter.upgradeNg1Component('partyMap'),
   ]
 })
 class PartyDetails {
-- 
2.7.4


From f85d392f9cc8def74051a6012168f3b09881d1c0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 19:28:14 +0200
Subject: [PATCH 403/412] Step 23.28: Use MeteorComponent

---
 imports/ui/components/partyDetails/partyDetails.ts | 36 ++++++++++------------
 1 file changed, 17 insertions(+), 19 deletions(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.ts b/imports/ui/components/partyDetails/partyDetails.ts
index 366b7b3..37b516b 100644
--- a/imports/ui/components/partyDetails/partyDetails.ts
+++ b/imports/ui/components/partyDetails/partyDetails.ts
@@ -2,6 +2,7 @@ import * as angular from 'angular';
 import * as angularMeteor from 'angular-meteor';
 import * as uiRouter from 'angular-ui-router';
 import { Component } from '@angular/core';
+import { MeteorComponent } from 'angular2-meteor';
 
 import { Meteor } from 'meteor/meteor';
 
@@ -19,30 +20,27 @@ import { upgradeAdapter } from '../../upgradeAdapter';
     upgradeAdapter.upgradeNg1Component('partyMap'),
   ]
 })
-class PartyDetails {
-  constructor($stateParams, $scope, $reactive) {
-    'ngInject';
+class PartyDetails extends MeteorComponent {
+  partyId: string;
+  party: Object = {};
+  users: Object[];
+  isLoggedIn: boolean;
 
-    $reactive(this).attach($scope);
-
-    this.partyId = $stateParams.partyId;
+  constructor() {
+    super();
 
     this.subscribe('parties');
     this.subscribe('users');
 
-    this.helpers({
-      party() {
-        return Parties.findOne({
-          _id: $stateParams.partyId
-        });
-      },
-      users() {
-        return Meteor.users.find({});
-      },
-      isLoggedIn() {
-        return !!Meteor.userId();
-      }
-    });
+    this.autorun(() => {
+      this.party = Parties.findOne({
+        _id: this.partyId
+      });
+
+      this.users = Meteor.users.find({}).fetch();
+
+      this.isLoggedIn = !!Meteor.userId();
+    }, true);
   }
 
   canInvite() {
-- 
2.7.4


From c257e34218fa2385e47ec5f3d11a79b531e6a1f1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 19:29:10 +0200
Subject: [PATCH 404/412] Step 23.29: Downgrade PartyDetails to ng1 directive

---
 imports/ui/components/partyDetails/partyDetails.ts | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.ts b/imports/ui/components/partyDetails/partyDetails.ts
index 37b516b..5013227 100644
--- a/imports/ui/components/partyDetails/partyDetails.ts
+++ b/imports/ui/components/partyDetails/partyDetails.ts
@@ -77,13 +77,8 @@ const name = 'partyDetails';
 export default angular.module(name, [
   angularMeteor,
   uiRouter,
-  PartyUninvited.name,
   PartyMap.name
-]).component(name, {
-  template,
-  controllerAs: name,
-  controller: PartyDetails
-})
+]).directive(name, upgradeAdapter.downgradeNg2Component(PartyDetails))
   .config(config);
 
 function config($stateProvider) {
-- 
2.7.4


From ad770923faee85967976d44e92e25be173bbf613 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 19:30:13 +0200
Subject: [PATCH 405/412] Step 23.30: Implement ng2 component inside ui-router
 template

---
 imports/ui/components/partyDetails/partyDetails.ts | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.ts b/imports/ui/components/partyDetails/partyDetails.ts
index 5013227..8ae4f5d 100644
--- a/imports/ui/components/partyDetails/partyDetails.ts
+++ b/imports/ui/components/partyDetails/partyDetails.ts
@@ -86,7 +86,12 @@ function config($stateProvider) {
 
   $stateProvider.state('partyDetails', {
     url: '/parties/:partyId',
-    template: '<party-details></party-details>',
+    template: '<party-details [party-id]="partyDetailsRoute.partyId"></party-details>',
+    controllerAs: 'partyDetailsRoute',
+    controller: function($stateParams, $scope) {
+      'ngInject';
+      this.partyId = $stateParams.partyId;
+    },
     resolve: {
       currentUser($q) {
         if (Meteor.userId() === null) {
-- 
2.7.4


From 83e06a544ebc5cbfa89b0aa6569e6b5b0da046d7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 19:31:08 +0200
Subject: [PATCH 406/412] Step 23.31: Define bindings

---
 imports/ui/components/partyDetails/partyDetails.ts | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.ts b/imports/ui/components/partyDetails/partyDetails.ts
index 8ae4f5d..7d0ae80 100644
--- a/imports/ui/components/partyDetails/partyDetails.ts
+++ b/imports/ui/components/partyDetails/partyDetails.ts
@@ -1,7 +1,7 @@
 import * as angular from 'angular';
 import * as angularMeteor from 'angular-meteor';
 import * as uiRouter from 'angular-ui-router';
-import { Component } from '@angular/core';
+import { Component, Input, Output } from '@angular/core';
 import { MeteorComponent } from 'angular2-meteor';
 
 import { Meteor } from 'meteor/meteor';
@@ -21,8 +21,8 @@ import { upgradeAdapter } from '../../upgradeAdapter';
   ]
 })
 class PartyDetails extends MeteorComponent {
-  partyId: string;
-  party: Object = {};
+  @Input() partyId: string;
+  @Output() party: Object = {};
   users: Object[];
   isLoggedIn: boolean;
 
-- 
2.7.4


From 7351aa74905a0ea361c0c3650b3a1a646dd70d86 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 19:51:38 +0200
Subject: [PATCH 407/412] Step 23.32: Remove ng1 from PartyUninvited

---
 imports/ui/components/partyUninvited/partyUninvited.ts | 12 +-----------
 1 file changed, 1 insertion(+), 11 deletions(-)

diff --git a/imports/ui/components/partyUninvited/partyUninvited.ts b/imports/ui/components/partyUninvited/partyUninvited.ts
index 677eb55..239c1b2 100644
--- a/imports/ui/components/partyUninvited/partyUninvited.ts
+++ b/imports/ui/components/partyUninvited/partyUninvited.ts
@@ -1,5 +1,3 @@
-import * as angular from 'angular';
-import * as angularMeteor from 'angular-meteor';
 import { Component, Input } from '@angular/core';
 import { MeteorComponent } from 'angular2-meteor';
 
@@ -8,7 +6,6 @@ import { Meteor } from 'meteor/meteor';
 import template from './partyUninvited.html';
 import { UninvitedPipe } from '../../filters/uninvitedPipe';
 import { DisplayNamePipe } from '../../filters/displayNamePipe';
-import { upgradeAdapter } from '../../upgradeAdapter';
 
 @Component({
   template,
@@ -18,7 +15,7 @@ import { upgradeAdapter } from '../../upgradeAdapter';
     DisplayNamePipe
   ]
 })
-class PartyUninvited extends MeteorComponent {
+export default class PartyUninvited extends MeteorComponent {
   @Input() party: any;
 
   constructor() {
@@ -41,10 +38,3 @@ class PartyUninvited extends MeteorComponent {
     );
   }
 }
-
-const name = 'partyUninvited';
-
-// create a module
-export default angular.module(name, [
-  angularMeteor
-]).directive(name, upgradeAdapter.downgradeNg2Component(PartyUninvited));
-- 
2.7.4


From 202b370b28303a7dc441cc169b61b65a01761dc0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 19:53:13 +0200
Subject: [PATCH 408/412] Step 23.33: Install material2

---
 package.json | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/package.json b/package.json
index 191802a..612a1ce 100644
--- a/package.json
+++ b/package.json
@@ -13,6 +13,10 @@
     "@angular/platform-browser": "^2.1.0",
     "@angular/platform-browser-dynamic": "^2.1.0",
     "@angular/upgrade": "^2.1.0",
+    "@angular2-material/button": "^2.0.0-alpha.8-2",
+    "@angular2-material/checkbox": "^2.0.0-alpha.8-2",
+    "@angular2-material/core": "^2.0.0-alpha.8-2",
+    "@angular2-material/input": "^2.0.0-alpha.8-2",
     "angular": "^1.5.3",
     "angular-animate": "^1.5.3",
     "angular-aria": "^1.5.3",
@@ -35,8 +39,7 @@
     "ng-img-crop": "^0.2.0",
     "reflect-metadata": "^0.1.8",
     "rxjs": "^5.0.0-rc.1",
-    "underscore": "^1.8.3",
-    "zone.js": "^0.6.25"
+    "underscore": "^1.8.3"
   },
   "devDependencies": {
     "angular-mocks": "^1.5.3"
-- 
2.7.4


From dea06e9417a94db8d795ef859d1390cacde44bd9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 19:55:35 +0200
Subject: [PATCH 409/412] Step 23.34: Import material2 directives

---
 imports/ui/components/partyDetails/partyDetails.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/imports/ui/components/partyDetails/partyDetails.ts b/imports/ui/components/partyDetails/partyDetails.ts
index 7d0ae80..44b0263 100644
--- a/imports/ui/components/partyDetails/partyDetails.ts
+++ b/imports/ui/components/partyDetails/partyDetails.ts
@@ -3,6 +3,9 @@ import * as angularMeteor from 'angular-meteor';
 import * as uiRouter from 'angular-ui-router';
 import { Component, Input, Output } from '@angular/core';
 import { MeteorComponent } from 'angular2-meteor';
+import { MdButton } from '@angular2-material/button';
+import { MdInput } from '@angular2-material/input';
+import { MdCheckbox } from '@angular2-material/checkbox';
 
 import { Meteor } from 'meteor/meteor';
 
@@ -18,6 +21,9 @@ import { upgradeAdapter } from '../../upgradeAdapter';
   directives: [
     PartyUninvited,
     upgradeAdapter.upgradeNg1Component('partyMap'),
+    MdButton,
+    MdInput,
+    MdCheckbox,
   ]
 })
 class PartyDetails extends MeteorComponent {
-- 
2.7.4


From d725429749fdd351aab19a3c9e9356fa27983305 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Thu, 19 May 2016 20:10:28 +0200
Subject: [PATCH 410/412] Step 23.35: Implement material2

---
 imports/ui/components/partyDetails/partyDetails.html | 20 +++++++-------------
 1 file changed, 7 insertions(+), 13 deletions(-)

diff --git a/imports/ui/components/partyDetails/partyDetails.html b/imports/ui/components/partyDetails/partyDetails.html
index b958299..6e15443 100644
--- a/imports/ui/components/partyDetails/partyDetails.html
+++ b/imports/ui/components/partyDetails/partyDetails.html
@@ -1,28 +1,22 @@
-<div layout="column" layout-padding>
+<div *ngIf="party" layout="column" layout-padding>
   <div layout="column" layout-gt-sm="row"  layout-padding>
     <form flex="50" layout="column">
-      <md-input-container>
-        <label>Party name</label>
-        <input ng-model="partyDetails.party.name" ng-disabled="!partyDetails.isLoggedIn">
-      </md-input-container>
+      <md-input [(ngModel)]="party.name" [disabled]="!isLoggedIn" placeholder="Party name"></md-input>
 
-      <md-input-container>
-        <label>Description</label>
-        <input ng-model="partyDetails.party.description" ng-disabled="!partyDetails.isLoggedIn">
-      </md-input-container>
+      <md-input [(ngModel)]="party.description" [disabled]="!isLoggedIn" placeholder="Description"></md-input>
 
       <div>
-        <md-checkbox ng-model="partyDetails.party.public" ng-disabled="!partyDetails.isLoggedIn" aria-label="Public Party?">
+        <md-checkbox [checked]="party.public">
           Public Party?
         </md-checkbox>
       </div>
 
       <div>
-        <md-button ng-click="partyDetails.save()" class="md-primary md-raised">Save</md-button>
+        <md-button md-raised-button color="primary" (click)="save()">Save</md-button>
       </div>
     </form>
-    <party-map flex="50" location="partyDetails.party.location"></party-map>
+    <party-map flex="50" [location]="party.location"></party-map>
   </div>
 
-  <party-uninvited flex [party]="partyDetails.party" ng-show="partyDetails.canInvite()"></party-uninvited>
+  <party-uninvited flex [party]="party" *ngIf="canInvite()"></party-uninvited>
 </div>
-- 
2.7.4


From 5706831fd8b32683f13e161caf0fc6e3cae6dc33 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 10:27:29 +0200
Subject: [PATCH 411/412] Add README

---
 README.md | 61 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 61 insertions(+)
 create mode 100644 README.md

diff --git a/README.md b/README.md
new file mode 100644
index 0000000..95fd557
--- /dev/null
+++ b/README.md
@@ -0,0 +1,61 @@
+# meteor-angular-socially - [Tutorial's site](http://angular-meteor.com/tutorialIntro)
+angular-meteor example and tutorial app.
+
+The tutorial starts at branch 'step_00' till the last step.
+
+The master branch is always equal to the last step.
+
+Here is the deployed final version - http://socially-step22.meteor.com/
+
+Please contribute to the tutorial.
+Pull request the master branch to add new features or pull request specific step to improve that step.
+
+Our goal in this tutorial is to add more steps as we go along, to cover as many use cases as possible.
+
+Thanks @MilosStanic for writing step 18 on angular-material
+
+An example with the `controller as` syntax can be found in [this branch](https://github.com/Urigo/meteor-angular-socially/tree/step_12_controller_as_vm).
+
+# angular-meteor University! <a href="http://angularjs.meteor.com/"><img src="http://angular-meteor.com/images/logo.png" /></a>  
+
+The angular-meteor university is a community learning experiment, we would like to create a similar experience to the [hueniversity](https://github.com/hueniverse/hueniversity)
+
+
+[![Join the chat at https://gitter.im/Urigo/angular-meteor](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Urigo/angular-meteor?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
+
+The first assignments will be to rewrite the tutorial steps, and follow the latest angular-meteor API , in a more [consistent style](https://github.com/johnpapa/angular-styleguide).
+We also hope the community will propose better solutions than the current ones.
+When we will catch up with the latest steps we will create new steps.
+
+### What am I going to learn?
+You will learn how to build a full stack application using meteor and angular. It will start with the basics and move on to the more advanced topic such as users and authentication, application architecture, reactivity, mobile app, ionic, working with files, Angular Server, ES6 and more.
+
+
+### What do I need to know?
+You should feel comfortable writing simple functions in JavaScript, working with GitHub, using basic git commands, have a basic familiarity with mongoDB, and be able to pick up new subjects by reading tutorials and documentation.
+
+### How advanced is this course?
+We'll start from the basics and make our way to the most advanced topics. The way this course is structured, you can choose which assignments to participate in, so more experienced developers can "sit out" or help others during the basic assignments and participate when it gets to areas they are not as strong in. However, since teaching is one of the most effective ways to learn, we believe that participating early will improve the existing skills of advanced developers.
+The assignment will include just enough information to get you going, but you will need to do most of the learning on your own by using the wide range of online resources available. However, the real benefit of this process will come from the code review of your Pull Request. This is where expert developers will review your work and provide you specific and actionable feedback.
+
+### How does it work?
+First, read the [Code of Conduct](https://github.com/Urigo/meteor-angular-socially/blob/master/COC.md) !
+
+Simple, you start by forking this repo.
+Every few days a new issue will be posted with an [`assignment` label](https://github.com/Urigo/meteor-angular-socially/labels/assignment)
+. If you would like to participate in the assignment, try to solve it and when you are done, submit a Pull Request back to this repo to the `step_NUMBER_u` branch. Make sure your code complies with the [John Papa Angular Style Guide](https://github.com/johnpapa/angular-styleguide).
+While you wait for the assignment to close, take a look at what others are submitting and see if you can improve your own solution (borrow ideas, add tests, write examples, update the documentation). If you see ways in which others can improve their solution, please don’t hesitate to comment on their Pull Request.
+Each assignment will have a final submission date. When the issue expires, one of the Pull Requests submitted will be picked and merged and published as the new tutorial step. Any follow up assignments will be based on the merged code.
+Before starting the next assignment, make sure [your fork matches the current](https://github.com/Urigo/meteor-angular-socially/blob/master/guides/git.md ) assignment step branch (`step_NUMBER_u`) since only one Pull Request can be accepted.
+
+### How can I help?
+
+There are lots of way you can help make this experiment succeed and help shape a new format for teaching development skills:
+Submit Pull Requests to improve this readme, add examples, write quick tutorials on how to work with git, etc.
+Add new steps to angular-meteor-socially tutorial.
+Look for issues with a [help wanted label](https://github.com/Urigo/meteor-angular-socially/labels/help%20wanted) and help with those.
+Randomly pick submitted Pull Request and review them, offering advice and helping others improve their skills.
+Submit Pull Request or open issues with proposals for [angular-meteor](https://github.com/Urigo/angular-meteor)
+
+### Anything else?
+[Open an issue](https://github.com/Urigo/meteor-angular-socially/issues/new), it's free.
-- 
2.7.4


From f6ef2b229ca9a7d2411decc5547971141ed58932 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@ster-project.pl>
Date: Mon, 11 Apr 2016 10:28:34 +0200
Subject: [PATCH 412/412] Add EDIT_THIS_TUTORIAL.md

---
 EDIT_THIS_TUTORIAL.md | 192 ++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 192 insertions(+)
 create mode 100644 EDIT_THIS_TUTORIAL.md

diff --git a/EDIT_THIS_TUTORIAL.md b/EDIT_THIS_TUTORIAL.md
new file mode 100644
index 0000000..b0f831a
--- /dev/null
+++ b/EDIT_THIS_TUTORIAL.md
@@ -0,0 +1,192 @@
+## How to edit this tutorial?
+
+First, you need to understand how this tutorial works and the importance of the commits.
+This tutorial is based on [Meteor's tutorial tools](http://meteor-tutorial-tools.readthedocs.org/en/latest/) and use it's tools to create a simple diff-boxes for code changes accross the commit.
+
+So the very first thing you need to know it that this specific tutorial is used in [Angular1 Meteor tutorials](http://www.angular-meteor.com/tutorials/socially/angular1/bootstrapping) and every diff box you see there is generated automatically from the commits in this repository.
+
+So what is the flow?
+- Create commits with specific format - the format in use in this repository and in Meteor tutorial tools is:
+
+  ````Step XX.XX: TEXT_TEXT_TEXT````
+
+  (where XX.XX are numbers that relates to the step in the tutorial you write, and TEXT_TEXT_TEXT is the title of the generated diffbox you will get).
+
+- Generate PATCH file, as described [here](http://meteor-tutorial-tools.readthedocs.org/en/latest/new-tutorial/), it's just running a simple `git` command that generates a file from all of you commits in the repository.
+
+- Create a Meteor tutorial app and define the tutorial objects - also described [here](http://meteor-tutorial-tools.readthedocs.org/en/latest/new-tutorial/).
+
+- Write your tutorial and use the `diffBox` helper to generate the actual HTML of the DiffBox.
+
+**Note that commit without the speical format are also legal, but won't be available for creating diff-box!**
+
+## How to add new steps to the tutorial?
+
+Adding new steps to your tutorial is easy, just get the latest version of the repository, and do your changes and commit them.
+It is recomended to make only ONE CHANGE in ONE FILE in ONE COMMIT, which means that after you make a simple change in only one file, commit that single file with a commit message with the right format, for example:
+
+` Step 10.12: This is new!`
+
+I recomend to perform multiple commit to your local repository, and just after you sure that they are fine, to `git push` them to the remote repository, because it is much easier to make change in the local repository.
+
+## How to undo my lastest commit?
+
+So you done a commit and you are not so sure about the change you made, or the order of it? you can just undo your lastest commit with the following command:
+
+` git reset HEAD~1`
+
+Note that the files you changes goes back to be uncommited change, and if it's a new file it will be removed from git and new you need to `git add` it again.
+
+## How to edit existing commits?
+
+So this is there it becomes interesting - we want to keep the order of the commits as it should be in the tutorial.
+
+Let's understand it with this order of commits:
+
+````
+Step 1.4: Create a new service
+Step 1.3: Create a new view
+Step 1.2: Create a new component
+Step 1.1: Add the application dependencies
+Step 1.0: Create new application
+````
+
+So now we created our tutorial, and we noticed that we have a bug in `Step 1.2` - our instinct is to go to the latest commit (most updated state of the repository) and add a new commit, and this will be the result:
+
+````
+Fix for step 1.2
+Step 1.4: Create a new service
+Step 1.3: Create a new view
+Step 1.2: Create a new component
+Step 1.1: Add the application dependencies
+Step 1.0: Create new application
+````
+
+So now we have a commit on top of the rest of the commit and if we get the lastest repository commit - everything will work great and we will have the bug fixed we just applied.
+
+This is good for regular applications or projects - but in case of a tutorial it isn't good at all - if we generate the diff box for the commit with `Step 1.2` we will see the code with the bug!
+
+So as you might already understand - we need to edit the actual `Step 1.2` commit, without adding new commits!
+
+In order to edit existing commits, we need to get the actual commit with the bug, edit it, keep the same commit message and the same commit id and then generate a new PATCH file.
+
+This might sound complicated but it isn't, it just requires from you to know how to use some `git` commands and basic `vi` commands. I also recommend to use [SourceTree](https://www.sourcetreeapp.com/) - it's great Git GUI tool, but it is not enough and note that you **must** know how to use the command line git.
+
+
+So let's edit the commit:
+
+- Go the the project's repository after you clone it, make sure you all up-to-date (`git pull`) and make sure that you do not have any commits that you did not pushed, or any other uncomitted changes! (**This is VERY important**)
+- Find the commit id you want to edit, you can simply do it in SourceTree. For example, here:
+![1](http://s10.postimg.org/qs4f1d2nd/image.png)
+
+- So in our case, we want to edit commit id `d002ba8`, so we need to go back in time and to set our local repository to that commit. This done by running the following command:
+
+````
+  git rebase -i d002ba8~1
+````
+
+- Now you will get the Interactive Rebase screen of git - you will see your commit in the first line:
+
+![2](http://s8.postimg.org/sz0avbymt/Screen_Shot_2016_02_08_at_16_42_51.png)
+
+
+- Notice the `pick` near you commit? great! we want to edit that commit, so use your `vi` skills and change the word `pick` to `edit`, than exit and save your changes in `vi` (ESC, `:`, and then `wq!`).
+
+- Great, now you in edit mode, and the repository is set to the commit you want to edit! ** so now make your changes to the file / files **
+
+- Done with that file? Great. to keep the original commit and apply the changes to it, run:
+
+`  git commit --all --no-edit --amend`
+
+That command will commit **all** the files you changed, without **edit the commit message**, and it will **amend** you changes into the original commit.
+
+- So now you are done with the changes and updating the commit, you will need to add the next commits on top of the new commit you edited. so you need to continue with the rebase process, do it by running:
+
+`  git rebase --continue`
+
+And if you noticed in any step on the change the you made a mistake, you can always abort the rebase by running:
+
+`  git rebase --abort`
+
+- In some cases, this is the last step, but in most of the times, you notice that after you continue the rebase operation, git stops and tells you that you have to merge because of conflicts. This makes sense - you changed a file in some point of the repository, but the commits that comes next, also changes it and it depends on the previous version of the file.
+
+- So in order to merge your conflict, I recommend to open your working directory in WebStorm, right click on the root of your project, and select "Git > Resolve Conflicts":
+![3](http://s12.postimg.org/4yxlr4llp/Screen_Shot_2016_02_08_at_16_58_04.png)
+
+- In the next screen, resolve you conflicts and ** DO NOT MAKE ANY GIT ACTION FROM WEBSTORM**
+
+- Now go back to the command line, and run: `git rebase --continue`, and you will get a screen that tells you to modify your commit message, you can just ignore it and save it as-is (ESC, `:` and then `wq!`).
+
+- If it's compilicated file that changes a lot of time, you might have multiple merges that needed to be done!
+- And you are done now! you just need to update your remote repository with the changes, but in order to do it, you need to `git push` with the `--force` flag, because now that you changed the history of you commits, the repositories no longer match! So run `git push --force origin YOUR_BRANCH` (replace YOUR_BRANCH with the branch you want to push to, **be carful! if you do not specify it, you will push it to the master and you might override the whole repo!**
+
+## How to only edit the commit message?
+
+So if you know how to edit commint (read the previous explaination), changing a commit message is much easier.
+
+You just need to perform the same `git rebase` as in the previous question, and instead of using `edit`, use `reword` (or just `r`), note that you can do it to multiple commits in the same time.
+
+Then you will see the commit message in the git shell screen, just change it and then exit and save from the vi.
+
+Then just continue the rebase (`git rebase --continue`) and push it.
+
+## How to remove entire commit?
+
+You just need to perform the same `git rebase` as in the previous question, and in the `vi` screen you get, just removed the entire line of the commit you want to remove (vi shortcut: `dd`), and then continue the rebase.
+
+## How to split commit into two or more commits?
+
+Splitting commits is a tricky one - there are some ways to to it, but I recommend to undo the commit if you still can (if it's the last one) and do it again in splitted commits.
+
+But if you can't undo it, you can still solve this issue:
+
+- Do `git rebase` to your commit minus two commits, that means for example: `git rebase d0021ab~2` (note the 2 instead of 1 in the end of the line), now the commit you want to split will be second in the commits list.
+- Remove the commit you want to split by removing it's line (vi shortcut: `dd`).
+- Go to the first commit in the list now (which is the commit that comes before the one you want to split), and set it to `edit` mode.
+- Now make you changes in a different commits, instead of one, perform them manually, and to commit each single change, use: `git commit --all` (Note that we did not use `amend` flag so we do not change the commit we set to edit mode!), and in that screen that opens, set the commit message. do that for each one of the commits.
+- Now just continue your rebase with `git rebase --continue` and finish it like any other change you made in the git history.
+
+## How to handle Meteor packages and versions?
+
+Actually, changing versions and packages in Meteor app should be the same, but there is a file that Meteor manages by it self, called `.meteor/versions` - this file contains the versions of all the packages you use in your app.
+
+So if you `git rebase` to specific commit and modify the packages or update a package version, make sure to run your app as you used to (for example: `meteor`) and wait until Meteor done with the build - in this point, a new `.meteor/versions` file will be generated, so make sure that you commit and update it aswell.
+
+But now you will notice that in every step that you done some change with the packages, you have a conflict and you have to merge - this merge will be very hard to perform because of two generated files with a lot of lines and versions of packages - you do not have to deal with it that way!
+
+First, mark the `.meteor/versions` file as resolved conflict (does matter it's content right now) , and then set the content of the file to empty content.
+
+Now run your app and wait for it to finish the build, and you will notice that Meteor generated the correct and updates `versions` file! Just commit that file now and continue the rebase!
+
+
+## How to create a new tutorial app?
+
+Creating a new tutorial described [here](http://meteor-tutorial-tools.readthedocs.org/en/latest/new-tutorial/).
+
+## Another goods
+
+#### Step tag and step diff
+
+So after creating a few steps in your tutorial, you can create a link that shown that entire diff between two steps (not sub-steps!), the actual does not related to the tutorial tools but very useful if you want to provide your users the ability to see the whole changes for each step of the tutorial.
+
+So in order to do that, make sure you create a Git Tag for each steps you finish (In the last commit of the step), you can do it with SourceTree or in GitHub, it does not matter.
+
+So after adding more that one step and one tag, you can add to your tutotial link to page that shows the entire diff, for example:
+
+https://github.com/Urigo/meteor-angular-socially/compare/step_01...step_02
+
+This link shows the entire diff between the tag `step_01` and `step_02`.
+
+Note that after each change you made in the commits that required a force `push`, you need to create the tags again!
+
+#### Download link for a step
+
+Another good you get is the ability to get a link to download the entire tutorial example, so users can jump to step and start it from there with the updated code!
+
+To do that, just add a link in your tutorial, like this:
+
+https://github.com/Urigo/meteor-angular-socially/archive/step_21.zip
+
+You need ofcourse to change the repository url, and replace `step_21` with the name of the tag you created (explained in the previous section).
+
+Thanks it! now you can just download the entire project in each step!
-- 
2.7.4

